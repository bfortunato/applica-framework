define('actions.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getUserProfileImage = exports.GET_USER_PROFILE_IMAGE = exports.getUserCoverImage = exports.GET_USER_COVER_IMAGE = exports.expandMenuItem = exports.EXPAND_MENU_ITEM = exports.setActiveMenuItem = exports.SET_ACTIVE_MENU_ITEM = exports.setupMenu = exports.SETUP_MENU = exports.freeSelect = exports.FREE_SELECT = exports.getSelectValues = exports.GET_SELECT_VALUES = exports.getSelectEntities = exports.GET_SELECT_ENTITIES = exports.freeLookup = exports.FREE_LOOKUP = exports.getLookupValues = exports.GET_LOOKUP_VALUES = exports.getLookupResult = exports.GET_LOOKUP_RESULT = exports.freeEntities = exports.FREE_ENTITIES = exports.getEntity = exports.GET_ENTITY = exports.newEntity = exports.NEW_ENTITY = exports.saveEntity = exports.SAVE_ENTITY = exports.deleteEntities = exports.DELETE_ENTITIES = exports.loadEntities = exports.LOAD_ENTITIES = exports.getGrid = exports.GET_GRID = exports.confirmAccount = exports.CONFIRM_ACCOUNT = exports.setActivationCode = exports.SET_ACTIVATION_CODE = exports.recoverAccount = exports.RECOVER_ACCOUNT = exports.register = exports.REGISTER = exports.logout = exports.LOGOUT = exports.resumeSession = exports.RESUME_SESSION = exports.login = exports.LOGIN = undefined;

var _aj = require("./aj");

var aj = _interopRequireWildcard(_aj);

var _ajex = require("./utils/ajex");

var _session = require("./api/session");

var SessionApi = _interopRequireWildcard(_session);

var _account = require("./api/account");

var AccountApi = _interopRequireWildcard(_account);

var _responses = require("./api/responses");

var responses = _interopRequireWildcard(_responses);

var _plugins = require("./plugins");

var _lang = require("./utils/lang");

var _strings = require("./strings");

var _strings2 = _interopRequireDefault(_strings);

var _grids = require("./api/grids");

var GridsApi = _interopRequireWildcard(_grids);

var _entities = require("./api/entities");

var EntitiesApi = _interopRequireWildcard(_entities);

var _values = require("./api/values");

var ValuesApi = _interopRequireWildcard(_values);

var _underscore = require("./libs/underscore");

var _ = _interopRequireWildcard(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var LOGIN = exports.LOGIN = "LOGIN";
var login = exports.login = (0, _ajex.createAsyncAction)(LOGIN, function (data) {
    if (_.isEmpty(data.mail) || _.isEmpty(data.password)) {
        (0, _plugins.alert)((0, _strings2.default)("problemOccoured"), (0, _strings2.default)("mailAndPasswordRequired"), "warning");
        return;
    }

    aj.dispatch({
        type: LOGIN
    });

    (0, _plugins.showLoader)();
    SessionApi.start(data.mail, data.password).then(function (user) {
        (0, _plugins.hideLoader)();
        (0, _plugins.toast)((0, _strings2.default)("welcome") + " " + user.name);

        login.complete({ user: user });

        getUserProfileImage();
        getUserCoverImage();
    }).catch(function (e) {
        (0, _plugins.hideLoader)();
        (0, _plugins.alert)((0, _strings2.default)("ooops"), (0, _strings2.default)("badLogin"), "error");

        login.fail();
    });
});

var RESUME_SESSION = exports.RESUME_SESSION = "RESUME_SESSION";
var resumeSession = exports.resumeSession = (0, _ajex.createAsyncAction)(RESUME_SESSION, function (data) {
    aj.dispatch({
        type: RESUME_SESSION
    });

    SessionApi.resume().then(function (user) {
        (0, _plugins.hideLoader)();
        (0, _plugins.toast)((0, _strings2.default)("welcome") + " " + user.name);

        resumeSession.complete({ user: user });
        getUserProfileImage();
        getUserCoverImage();
    }).catch(function (e) {
        (0, _plugins.hideLoader)();

        resumeSession.fail();
    });
});

var LOGOUT = exports.LOGOUT = "LOGOUT";
var logout = exports.logout = aj.createAction(LOGOUT, function (data) {
    SessionApi.destroy().then(function () {
        aj.dispatch({
            type: LOGOUT
        });
    });
});

var REGISTER = exports.REGISTER = "REGISTER";
var register = exports.register = (0, _ajex.createAsyncAction)(REGISTER, function (data) {
    if (_.isEmpty(data.name) || _.isEmpty(data.mail) || _.isEmpty(data.password)) {
        (0, _plugins.alert)((0, _strings2.default)("problemOccoured"), (0, _strings2.default)("nameMailAndPasswordRequired"), "warning");
        return;
    }

    aj.dispatch({
        type: REGISTER
    });

    (0, _plugins.showLoader)((0, _strings2.default)("registering"));
    AccountApi.register(data.name, data.mail, data.password).then(function () {
        (0, _plugins.hideLoader)();

        var message = (0, _lang.format)((0, _strings2.default)("welcomeMessage"), data.name, data.mail);
        register.complete({ name: data.name, mail: data.mail, message: message });
    }).catch(function (e) {
        (0, _plugins.hideLoader)();
        (0, _plugins.alert)((0, _strings2.default)("ooops"), responses.msg(e), "error");

        register.fail();
    });
});

var RECOVER_ACCOUNT = exports.RECOVER_ACCOUNT = "RECOVER_ACCOUNT";
var recoverAccount = exports.recoverAccount = (0, _ajex.createAsyncAction)(RECOVER_ACCOUNT, function (data) {
    if (_.isEmpty(data.mail)) {
        (0, _plugins.alert)((0, _strings2.default)("problemOccoured"), (0, _strings2.default)("mailRequired"), "warning");
        return;
    }

    aj.dispatch({
        type: RECOVER_ACCOUNT
    });

    (0, _plugins.showLoader)();
    AccountApi.recover(data.mail).then(function () {
        (0, _plugins.hideLoader)();
        (0, _plugins.alert)((0, _strings2.default)("congratulations"), (0, _lang.format)((0, _strings2.default)("accountRecovered"), data.mail));

        recoverAccount.complete();
    }).catch(function (e) {
        (0, _plugins.hideLoader)();
        (0, _plugins.alert)((0, _strings2.default)("ooops"), responses.msg(e), "error");

        recoverAccount.fail();
    });
});

var SET_ACTIVATION_CODE = exports.SET_ACTIVATION_CODE = "SET_ACTIVATION_CODE";
var setActivationCode = exports.setActivationCode = aj.createAction(SET_ACTIVATION_CODE, function (data) {
    aj.dispatch({
        type: SET_ACTIVATION_CODE,
        activationCode: data.activationCode
    });
});

var CONFIRM_ACCOUNT = exports.CONFIRM_ACCOUNT = "CONFIRM_ACCOUNT";
var confirmAccount = exports.confirmAccount = (0, _ajex.createAsyncAction)(CONFIRM_ACCOUNT, function (data) {
    if (_.isEmpty(data.activationCode)) {
        (0, _plugins.alert)((0, _strings2.default)("problemOccoured"), (0, _strings2.default)("activationCodeRequired"), "warning");
        return;
    }

    aj.dispatch({
        type: CONFIRM_ACCOUNT
    });

    (0, _plugins.showLoader)();
    AccountApi.confirm(data.activationCode).then(function () {
        (0, _plugins.hideLoader)();
        (0, _plugins.alert)((0, _strings2.default)("congratulations"), (0, _strings2.default)("accountConfirmed"));

        confirmAccount.complete();
    }).catch(function (e) {
        (0, _plugins.hideLoader)();
        (0, _plugins.alert)((0, _strings2.default)("ooops"), responses.msg(e), "error");

        confirmAccount.fail();
    });
});

/** Grids actions **/
var GET_GRID = exports.GET_GRID = "GET_GRID";
var getGrid = exports.getGrid = (0, _ajex.createAsyncAction)(GET_GRID, function (data) {
    if (_.isEmpty(data.id)) {
        (0, _plugins.alert)((0, _strings2.default)("problemOccoured"), (0, _strings2.default)("pleaseSpecifyId"));
        return;
    }

    aj.dispatch({
        type: GET_GRID
    });

    (0, _plugins.showLoader)();
    GridsApi.getGrid(data.id).then(function (response) {
        (0, _plugins.hideLoader)();

        getGrid.complete({ grid: JSON.parse(response.value) });
    }).catch(function (e) {
        (0, _plugins.hideLoader)();
        (0, _plugins.alert)((0, _strings2.default)("ooops"), responses.msg(e), "error");

        getGrid.fail();
    });
});

/** Entities **/

var queries = {};

var LOAD_ENTITIES = exports.LOAD_ENTITIES = "LOAD_ENTITIES";
var loadEntities = exports.loadEntities = (0, _ajex.createAsyncAction)(LOAD_ENTITIES, function (data) {
    if (_.isEmpty(data.entity)) {
        (0, _plugins.alert)((0, _strings2.default)("problemOccoured"), (0, _strings2.default)("pleaseSpecifyEntity"));
        return;
    }

    if (_.isEmpty(data.discriminator)) {
        throw new Error("Discriminator is required");
    }

    (0, _plugins.showLoader)();
    aj.dispatch({
        type: LOAD_ENTITIES,
        discriminator: data.discriminator
    });

    var query = !_.isEmpty(data.query) ? data.query : null;
    queries[data.entity] = query;

    EntitiesApi.load(data.entity, query).then(function (response) {
        (0, _plugins.hideLoader)();
        loadEntities.complete({ result: response.value, discriminator: data.discriminator });
    }).catch(function (e) {
        (0, _plugins.hideLoader)();
        (0, _plugins.alert)((0, _strings2.default)("ooops"), responses.msg(e), "error");

        loadEntities.fail({ discriminator: data.discriminator });
    });
});

var DELETE_ENTITIES = exports.DELETE_ENTITIES = "DELETE_ENTITIES";
var deleteEntities = exports.deleteEntities = (0, _ajex.createAsyncAction)(DELETE_ENTITIES, function (data) {
    if (_.isEmpty(data.entity)) {
        (0, _plugins.alert)((0, _strings2.default)("problemOccoured"), (0, _strings2.default)("pleaseSpecifyEntity"));
        return;
    }

    if (_.isEmpty(data.ids)) {
        (0, _plugins.alert)((0, _strings2.default)("problemOccoured"), (0, _strings2.default)("pleaseSpecifyId"));
        return;
    }

    if (_.isEmpty(data.discriminator)) {
        throw new Error("Discriminator is required");
    }

    (0, _plugins.showLoader)();
    aj.dispatch({
        type: DELETE_ENTITIES,
        discriminator: data.discriminator
    });

    EntitiesApi.delete_(data.entity, data.ids).then(function () {
        (0, _plugins.hideLoader)();
        deleteEntities.complete({ discriminator: data.discriminator });

        if (_.has(queries, data.entity)) {
            loadEntities({ discriminator: data.discriminator, entity: data.entity, query: queries[data.entity] });
        }
    }).catch(function (e) {
        (0, _plugins.hideLoader)();
        (0, _plugins.alert)((0, _strings2.default)("ooops"), responses.msg(e), "error");

        deleteEntities.fail({ discriminator: data.discriminator });
    });
});

var SAVE_ENTITY = exports.SAVE_ENTITY = "SAVE_ENTITY";
var saveEntity = exports.saveEntity = (0, _ajex.createAsyncAction)(SAVE_ENTITY, function (data) {
    if (_.isEmpty(data.entity)) {
        (0, _plugins.alert)((0, _strings2.default)("problemOccoured"), (0, _strings2.default)("pleaseSpecifyEntity"));
        return;
    }

    if (_.isEmpty(data.data)) {
        (0, _plugins.alert)((0, _strings2.default)("problemOccoured"), (0, _strings2.default)("pleaseSpecifyData"));
        return;
    }

    if (_.isEmpty(data.discriminator)) {
        throw new Error("Discriminator is required");
    }

    (0, _plugins.showLoader)();
    aj.dispatch({
        type: SAVE_ENTITY,
        discriminator: data.discriminator
    });

    EntitiesApi.save(data.entity, data.data).then(function () {
        (0, _plugins.hideLoader)();
        (0, _plugins.toast)((0, _strings2.default)("saveComplete"));

        saveEntity.complete({ discriminator: data.discriminator, data: data.data });

        if (data.entity == "user") {
            if (SessionApi.getLoggedUser() != null && SessionApi.getLoggedUser().id == data.data.id) {
                getUserProfileImage();
                getUserCoverImage();
            }
        }
    }).catch(function (r) {
        (0, _plugins.hideLoader)();

        if (r.responseCode === responses.ERROR_VALIDATION) {
            saveEntity.fail({ discriminator: data.discriminator, data: data.data, validationError: true, validationResult: r.result });
        } else {
            (0, _plugins.alert)((0, _strings2.default)("ooops"), responses.msg(r.responseCode), "error");

            saveEntity.fail({ discriminator: data.discriminator, data: data.data, validationError: false, validationResult: null });
        }
    });
});

var NEW_ENTITY = exports.NEW_ENTITY = "NEW_ENTITY";
var newEntity = exports.newEntity = aj.createAction(NEW_ENTITY, function (data) {
    if (_.isEmpty(data.discriminator)) {
        throw new Error("Discriminator is required");
    }

    aj.dispatch({
        type: NEW_ENTITY,
        discriminator: data.discriminator
    });
});

var GET_ENTITY = exports.GET_ENTITY = "GET_ENTITY";
var getEntity = exports.getEntity = (0, _ajex.createAsyncAction)(GET_ENTITY, function (data) {
    if (_.isEmpty(data.entity)) {
        (0, _plugins.alert)((0, _strings2.default)("problemOccoured"), (0, _strings2.default)("pleaseSpecifyEntity"));
        return;
    }

    if (_.isEmpty(data.id)) {
        (0, _plugins.alert)((0, _strings2.default)("problemOccoured"), (0, _strings2.default)("pleaseSpecifyId"));
        return;
    }

    if (_.isEmpty(data.discriminator)) {
        throw new Error("Discriminator is required");
    }

    (0, _plugins.showLoader)();
    aj.dispatch({
        type: GET_ENTITY,
        discriminator: data.discriminator
    });

    EntitiesApi.get(data.entity, data.id).then(function (response) {
        (0, _plugins.hideLoader)();
        getEntity.complete({ data: response.value, discriminator: data.discriminator });
    }).catch(function (e) {
        (0, _plugins.hideLoader)();
        (0, _plugins.alert)((0, _strings2.default)("ooops"), responses.msg(e), "error");

        getEntity.fail({ discriminator: data.discriminator });
    });
});

var FREE_ENTITIES = exports.FREE_ENTITIES = "FREE_ENTITIES";
var freeEntities = exports.freeEntities = aj.createAction(FREE_ENTITIES, function (data) {
    aj.dispatch({
        type: FREE_ENTITIES,
        discriminator: data.discriminator
    });
});

/**
 * LOOKUP ACTIONS
 */

var GET_LOOKUP_RESULT = exports.GET_LOOKUP_RESULT = "GET_LOOKUP_RESULT";
var getLookupResult = exports.getLookupResult = (0, _ajex.createAsyncAction)(GET_LOOKUP_RESULT, function (data) {
    if (_.isEmpty(data.entity)) {
        (0, _plugins.alert)((0, _strings2.default)("problemOccoured"), (0, _strings2.default)("pleaseSpecifyEntity"));
        return;
    }

    if (_.isEmpty(data.discriminator)) {
        throw new Error("Discriminator is required");
    }

    aj.dispatch({
        type: GET_LOOKUP_RESULT,
        discriminator: data.discriminator
    });

    EntitiesApi.load(data.entity, !_.isEmpty(data.query) ? data.query : null).then(function (response) {
        getLookupResult.complete({ result: response.value, discriminator: data.discriminator });
    }).catch(function (e) {
        (0, _plugins.alert)((0, _strings2.default)("ooops"), responses.msg(e), "error");

        getLookupResult.fail({ discriminator: data.discriminator });
    });
});

var GET_LOOKUP_VALUES = exports.GET_LOOKUP_VALUES = "GET_LOOKUP_VALUES";
var getLookupValues = exports.getLookupValues = (0, _ajex.createAsyncAction)(GET_LOOKUP_VALUES, function (data) {
    if (_.isEmpty(data.collection)) {
        (0, _plugins.alert)((0, _strings2.default)("problemOccoured"), (0, _strings2.default)("pleaseSpecifyEntity"));
        return;
    }

    if (_.isEmpty(data.discriminator)) {
        throw new Error("Discriminator is required");
    }

    aj.dispatch({
        type: GET_LOOKUP_VALUES,
        discriminator: data.discriminator
    });

    ValuesApi.load(data.collection, data.keyword).then(function (response) {
        getLookupValues.complete({ values: response.value, discriminator: data.discriminator });
    }).catch(function (e) {
        (0, _plugins.alert)((0, _strings2.default)("ooops"), responses.msg(e), "error");

        getLookupValues.fail({ discriminator: data.discriminator });
    });
});

var FREE_LOOKUP = exports.FREE_LOOKUP = "FREE_LOOKUP";
var freeLookup = exports.freeLookup = aj.createAction(FREE_LOOKUP, function (data) {
    aj.dispatch({
        type: FREE_LOOKUP,
        discriminator: data.discriminator
    });
});

/**
 * SELECT ACTIONS
 */

var GET_SELECT_ENTITIES = exports.GET_SELECT_ENTITIES = "GET_SELECT_ENTITIES";
var getSelectEntities = exports.getSelectEntities = (0, _ajex.createAsyncAction)(GET_SELECT_ENTITIES, function (data) {
    if (_.isEmpty(data.entity)) {
        (0, _plugins.alert)((0, _strings2.default)("problemOccoured"), (0, _strings2.default)("pleaseSpecifyEntity"));
        return;
    }

    if (_.isEmpty(data.discriminator)) {
        throw new Error("Discriminator is required");
    }

    aj.dispatch({
        type: GET_SELECT_ENTITIES,
        discriminator: data.discriminator
    });

    ValuesApi.loadEntities(data.entity, data.query).then(function (response) {
        getSelectEntities.complete({ entities: response.value, discriminator: data.discriminator });
    }).catch(function (e) {
        (0, _plugins.alert)((0, _strings2.default)("ooops"), responses.msg(e), "error");

        getSelectEntities.fail({ discriminator: data.discriminator });
    });
});

var GET_SELECT_VALUES = exports.GET_SELECT_VALUES = "GET_SELECT_VALUES";
var getSelectValues = exports.getSelectValues = (0, _ajex.createAsyncAction)(GET_SELECT_VALUES, function (data) {
    if (_.isEmpty(data.collection)) {
        (0, _plugins.alert)((0, _strings2.default)("problemOccoured"), (0, _strings2.default)("pleaseSpecifyEntity"));
        return;
    }

    if (_.isEmpty(data.discriminator)) {
        throw new Error("Discriminator is required");
    }

    aj.dispatch({
        type: GET_SELECT_VALUES,
        discriminator: data.discriminator
    });

    ValuesApi.load(data.collection, data.keyword).then(function (response) {
        getSelectValues.complete({ values: response.value, discriminator: data.discriminator });
    }).catch(function (e) {
        (0, _plugins.alert)((0, _strings2.default)("ooops"), responses.msg(e), "error");

        getSelectValues.fail({ discriminator: data.discriminator });
    });
});

var FREE_SELECT = exports.FREE_SELECT = "FREE_SELECT";
var freeSelect = exports.freeSelect = aj.createAction(FREE_SELECT, function (data) {
    aj.dispatch({
        type: FREE_SELECT,
        discriminator: data.discriminator
    });
});

/**
 * MENU ACTIONS
 */

var SETUP_MENU = exports.SETUP_MENU = "SETUP_MENU";
var setupMenu = exports.setupMenu = aj.createAction(SETUP_MENU, function (data) {
    aj.dispatch({
        type: SETUP_MENU,
        menu: data.menu
    });
});

var SET_ACTIVE_MENU_ITEM = exports.SET_ACTIVE_MENU_ITEM = "SET_ACTIVE_MENU_ITEM";
var setActiveMenuItem = exports.setActiveMenuItem = aj.createAction(SET_ACTIVE_MENU_ITEM, function (data) {
    aj.dispatch({
        type: SET_ACTIVE_MENU_ITEM,
        item: data.item
    });
});

var EXPAND_MENU_ITEM = exports.EXPAND_MENU_ITEM = "EXPAND_MENU_ITEM";
var expandMenuItem = exports.expandMenuItem = aj.createAction(EXPAND_MENU_ITEM, function (data) {
    aj.dispatch({
        type: EXPAND_MENU_ITEM,
        item: data.item
    });
});

/**
 UI Actions
 */

var GET_USER_COVER_IMAGE = exports.GET_USER_COVER_IMAGE = "GET_USER_COVER_IMAGE";
var getUserCoverImage = exports.getUserCoverImage = (0, _ajex.createAsyncAction)(GET_USER_COVER_IMAGE, function (data) {
    var user = SessionApi.getLoggedUser();
    if (user == null) {
        return;
    }

    aj.dispatch({
        type: GET_USER_COVER_IMAGE
    });

    AccountApi.getCoverImage(user.id).then(function (data) {
        getUserCoverImage.complete({ data: data.value });
    }).catch(function (e) {
        getUserCoverImage.fail({ e: e });
    });
});

var GET_USER_PROFILE_IMAGE = exports.GET_USER_PROFILE_IMAGE = "GET_USER_PROFILE_IMAGE";
var getUserProfileImage = exports.getUserProfileImage = (0, _ajex.createAsyncAction)(GET_USER_PROFILE_IMAGE, function (data) {
    var user = SessionApi.getLoggedUser();
    if (user == null) {
        return;
    }

    aj.dispatch({
        type: GET_USER_PROFILE_IMAGE
    });

    AccountApi.getProfileImage(user.id).then(function (data) {
        getUserProfileImage.complete({ data: data.value });
    }).catch(function (e) {
        getUserProfileImage.fail({ e: e });
    });
});
});
define('aj/assert.js', function(module, exports) {
"use strict";

var _ = require("../libs/underscore");

exports.assertTrue = function (test, msg) {
    if (!test) {
        throw "Assertion failure: " + msg || "";
    }
};

exports.assertEquals = function (first, second, msg) {
    if (first != second) {
        throw "Assertion failure: " + msg || "";
    }
};

exports.assertNotNull = function (obj, msg) {
    if (obj == undefined || obj == null) {
        throw "Assertion failure: " + msg || "";
    }
};

exports.assertNotEmpty = function (obj, msg) {
    if (_.isEmpty(obj)) {
        throw "Assertion failure: " + msg || "";
    }
};
});
define('aj/assets.js', function(module, exports) {
/**
 * AJ Framework assets manager
 * @module aj/assets
 */

"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.image = exports.remove = exports.save = exports.exists = exports.load = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _assert = require("./assert");

var assert = _interopRequireWildcard(_assert);

var _path = require("./path");

var path = _interopRequireWildcard(_path);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var AssetsManager = function () {
    function AssetsManager() {
        _classCallCheck(this, AssetsManager);

        if (__assetsManager == undefined) {
            throw "__assetsManager undefined";
        }
    }

    _createClass(AssetsManager, [{
        key: "load",
        value: function load(path) {
            return new Promise(function (resolve, reject) {
                try {
                    assert.assertNotEmpty(path, "path is not defined");

                    logger.i("Loading asset", path);

                    __assetsManager.load(path, function (error, value) {
                        if (error) {
                            logger.e(value);
                            reject(value);
                        } else {
                            resolve(value);
                        }
                    });
                } catch (e) {
                    logger.e(e);
                    reject(e);
                }
            });
        }
    }, {
        key: "exists",
        value: function exists(path) {
            return new Promise(function (resolve, reject) {
                try {
                    assert.assertNotEmpty(path, "path is not defined");

                    __assetsManager.load(path, function (error, value) {
                        if (error) {
                            logger.e(value);
                            reject(value);
                        } else {
                            resolve(value);
                        }
                    });
                } catch (e) {
                    logger.e(e);
                    reject(e);
                }
            });
        }
    }, {
        key: "loadImage",
        value: function loadImage(imagePath) {
            var scale = device.getScale();

            var name = path.removeExt(imagePath);
            var ext = path.ext(imagePath);

            var scaledName = name + "@" + scale + "x" + ext;

            return this.load(scaledName);
        }
    }]);

    return AssetsManager;
}();

var instance = new AssetsManager();

/**
 * @function load
 * @description Load asset from device (async)
 * @param {string} path - The path of asset to load
 * @returns {Promise} - A promise of the result
 */
var load = exports.load = function load(path) {
    return instance.load(path);
};

/**
 * @function exists
 * @description Load asset from device (async)
 * @param {string} path - The path of asset to load
 * @returns {Promise} - A promise of the result
 */
var exists = exports.exists = function exists(path) {
    return instance.exists(path);
};

/**
 * @function save
 * @description Save asset to device (async)
 * @param {string} path - The path of asset to save
 * @param {buffer} data - Buffer id that contains data
 * @returns {Promise} - A promise of the result
 */
var save = exports.save = function save(path, data) {
    return instance.save(path, data);
};

/**
 * @function remove
 * @description Remove asset from device (async)
 * @param path - The path of asset to remove
 * @returns {Promise} - A promise of the result
 */
var remove = exports.remove = function remove(path) {
    return instance.remove(path);
};

/**
 * @function image
 * @description Load image asset from device, with density support
 * @param path - The path of image to load
 * @returns {Promise} - A promise of the result
 */
var image = exports.image = function image(path) {
    return instance.loadImage(path);
};
});
define('aj/base64.js', function(module, exports) {
'use strict';

var version = "2.1.9";
// constants
var b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
var b64tab = function (bin) {
    var t = {};
    for (var i = 0, l = bin.length; i < l; i++) {
        t[bin.charAt(i)] = i;
    }return t;
}(b64chars);
var fromCharCode = String.fromCharCode;
// encoder stuff
var cb_utob = function cb_utob(c) {
    if (c.length < 2) {
        var cc = c.charCodeAt(0);
        return cc < 0x80 ? c : cc < 0x800 ? fromCharCode(0xc0 | cc >>> 6) + fromCharCode(0x80 | cc & 0x3f) : fromCharCode(0xe0 | cc >>> 12 & 0x0f) + fromCharCode(0x80 | cc >>> 6 & 0x3f) + fromCharCode(0x80 | cc & 0x3f);
    } else {
        var cc = 0x10000 + (c.charCodeAt(0) - 0xD800) * 0x400 + (c.charCodeAt(1) - 0xDC00);
        return fromCharCode(0xf0 | cc >>> 18 & 0x07) + fromCharCode(0x80 | cc >>> 12 & 0x3f) + fromCharCode(0x80 | cc >>> 6 & 0x3f) + fromCharCode(0x80 | cc & 0x3f);
    }
};
var re_utob = /[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g;
var utob = function utob(u) {
    return u.replace(re_utob, cb_utob);
};
var cb_encode = function cb_encode(ccc) {
    var padlen = [0, 2, 1][ccc.length % 3],
        ord = ccc.charCodeAt(0) << 16 | (ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8 | (ccc.length > 2 ? ccc.charCodeAt(2) : 0),
        chars = [b64chars.charAt(ord >>> 18), b64chars.charAt(ord >>> 12 & 63), padlen >= 2 ? '=' : b64chars.charAt(ord >>> 6 & 63), padlen >= 1 ? '=' : b64chars.charAt(ord & 63)];
    return chars.join('');
};
var btoa = function btoa(b) {
    return b.replace(/[\s\S]{1,3}/g, cb_encode);
};
var _encode = function _encode(u) {
    return btoa(utob(u));
};
var encode = function encode(u, urisafe) {
    return !urisafe ? _encode(String(u)) : _encode(String(u)).replace(/[+\/]/g, function (m0) {
        return m0 == '+' ? '-' : '_';
    }).replace(/=/g, '');
};
var encodeURI = function encodeURI(u) {
    return encode(u, true);
};
// decoder stuff
var re_btou = new RegExp(['[\xC0-\xDF][\x80-\xBF]', '[\xE0-\xEF][\x80-\xBF]{2}', '[\xF0-\xF7][\x80-\xBF]{3}'].join('|'), 'g');
var cb_btou = function cb_btou(cccc) {
    switch (cccc.length) {
        case 4:
            var cp = (0x07 & cccc.charCodeAt(0)) << 18 | (0x3f & cccc.charCodeAt(1)) << 12 | (0x3f & cccc.charCodeAt(2)) << 6 | 0x3f & cccc.charCodeAt(3),
                offset = cp - 0x10000;
            return fromCharCode((offset >>> 10) + 0xD800) + fromCharCode((offset & 0x3FF) + 0xDC00);
        case 3:
            return fromCharCode((0x0f & cccc.charCodeAt(0)) << 12 | (0x3f & cccc.charCodeAt(1)) << 6 | 0x3f & cccc.charCodeAt(2));
        default:
            return fromCharCode((0x1f & cccc.charCodeAt(0)) << 6 | 0x3f & cccc.charCodeAt(1));
    }
};
var btou = function btou(b) {
    return b.replace(re_btou, cb_btou);
};
var cb_decode = function cb_decode(cccc) {
    var len = cccc.length,
        padlen = len % 4,
        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0) | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0) | (len > 2 ? b64tab[cccc.charAt(2)] << 6 : 0) | (len > 3 ? b64tab[cccc.charAt(3)] : 0),
        chars = [fromCharCode(n >>> 16), fromCharCode(n >>> 8 & 0xff), fromCharCode(n & 0xff)];
    chars.length -= [0, 0, 2, 1][padlen];
    return chars.join('');
};
var atob = function atob(a) {
    return a.replace(/[\s\S]{1,4}/g, cb_decode);
};
var _decode = function _decode(a) {
    return btou(atob(a));
};
var decode = function decode(a) {
    return _decode(String(a).replace(/[-_]/g, function (m0) {
        return m0 == '-' ? '+' : '/';
    }).replace(/[^A-Za-z0-9\+\/]/g, ''));
};

// export Base64
module.exports = {
    VERSION: version,
    atob: atob,
    btoa: btoa,
    fromBase64: decode,
    toBase64: encode,
    utob: utob,
    encode: encode,
    encodeURI: encodeURI,
    btou: btou,
    decode: decode
};
});
define('aj/buffers.js', function(module, exports) {
"use strict";

var aj = require("./index");

var create = function create(data) {
    return aj.createBuffer(data);
};

var read = function read(id) {
    return aj.readBuffer(id);
};

var destroy = function destroy(id) {
    return aj.destroyBuffer(id);
};

exports.create = create;
exports.read = read;
exports.destroy = destroy;
});
define('aj/events.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var EventEmitter = exports.EventEmitter = {};

EventEmitter.addListener = function (obj, evt, handler) {
    var listeners = obj.$$events_listeners;
    if (!listeners) {
        listeners = {};
        obj.$$events_listeners = listeners;
    }

    if (!listeners[evt]) {
        listeners[evt] = [];
    }

    listeners[evt].push(handler);
};

EventEmitter.addCallback = function (obj, evt, handler) {
    var callbacks = obj.$$events_callbacks;
    if (!callbacks) {
        callbacks = {};
        obj.$$events_callbacks = callbacks;
    }

    if (!callbacks[evt]) {
        callbacks[evt] = [];
    }

    callbacks[evt].push(handler);
};

EventEmitter.addListeners = function (obj, listeners) {
    for (var key in listeners) {
        EventEmitter.addListener(obj, key, listeners[key]);
    }
};

EventEmitter.removeListener = function (obj, evt, listener) {
    if (obj.$$events_listeners && obj.$$events_listeners[evt]) {
        obj.$$events_listeners[evt] = obj.$$events_listeners[evt].filter(function (l) {
            return l != listener;
        });
    }
};

EventEmitter.on = function (obj, evt, handler) {
    if ((typeof evt === "undefined" ? "undefined" : _typeof(evt)) === "object") {
        EventEmitter.addListeners(obj, evt);
    } else {
        EventEmitter.addListener(obj, evt, handler);
    }
};

EventEmitter.off = function (obj, evt, handler) {
    EventEmitter.removeListener(obj, evt, handler);
};

EventEmitter.live = function (obj, evt) {
    if (!obj.$$events_offs) obj.$$events_offs = {};
    if (evt) {
        obj.$$events_offs[evt] = false;
    } else {
        obj.$$events_off = false;
    }
};

EventEmitter.die = function (obj, evt) {
    if (!obj.$$events_offs) obj.$$events_offs = {};
    if (evt) {
        obj.$$events_offs[evt] = true;
    } else {
        obj.$$events_off = true;
    }
};

EventEmitter.invoke = function (obj, evt) {
    if (!obj.$$events_offs) obj.$$events_offs = {};
    if (obj.$$events_off) return;
    if (obj.$$events_offs[evt]) return;

    var listeners = obj.$$events_listeners;
    if (!listeners) {
        listeners = {};
        obj.$$events_listeners = listeners;
    }

    var handlers = listeners[evt];
    if (handlers) {
        var size = handlers.length;
        for (var i = 0; i < size; i++) {
            var h = handlers[i];
            h.apply(obj, Array.prototype.slice.call(arguments, 2));
        }
    }

    var callbacks = obj.$$events_callbacks;
    if (!callbacks) {
        callbacks = {};
        obj.$$events_callbacks = callbacks;
    }

    var callbackHandlers = callbacks[evt];
    if (callbackHandlers) {
        var _size = callbackHandlers.length;
        for (var _i = 0; _i < _size; _i++) {
            var _h = callbackHandlers[_i];
            _h.apply(obj, Array.prototype.slice.call(arguments, 2));
        }
    }

    callbacks[evt] = [];
};

var Observable = exports.Observable = function () {
    function Observable() {
        _classCallCheck(this, Observable);
    }

    _createClass(Observable, [{
        key: "on",
        value: function on(evt, handler) {
            EventEmitter.on(this, evt, handler);
        }
    }, {
        key: "once",
        value: function once(evt, handler) {
            EventEmitter.addCallback(this, evt, handler);
        }
    }, {
        key: "off",
        value: function off(evt, handler) {
            EventEmitter.off(this, evt, handler);
        }
    }, {
        key: "invoke",
        value: function invoke(evt) {
            EventEmitter.invoke.apply(null, [this, evt].concat(Array.prototype.slice.call(arguments, 1)));
        }
    }]);

    return Observable;
}();
});
define('aj/http.js', function(module, exports) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var assert = require("./assert");
var _ = require("../libs/underscore");

function buildQueryString(obj) {
    var q = "";
    var first = true;
    for (var k in obj) {
        var sep = first ? "" : "&";
        q += sep + k + "=" + encodeURIComponent(obj[k]);
        first = false;
    }

    return q;
}

var HttpClient = function () {
    function HttpClient(url, method, data) {
        _classCallCheck(this, HttpClient);

        this.url = url;
        this.method = method || "GET";
        this.headers = {};
        this.data = data || {};
        this.accept = null;
        this.contentType = null;
        this.rawResponse = false;
    }

    _createClass(HttpClient, [{
        key: "request",
        value: function request() {
            var _this = this;

            return new Promise(function (resolve, reject) {
                try {
                    assert.assertNotEmpty(_this.url, "url is not defined");
                    assert.assertNotEmpty(_this.method, "method is not defined");

                    var data = _.isObject(_this.data) ? buildQueryString(_this.data) : _this.data;
                    var headers = _this.headers || {};

                    logger.i(_this.method.toUpperCase() + " " + _this.url);
                    if (data) {
                        logger.i(data);
                    }

                    __httpClient.request(_this.url, _this.method, data, headers, _this.accept, _this.contentType, _this.rawResponse, function (error, value) {
                        if (error) {
                            logger.e("error");
                            reject(error);
                        } else {
                            resolve(value);
                        }
                    });
                } catch (e) {
                    logger.e(e);
                    reject(e);
                }
            });
        }
    }]);

    return HttpClient;
}();

var request = function request(url, method, data, headers, accept, contentType, rawResponse) {
    var method = method || "GET";
    var data = data || {};
    var headers = headers || {};
    var rawResponse = rawResponse || false;

    var client = new HttpClient(url);
    client.method = method;
    client.data = data;
    client.headers = headers;
    client.rawResponse = rawResponse;
    client.accept = accept;
    client.contentType = contentType;

    return client.request();
};

exports.HttpClient = HttpClient;
exports.request = request;

/**
 * Makes a GET request to specified url
 * @param url
 * @param data, can be a string or object. If is an object will be converted in a form encoded string
 * @param headers
 * @returns A promise of result
 */
exports.get = function (url, data, headers) {
    var data = data || {};
    var headers = headers || {};

    return request(url, "GET", data, headers, null, null, false);
};

/**
 * Makes a POST request to specified url
 * @param url
 * @param data, can be a string or object. If is an object will be converted in a form encoded string
 * @param headers
 * @returns A promise of result
 */
exports.post = function (url, data, headers) {
    var data = data || {};
    var headers = headers || {};
    return request(url, "POST", data, headers, null, null, false);
};

/**
 * Makes a PUT request to specified url
 * @param url
 * @param data, can be a string or object. If is an object will be converted in a form encoded string
 * @param headers
 * @returns A promise of result
 */
exports.put = function (url, data, headers) {
    var data = data || {};
    var headers = headers || {};
    return request(url, "PUT", data, headers, null, null, false);
};

/**
 * Makes a DELETE request to specified url
 * @param url
 * @param data, can be a string or object. If is an object will be converted in a form encoded string
 * @param headers
 * @returns A promise of result
 */
exports.delete = function (url, data, headers) {
    var data = data || {};
    var headers = headers || {};
    return request(url, "DELETE", data, headers, null, null, false);
};

/**
 * Downloads a file from specified url
 * @param url
 * @param data, can be a string or object. If is an object will be converted in a form encoded string
 * @param headers
 * @returns A promise of result
 */
exports.download = function (url, data, headers) {
    var data = data || {};
    var headers = headers || {};
    return request(url, "GET", data, headers, null, null, true);
};
});
define('aj/index.js', function(module, exports) {
/**
 * AJ Framework main module. Contains functions to create hybrid applications using flux framework
 * @module aj
 */

"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.createBuffer = createBuffer;
exports.readBuffer = readBuffer;
exports.destroyBuffer = destroyBuffer;

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _ = require("../libs/underscore");
var Observable = require("./events").Observable;

var __runtime = null;
var __stores = {};
var __actions = {};

function stringifyIfNotBrowser(obj) {
    if (window) {
        return obj;
    } else {
        JSON.stringify(obj);
    }
}

var AJRuntime = function () {
    function AJRuntime() {
        _classCallCheck(this, AJRuntime);
    }

    _createClass(AJRuntime, [{
        key: "exec",
        value: function exec() {
            throw "Not implemented";
        }
    }, {
        key: "createBuffer",
        value: function createBuffer(data) {
            throw "Not implemented";
        }
    }, {
        key: "loadBuffer",
        value: function loadBuffer(id) {
            throw "Not implemented";
        }
    }, {
        key: "destroyBuffer",
        value: function destroyBuffer(id) {
            throw "Not implemented";
        }
    }, {
        key: "__trigger",
        value: function __trigger(store, state) {
            throw "Not implemented";
        }
    }], [{
        key: "instance",
        value: function instance() {
            if (!__runtime) {
                throw "Runtime not initialized";
            }
            return __runtime;
        }
    }]);

    return AJRuntime;
}();

if (platform.test) {
    (function () {
        var vm = require("vm");
        var fs = require("fs");
        var buffers = {};
        var bufferId = 0;

        var AJTestRuntime = function (_AJRuntime) {
            _inherits(AJTestRuntime, _AJRuntime);

            function AJTestRuntime() {
                _classCallCheck(this, AJTestRuntime);

                var _this = _possibleConstructorReturn(this, (AJTestRuntime.__proto__ || Object.getPrototypeOf(AJTestRuntime)).call(this));

                _this.semaphores = [];

                logger.i("New test runtime created");
                return _this;
            }

            _createClass(AJTestRuntime, [{
                key: "init",
                value: function init(options) {}
            }, {
                key: "exec",
                value: function exec(plugin, fn, data) {
                    logger.i("Executing plugin ", plugin + "." + fn);

                    return new Promise(function (resolve, reject) {
                        resolve({});
                    });
                }
            }, {
                key: "__trigger",
                value: function __trigger(store, state) {
                    logger.i("Triggering", store);
                    logger.i(stringifyIfNotBrowser(state));
                }
            }, {
                key: "createBuffer",
                value: function createBuffer(data) {
                    return new Promise(function (resolve, reject) {
                        var id = ++bufferId;
                        buffers[id] = data;
                        resolve(id);
                    });
                }
            }, {
                key: "readBuffer",
                value: function readBuffer(id) {
                    return new Promise(function (resolve, reject) {
                        resolve(buffers[id]);
                    });
                }
            }, {
                key: "destroyBuffer",
                value: function destroyBuffer(id) {
                    return new Promise(function (resolve, reject) {
                        delete buffers[id];
                        resolve();
                    });
                }
            }]);

            return AJTestRuntime;
        }(AJRuntime);

        AJRuntime.create = function () {
            return new AJTestRuntime();
        };
    })();
} else if (platform.engine == "node") {
    (function () {
        var vm = require("vm");
        var fs = require("fs");

        var AJWebSocketServerRuntime = function (_AJRuntime2) {
            _inherits(AJWebSocketServerRuntime, _AJRuntime2);

            function AJWebSocketServerRuntime() {
                _classCallCheck(this, AJWebSocketServerRuntime);

                var _this2 = _possibleConstructorReturn(this, (AJWebSocketServerRuntime.__proto__ || Object.getPrototypeOf(AJWebSocketServerRuntime)).call(this));

                _this2.semaphores = [];

                logger.i("New websocket server runtime created");
                return _this2;
            }

            _createClass(AJWebSocketServerRuntime, [{
                key: "init",
                value: function init(options) {
                    var _this3 = this;

                    this.socket = options.socket;
                    if (!this.socket) {
                        throw "Socket is required";
                    }

                    this.socket.on("run", function (action, json, ack) {
                        async(function () {
                            try {
                                var data = JSON.parse(json);
                                _run(action, data);

                                ack();
                            } catch (e) {
                                if (e && e.stack) {
                                    logger.e(e.stack);
                                }
                                logger.e(e);
                            }
                        });
                    });

                    this.socket.on("freeSemaphore", function (id, data) {
                        try {
                            _this3.freeSemaphore(id, data);
                        } catch (e) {
                            if (e && e.stack) {
                                logger.e(e.stack);
                            }
                            logger.e(e);
                        }
                    });

                    this.socket.on("error", function (e) {
                        if (e && e.stack) {
                            logger.e(e.stack);
                        }
                        logger.e(e);
                    });
                }
            }, {
                key: "exec",
                value: function exec(plugin, fn, data) {
                    var _this4 = this;

                    logger.i("Executing plugin ", plugin + "." + fn);

                    return new Promise(function (resolve, reject) {
                        _this4.socket.emit("exec", plugin, fn, data, function (error, result) {
                            if (!error) {
                                resolve(result);
                            } else {
                                reject(result);
                            }
                        });
                    });
                }
            }, {
                key: "__trigger",
                value: function __trigger(store, state) {
                    var _this5 = this;

                    if (DEBUG) {
                        logger.i("Triggering", store);
                        logger.i(stringifyIfNotBrowser(state));
                    }

                    return new Promise(function (resolve, reject) {
                        _this5.socket.emit("trigger", store, state, function () {
                            resolve();
                        });
                    });
                }
            }, {
                key: "freeSemaphore",
                value: function freeSemaphore(id, data) {
                    var index = -1;
                    var found = false;
                    for (var i = 0; i < this.semaphores.length; i++) {
                        index++;
                        var semaphore = this.semaphores[i];

                        if (semaphore.id == id) {
                            found = true;
                            semaphore.free(data);
                            break;
                        }
                    }

                    if (found) {
                        this.semaphores.splice(index, 1);
                        logger.i("Semaphore destroyed:", semaphore.name);
                    }
                }
            }, {
                key: "createBuffer",
                value: function createBuffer(data) {
                    var _this6 = this;

                    return new Promise(function (resolve, reject) {
                        _this6.socket.emit("createBuffer", data, function (error, id) {
                            if (!error) {
                                resolve(id);
                            } else {
                                reject();
                            }
                        });
                    });
                }
            }, {
                key: "readBuffer",
                value: function readBuffer(id) {
                    var _this7 = this;

                    return new Promise(function (resolve, reject) {
                        _this7.socket.emit("readBuffer", id, function (error, data) {
                            if (!error) {
                                resolve(data);
                            } else {
                                reject();
                            }
                        });
                    });
                }
            }, {
                key: "destroyBuffer",
                value: function destroyBuffer(id) {
                    var _this8 = this;

                    return new Promise(function (resolve, reject) {
                        _this8.socket.emit("readBuffer", id, function (error) {
                            if (!error) {
                                resolve();
                            } else {
                                reject();
                            }
                        });
                    });
                }
            }]);

            return AJWebSocketServerRuntime;
        }(AJRuntime);

        AJRuntime.create = function () {
            return new AJWebSocketServerRuntime();
        };
    })();
} else {
    (function () {
        var AJNativeServerRuntime = function (_AJRuntime3) {
            _inherits(AJNativeServerRuntime, _AJRuntime3);

            function AJNativeServerRuntime() {
                _classCallCheck(this, AJNativeServerRuntime);

                var _this9 = _possibleConstructorReturn(this, (AJNativeServerRuntime.__proto__ || Object.getPrototypeOf(AJNativeServerRuntime)).call(this));

                logger.i("New native server runtime created");
                return _this9;
            }

            _createClass(AJNativeServerRuntime, [{
                key: "init",
                value: function init(options) {}
            }, {
                key: "run",
                value: function run(action, data) {
                    _run(action, data);
                }
            }, {
                key: "__trigger",
                value: function (_trigger) {
                    function __trigger(_x, _x2) {
                        return _trigger.apply(this, arguments);
                    }

                    __trigger.toString = function () {
                        return _trigger.toString();
                    };

                    return __trigger;
                }(function (store, state) {
                    if (__trigger == undefined) {
                        throw "__trigger function not defined";
                    }

                    if (DEBUG) {
                        logger.i("Triggering", store);
                        logger.i(stringifyIfNotBrowser(state));
                    }

                    return new Promise(function (resolve, reject) {
                        try {
                            __trigger(store, state);
                            resolve();
                        } catch (e) {
                            reject(e);
                        }
                    });
                })
            }, {
                key: "exec",
                value: function exec(plugin, fn, data) {
                    if (__exec == undefined) {
                        throw "__exec function not defined";
                    }

                    logger.i("Executing plugin", plugin + "." + fn);

                    return new Promise(function (resolve, reject) {
                        __exec(plugin, fn, data, function (error, value) {
                            if (error) {
                                reject(value);
                            } else {
                                resolve(value);
                            }
                        });
                    });
                }
            }, {
                key: "createBuffer",
                value: function createBuffer(data) {
                    return new Promise(function (resolve, reject) {
                        __buffersManager.create(data, function (error, value) {
                            if (error) {
                                reject(value);
                            } else {
                                resolve(value);
                            }
                        });
                    });
                }
            }, {
                key: "readBuffer",
                value: function readBuffer(id) {
                    return new Promise(function (resolve, reject) {
                        __buffersManager.read(id, function (error, value) {
                            if (error) {
                                reject(value);
                            } else {
                                resolve(value);
                            }
                        });
                    });
                }
            }, {
                key: "destroyBuffer",
                value: function destroyBuffer(id) {
                    return new Promise(function (resolve, reject) {
                        __buffersManager.destroy(id, function (error, value) {
                            if (error) {
                                reject(value);
                            } else {
                                resolve(value);
                            }
                        });
                    });
                }
            }]);

            return AJNativeServerRuntime;
        }(AJRuntime);

        AJRuntime.create = function () {
            return new AJNativeServerRuntime();
        };
    })();
}

var Store = function (_Observable) {
    _inherits(Store, _Observable);

    function Store(type, reducer) {
        _classCallCheck(this, Store);

        var _this10 = _possibleConstructorReturn(this, (Store.__proto__ || Object.getPrototypeOf(Store)).call(this));

        _this10.type = type;
        _this10.reducer = reducer;
        _this10.subscriptions = [];
        return _this10;
    }

    _createClass(Store, [{
        key: "init",
        value: function init(options) {}
    }, {
        key: "subscribe",
        value: function subscribe(owner, subscription) {
            this.subscriptions.push({ owner: owner, subscription: subscription });
        }
    }, {
        key: "unsubscribe",
        value: function unsubscribe(owner) {
            this.subscriptions = _.filter(this.subscriptions, function (s) {
                return s.owner != owner;
            });
        }
    }, {
        key: "trigger",
        value: function trigger(state) {
            var newState = state || this.state;

            _.each(this.subscriptions, function (s) {
                s.subscription(newState);
            });

            return __runtime.__trigger(this.type, newState);
        }
    }, {
        key: "dispatch",
        value: function dispatch(action) {
            if (_.isFunction(this.reducer)) {
                var newState = this.reducer(this.state, action);
                if (newState) {
                    this.state = newState;

                    this.trigger();
                }
            } else {
                logger.w("Cannot dispatch action:", this.type + "." + action);
            }
        }
    }]);

    return Store;
}(Observable);

var Semaphore = function () {
    function Semaphore(action) {
        _classCallCheck(this, Semaphore);

        this.complete = false;
        this.listeners = [];
        this.id = Semaphore.counter++;

        if (action) {
            this.runAction(action);
        }
    }

    _createClass(Semaphore, [{
        key: "runAction",
        value: function runAction(action) {
            var _this11 = this;

            async(function () {
                action();
                _this11.free();
            });
        }
    }, {
        key: "then",
        value: function then(action) {
            this.listeners.push(action);

            if (this.complete) {
                action();
            }

            return this;
        }
    }, {
        key: "free",
        value: function free(data) {
            this.listeners.forEach(function (l) {
                l(data);
            });
            this.complete = true;

            return this;
        }
    }]);

    return Semaphore;
}();

Semaphore.counter = 1;

function createRuntime(options) {
    __runtime = AJRuntime.create();
    __runtime.init(options);

    return __runtime;
};

function createStore(type, reducer) {
    if (_.has(__stores, type)) {
        throw "Cannot create store " + type + ". Only one instance of store is allowed";
    }

    var store = new Store(type, reducer);
    __stores[type] = store;

    logger.i("Store created:", type);

    return store;
}

function createAction(type, fn) {
    if (_.has(__actions, type)) {
        throw "Cannot create action " + type + ". Already created";
    }

    var act = __actions[type] = function (data) {
        if (DEBUG) {
            logger.i("Running action", type);
            logger.i(stringifyIfNotBrowser(data));
        }
        fn(data);
    };

    logger.i("Action created:", type);

    return act;
}

function dispatch(action) {
    if (DEBUG) {
        logger.i("Dispatching action", action.type);
        logger.i(stringifyIfNotBrowser(action));
    }

    _.each(__stores, function (store) {
        try {
            store.dispatch(action);
        } catch (e) {
            if (e && e.stack) {
                logger.e(e.stack);
            }
            logger.e(e);
        }
    });
}

function _run(action, data) {
    if (_.has(__actions, action)) {
        __actions[action](data);
    } else {
        logger.w("Cannot find action: " + action);
    }
}

function exec(plugin, fn, data) {
    return __runtime.exec(plugin, fn, data);
}

/**
 * @function createRuntime
 * @description Creates a new instance of runtime. Usually used internally by devices runtimes
 * @returns singleton instance of runtime
 */
var createRuntime = exports.createRuntime = createRuntime;

/**
 * @function createStore
 * @description Creates a new singleton instance of store
 * @param {string} type - Name of store to create
 * @param {function} reducer - Store reducer
 * @returns {store} - The newly created store
 */
var createStore = exports.createStore = createStore;

/**
 * @function createAction
 * @Description Creates a new action for the application
 * @param {string} type - Type of action to create
 * @param {function} action - Action to execute
 * @returns {function} The newly created action
 */
var createAction = exports.createAction = createAction;

/**
 * @function dispatch
 * @description Dispatch action to stores, usually called by actions
 * @param {object} data - Data to pass to stores
 */
var dispatch = exports.dispatch = dispatch;

/**
 * @function exec
 * @description Exec a plugin method
 * @param {string} plugin - The plugin
 * @param {method} method - The plugin method to call
 * @param {data} data - Data to pass to plugin
 * @returns {Promise} - A promise of plugin call result
 */
var exec = exports.exec = exec;

/**
 * @function run
 * @description Run specified action. This is not the common method to call actions, but it's necessary for managing actions from
 * devices. On JS side, call actions directly
 * @param {type} type - Type of action to call
 * @param {data} type - Data to pass to action
 */
var _run = _run;

exports.run = _run;
function createBuffer(data) {
    return __runtime.createBuffer(data);
}

function readBuffer(id) {
    return __runtime.readBuffer(id);
}

function destroyBuffer(id) {
    return __runtime.destroyBuffer(id);
}
});
define('aj/path.js', function(module, exports) {
"use strict";

var _ = require("../libs/underscore");

exports.ext = function (path) {
    if (_.isEmpty(path)) {
        return "";
    }

    var index = path.lastIndexOf(".");
    if (index == -1) {
        return "";
    }

    return path.substring(index);
};

exports.removeExt = function (path) {
    if (_.isEmpty(path)) {
        return path;
    }

    var index = path.lastIndexOf(".");
    if (index == -1) {
        return path;
    }

    return path.substring(0, index);
};
});
define('aj/storage.js', function(module, exports) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var assert = require("./assert");
var path = require("./path");
var base64 = require("./base64");

var StorageManager = function () {
    function StorageManager() {
        _classCallCheck(this, StorageManager);

        if (__storageManager == undefined) {
            throw "__storageManager undefined";
        }
    }

    /*
    Read text files and return a promise with the result as string
     */


    _createClass(StorageManager, [{
        key: "readText",
        value: function readText(path) {
            return new Promise(function (resolve, reject) {
                try {
                    assert.assertNotEmpty(path, "path is not defined");

                    logger.i("Reading text file", path);

                    __storageManager.readText(path, function (error, value) {
                        if (error) {
                            logger.e(value);
                            reject(value);
                        } else {
                            resolve(value);
                        }
                    });
                } catch (e) {
                    logger.e(e);
                    reject(e);
                }
            });
        }

        /*
         Read binary files and return a promise with the result as byte array (transfer with native using base64)
         */

    }, {
        key: "read",
        value: function read(path) {
            return new Promise(function (resolve, reject) {
                try {
                    assert.assertNotEmpty(path, "path is not defined");

                    logger.i("Reading binary file", path);

                    __storageManager.read(path, function (error, value) {
                        if (error) {
                            logger.e(value);
                            reject(value);
                        } else {
                            var bytes = base64.decode(value);
                            resolve(bytes);
                        }
                    });
                } catch (e) {
                    logger.e(e);
                    reject(e);
                }
            });
        }

        /*
         Write text files and return a promise with the result of operation
         */

    }, {
        key: "writeText",
        value: function writeText(path, content) {
            return new Promise(function (resolve, reject) {
                try {
                    assert.assertNotEmpty(path, "path is not defined");

                    logger.i("Writing text file", path);

                    __storageManager.writeText(path, content, function (error, value) {
                        if (error) {
                            logger.e(value);
                            reject(value);
                        } else {
                            resolve(value);
                        }
                    });
                } catch (e) {
                    logger.e(e);
                    reject(e);
                }
            });
        }

        /*
         Write binary files and return a promise with the result of operation
         */

    }, {
        key: "write",
        value: function write(path, bytes) {
            return new Promise(function (resolve, reject) {
                try {
                    assert.assertNotEmpty(path, "path is not defined");

                    logger.i("Writing binary file", path);

                    var content = base64.encode(bytes);
                    __storageManager.write(path, content, function (error, value) {
                        if (error) {
                            logger.e(value);
                            reject(value);
                        } else {
                            resolve(value);
                        }
                    });
                } catch (e) {
                    logger.e(e);
                    reject(e);
                }
            });
        }

        /*
         Delete a file and return a promise with the result of operation
         */

    }, {
        key: "delete",
        value: function _delete(path) {
            return new Promise(function (resolve, reject) {
                try {
                    assert.assertNotEmpty(path, "path is not defined");

                    logger.i("Deleting file", path);

                    __storageManager.delete(path, function (error, value) {
                        if (error) {
                            logger.e(value);
                            reject(value);
                        } else {
                            resolve(value);
                        }
                    });
                } catch (e) {
                    logger.e(e);
                    reject(e);
                }
            });
        }

        /*
         Check file existence and return a promise with the result of operation
         */

    }, {
        key: "exists",
        value: function exists(path) {
            return new Promise(function (resolve, reject) {
                try {
                    assert.assertNotEmpty(path, "path is not defined");

                    logger.i("Checking file existence", path);

                    __storageManager.exists(path, function (error, value) {
                        if (error) {
                            logger.e(value);
                            reject(value);
                        } else {
                            resolve(value);
                        }
                    });
                } catch (e) {
                    logger.e(e);
                    reject(e);
                }
            });
        }
    }]);

    return StorageManager;
}();

var instance = new StorageManager();

/**
 * Reads text of file in specified path
 * @param path
 * @returns A promise with text result
 */
exports.readText = function (path) {
    return instance.readText(path);
};

/**
 * Reads binary file from specified path.
 * @param path
 * @returns A promise of result
 */
exports.read = function (path) {
    return instance.read(path);
};

/**
 * Writes text contents in specified file
 * @param path
 * @param content
 * @returns A promise of result
 */
exports.writeText = function (path, content) {
    return instance.writeText(path, content);
};

/**
 * Writes bytes contents in speified file
 * @param path
 * @param bytes
 * @returns A promise of result
 */
exports.write = function (path, bytes) {
    return instance.write(path, bytes);
};

/**
 * Deletes specified file from device storage
 * @param path
 * @returns A promise of result
 */
exports.delete = function (path) {
    return instance.delete(path);
};

/**
 * Check if specified file exists in device storage
 * @param path
 * @returns A promise of result
 */
exports.exists = function (path) {
    return instance.exists(path);
};
});
define('api/account.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.register = register;
exports.recover = recover;
exports.confirm = confirm;
exports.getCoverImage = getCoverImage;
exports.getProfileImage = getProfileImage;

var _config = require("../framework/config");

var config = _interopRequireWildcard(_config);

var _utils = require("./utils");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function register(name, mail, password) {
    return (0, _utils.post)(config.get("account.register.url"), { name: name, mail: mail, password: password });
}

function recover(mail) {
    return (0, _utils.post)(config.get("account.recover.url"), { mail: mail });
}

function confirm(activationCode) {
    return (0, _utils.post)(config.get("account.confirm.url"), { activationCode: activationCode });
}

function getCoverImage(userId) {
    return (0, _utils.get)(config.get("account.url") + "/" + userId + "/cover");
}

function getProfileImage(userId) {
    return (0, _utils.get)(config.get("account.url") + "/" + userId + "/profile/image");
}
});
define('api/entities.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.find = find;
exports.load = load;
exports.delete_ = delete_;
exports.save = save;
exports.get = get;

var _config = require("../framework/config");

var config = _interopRequireWildcard(_config);

var _utils = require("./utils");

var utils = _interopRequireWildcard(_utils);

var _underscore = require("../libs/underscore");

var _ = _interopRequireWildcard(_underscore);

var _lang = require("../utils/lang");

var _http = require("../aj/http");

var http = _interopRequireWildcard(_http);

var _responses = require("./responses");

var responses = _interopRequireWildcard(_responses);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function find(entity, query) {
    return load(entity, query);
}

function load(entity, query) {
    var url = config.get("entities.url") + "/" + entity;
    return utils.get(url, (0, _lang.flatten)(query.cleaned()));
}

function delete_(entity, ids) {
    if (!_.isArray(ids)) {
        throw new Error("ids is not an array");
    }

    var data = [];
    for (var i = 0; i < ids.length; i++) {
        data.push("" + ids[i]);
    }

    var url = config.get("entities.url") + "/" + entity + "/delete";
    return utils.post(url, { ids: data.join() });
}

function save(entity, data) {
    var url = config.get("entities.url") + "/" + entity;
    return new Promise(function (resolve, reject) {
        var json = typeof data === "string" ? data : JSON.stringify(data);
        var headers = { "Content-Type": "application/json" };
        http.post(url, json, (0, _utils.addToken)(headers)).then(function (json) {
            if (_.isEmpty(json)) {
                reject(responses.ERROR);
            } else {
                var response = JSON.parse(json);

                if (responses.OK != response.responseCode) {
                    reject(response);
                } else {
                    resolve(response);
                }
            }
        }).catch(function (e) {
            logger.e("Error in request:", e);
            reject(responses.ERROR);
        });
    });
}

function get(entity, id) {
    var url = config.get("entities.url") + "/" + entity + "/" + id;
    return utils.get(url);
}
});
define('api/grids.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getGrid = getGrid;

var _config = require("../framework/config");

var config = _interopRequireWildcard(_config);

var _utils = require("./utils");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function getGrid(id) {
    var url = config.get("grids.url") + "/" + id;
    return (0, _utils.get)(url);
}
});
define('api/query.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Query = exports.RANGE = exports.AND = exports.OR = exports.ID = exports.NIN = exports.IN = exports.EQ = exports.LTE = exports.LT = exports.GTE = exports.NE = exports.GT = exports.LIKE = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.create = create;

var _underscore = require("../libs/underscore");

var _ = _interopRequireWildcard(_underscore);

var _events = require("../aj/events");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LIKE = exports.LIKE = "like";
var GT = exports.GT = "gt";
var NE = exports.NE = "ne";
var GTE = exports.GTE = "gte";
var LT = exports.LT = "lt";
var LTE = exports.LTE = "lte";
var EQ = exports.EQ = "eq";
var IN = exports.IN = "in";
var NIN = exports.NIN = "nin";
var ID = exports.ID = "id";
var OR = exports.OR = "or";
var AND = exports.AND = "and";
var RANGE = exports.RANGE = "range";

var Query = exports.Query = function (_Observable) {
    _inherits(Query, _Observable);

    function Query(init) {
        _classCallCheck(this, Query);

        var _this = _possibleConstructorReturn(this, (Query.__proto__ || Object.getPrototypeOf(Query)).call(this));

        _this.page = 0;
        _this.rowsPerPage = 0;
        _this.sorts = [];
        _this.filters = [];
        _this.keyword = null;

        _this.invokationEnabled = true;

        _.assign(_this, init);
        return _this;
    }

    _createClass(Query, [{
        key: "live",
        value: function live() {
            this.invokationEnabled = true;
        }
    }, {
        key: "die",
        value: function die() {
            this.invokationEnabled = false;
        }
    }, {
        key: "filter",
        value: function filter(type, property, value) {
            var current = _.find(this.filters, function (s) {
                return s.property == property;
            });
            if (current) {
                current.value = value;
                current.type = type;
            } else {
                this.filters.push({ property: property, type: type, value: value });
            }

            this.invokeChange();

            return this;
        }
    }, {
        key: "unfilter",
        value: function unfilter(property) {
            this.filters = _.filter(this.filters, function (f) {
                return f.property != property;
            });

            this.invokeChange();
            return this;
        }
    }, {
        key: "like",
        value: function like(prop, value) {
            this.filter(LIKE, prop, value);
            return this;
        }
    }, {
        key: "gt",
        value: function gt(prop, value) {
            this.filter(GT, prop, value);
            return this;
        }
    }, {
        key: "ne",
        value: function ne(prop, value) {
            this.filter(NE, prop, value);
            return this;
        }
    }, {
        key: "gte",
        value: function gte(prop, value) {
            this.filter(GTE, prop, value);
            return this;
        }
    }, {
        key: "lt",
        value: function lt(prop, value) {
            this.filter(LT, prop, value);
            return this;
        }
    }, {
        key: "lte",
        value: function lte(prop, value) {
            this.filter(LTE, prop, value);
            return this;
        }
    }, {
        key: "eq",
        value: function eq(prop, value) {
            this.filter(EQ, prop, value);
            return this;
        }
    }, {
        key: "in",
        value: function _in(prop, value) {
            this.filter(IN, prop, value);
            return this;
        }
    }, {
        key: "nin",
        value: function nin(prop, value) {
            this.filter(NE, prop, value);
            return this;
        }
    }, {
        key: "id",
        value: function id(prop, value) {
            this.filter(ID, prop, value);
            return this;
        }
    }, {
        key: "or",
        value: function or(prop, value) {
            this.filter(OR, prop, value);
            return this;
        }
    }, {
        key: "and",
        value: function and(prop, value) {
            this.filter(AND, prop, value);
            return this;
        }
    }, {
        key: "range",
        value: function range(prop, value) {
            this.filter(RANGE, prop, value);
            return this;
        }
    }, {
        key: "gt",
        value: function gt(prop, value) {
            this.filter(GT, prop, value);
            return this;
        }
    }, {
        key: "ne",
        value: function ne(prop, value) {
            this.filter(NE, prop, value);
            return this;
        }
    }, {
        key: "sort",
        value: function sort(prop, descending) {
            var current = _.find(this.sorts, function (s) {
                return s.property == prop;
            });
            if (current) {
                current.descending = descending;
            } else {
                this.sorts.push({ property: prop, descending: descending });
            }

            this.invokeChange();
            return this;
        }
    }, {
        key: "unsort",
        value: function unsort(prop) {
            this.sorts = _.filter(this.sorts, function (s) {
                return s.property != prop;
            });

            this.invokeChange();
            return this;
        }
    }, {
        key: "clearFilters",
        value: function clearFilters() {
            this.filters = [];
            this.invokeChange();
            return this;
        }
    }, {
        key: "setPage",
        value: function setPage(page) {
            this.page = page;
            this.invokeChange();
            return this;
        }
    }, {
        key: "setRowsPerPage",
        value: function setRowsPerPage(rowsPerPage) {
            this.rowsPerPage = rowsPerPage;
            this.invokeChange();
            return this;
        }
    }, {
        key: "setKeyword",
        value: function setKeyword(newValue) {
            this.keyword = newValue;
            this.invokeChange();
            return this;
        }
    }, {
        key: "invokeChange",
        value: function invokeChange() {
            if (this.invokationEnabled) {
                this.invoke("change");
            }
        }
    }, {
        key: "cleaned",
        value: function cleaned() {
            return {
                page: this.page,
                rowsPerPage: this.rowsPerPage,
                sorts: this.sorts,
                filters: this.filters,
                keyword: this.keyword
            };
        }
    }]);

    return Query;
}(_events.Observable);

function create(init) {
    var query = new Query(init);
    return query;
}
});
define('api/responses.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.ERROR_DOCUMENT_NOT_FOUND = exports.ERROR_WAREHOUSE_NOT_FOUND = exports.ERROR_CUSTOMER_NOT_FOUND = exports.ERROR_COVER_COMPONENT_NOT_CONFIGURED = exports.ERROR_COVER_COMPONENT_ALREADY_EXISTS = exports.ERROR_USER_COMPANY_NOT_SETTED = exports.ERROR_INVALID_DEFAULT_ARTICLE = exports.ERROR_ARTICLE_NOT_FOUND = exports.ERROR_INVALID_DATA = exports.ERROR_IO = exports.ERROR_ROLE_NOT_FOUND = exports.ERROR_CONNECTOR = exports.ERROR_CONSTRAINT_VIOLATION = exports.ERROR_USER_NOT_FOUND = exports.ERROR_NOT_FOUND = exports.ERROR_VALIDATION = exports.ERROR_PASSWORD_NOT_VALID = exports.ERROR_MAIL_NOT_VALID = exports.ERROR_TOKEN_FORMAT = exports.ERROR_TOKEN_GENERATION = exports.ERROR_BAD_CREDENTIALS = exports.ERROR_MAIL_NOT_FOUND = exports.ERROR_MAIL_ALREADY_EXISTS = exports.UNAUTHORIZED = exports.ERROR = exports.OK = undefined;
exports.msg = msg;
exports.value = value;

var _strings = require("../strings");

var _strings2 = _interopRequireDefault(_strings);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var OK = exports.OK = 0;
var ERROR = exports.ERROR = 1;
var UNAUTHORIZED = exports.UNAUTHORIZED = 2;

var ERROR_MAIL_ALREADY_EXISTS = exports.ERROR_MAIL_ALREADY_EXISTS = 1001;
var ERROR_MAIL_NOT_FOUND = exports.ERROR_MAIL_NOT_FOUND = 1002;
var ERROR_BAD_CREDENTIALS = exports.ERROR_BAD_CREDENTIALS = 1003;
var ERROR_TOKEN_GENERATION = exports.ERROR_TOKEN_GENERATION = 1004;
var ERROR_TOKEN_FORMAT = exports.ERROR_TOKEN_FORMAT = 1005;
var ERROR_MAIL_NOT_VALID = exports.ERROR_MAIL_NOT_VALID = 1006;
var ERROR_PASSWORD_NOT_VALID = exports.ERROR_PASSWORD_NOT_VALID = 1007;
var ERROR_VALIDATION = exports.ERROR_VALIDATION = 1008;
var ERROR_NOT_FOUND = exports.ERROR_NOT_FOUND = 1009;
var ERROR_USER_NOT_FOUND = exports.ERROR_USER_NOT_FOUND = 1010;
var ERROR_CONSTRAINT_VIOLATION = exports.ERROR_CONSTRAINT_VIOLATION = 1011;
var ERROR_CONNECTOR = exports.ERROR_CONNECTOR = 1012;
var ERROR_ROLE_NOT_FOUND = exports.ERROR_ROLE_NOT_FOUND = 1013;
var ERROR_IO = exports.ERROR_IO = 1014;
var ERROR_INVALID_DATA = exports.ERROR_INVALID_DATA = 1015;
var ERROR_ARTICLE_NOT_FOUND = exports.ERROR_ARTICLE_NOT_FOUND = 2001;
var ERROR_INVALID_DEFAULT_ARTICLE = exports.ERROR_INVALID_DEFAULT_ARTICLE = 2002;
var ERROR_USER_COMPANY_NOT_SETTED = exports.ERROR_USER_COMPANY_NOT_SETTED = 2003;
var ERROR_COVER_COMPONENT_ALREADY_EXISTS = exports.ERROR_COVER_COMPONENT_ALREADY_EXISTS = 2004;
var ERROR_COVER_COMPONENT_NOT_CONFIGURED = exports.ERROR_COVER_COMPONENT_NOT_CONFIGURED = 2005;
var ERROR_CUSTOMER_NOT_FOUND = exports.ERROR_CUSTOMER_NOT_FOUND = 3001;
var ERROR_WAREHOUSE_NOT_FOUND = exports.ERROR_WAREHOUSE_NOT_FOUND = 4001;
var ERROR_DOCUMENT_NOT_FOUND = exports.ERROR_DOCUMENT_NOT_FOUND = 5001;

var messages = {
	en: {},

	it: {}
};

messages["en"][OK] = "OK";
messages["en"][ERROR] = "Generic error";
messages["en"][ERROR_MAIL_ALREADY_EXISTS] = "Cannot register: mail already exists";
messages["en"][ERROR_MAIL_NOT_FOUND] = "Mail not found";
messages["en"][ERROR_BAD_CREDENTIALS] = "Cannot login: bad username or password";
messages["en"][ERROR_TOKEN_GENERATION] = "Error generating token";
messages["en"][ERROR_TOKEN_FORMAT] = "Bat token format";
messages["en"][ERROR_MAIL_NOT_VALID] = "Invalid email";
messages["en"][ERROR_PASSWORD_NOT_VALID] = "Password not valid";
messages["en"][ERROR_VALIDATION] = "Validation error. Please control inserted data and retry";
messages["en"][ERROR_NOT_FOUND] = "Not found";
messages["en"][ERROR_USER_NOT_FOUND] = "User not found";
messages["en"][ERROR_CONSTRAINT_VIOLATION] = "Constraint violation";
messages["en"][ERROR_CONNECTOR] = "There is a problem retrieving data from Gamma";
messages["en"][ERROR_ROLE_NOT_FOUND] = "Role not found";
messages["en"][ERROR_IO] = "IO error";
messages["en"][ERROR_INVALID_DATA] = "Invalid data";
messages["en"][ERROR_ARTICLE_NOT_FOUND] = "Article not found";
messages["en"][ERROR_INVALID_DEFAULT_ARTICLE] = "Invalid default article";
messages["en"][ERROR_USER_COMPANY_NOT_SETTED] = "User company not setted";
messages["en"][ERROR_COVER_COMPONENT_ALREADY_EXISTS] = "Cover component already exists";
messages["en"][ERROR_COVER_COMPONENT_NOT_CONFIGURED] = "Cover component not configured";
messages["en"][ERROR_CUSTOMER_NOT_FOUND] = "Customer not found";
messages["en"][ERROR_WAREHOUSE_NOT_FOUND] = "Warehouse not found";
messages["en"][ERROR_DOCUMENT_NOT_FOUND] = "Document not found";

messages["it"][OK] = "OK";
messages["it"][ERROR] = "Si è verificato un errore";
messages["it"][ERROR_MAIL_ALREADY_EXISTS] = "Impossibile registrarsi: indirizzo email già presente";
messages["it"][ERROR_MAIL_NOT_FOUND] = "Mail non trovata";
messages["it"][ERROR_BAD_CREDENTIALS] = "Impossibile accedere: email o password errati";
messages["it"][ERROR_TOKEN_GENERATION] = "Errore durante la generazione del token";
messages["it"][ERROR_TOKEN_FORMAT] = "Formato del token non valido";
messages["it"][ERROR_MAIL_NOT_VALID] = "Email non valida";
messages["it"][ERROR_PASSWORD_NOT_VALID] = "Password non valida";
messages["it"][ERROR_VALIDATION] = "Errore di validazione: ricontrollare i dati inseriti e riprovare";
messages["it"][ERROR_NOT_FOUND] = "Non trovato";
messages["it"][ERROR_USER_NOT_FOUND] = "Utente non trovato";
messages["it"][ERROR_CONSTRAINT_VIOLATION] = "Impossibile proseguire. Esistono entità collegate che dipendono da questa entità";
messages["it"][ERROR_CONNECTOR] = "Problema durante la comunicazione con Gamma";
messages["it"][ERROR_ROLE_NOT_FOUND] = "Ruolo non trovato";
messages["it"][ERROR_IO] = "IO error";
messages["it"][ERROR_INVALID_DATA] = "Dati non validi";
messages["it"][ERROR_ARTICLE_NOT_FOUND] = "Articolo non trovato";
messages["it"][ERROR_INVALID_DEFAULT_ARTICLE] = "Articolo predefinito non trovato";
messages["it"][ERROR_USER_COMPANY_NOT_SETTED] = "Azienda non configurata per l'utente corrente";
messages["it"][ERROR_COVER_COMPONENT_ALREADY_EXISTS] = "Componente di tipo rivestimento già presente";
messages["it"][ERROR_COVER_COMPONENT_NOT_CONFIGURED] = "Componente di tipo rivestimento non trovato";
messages["it"][ERROR_CUSTOMER_NOT_FOUND] = "Cliente non trovato";
messages["it"][ERROR_WAREHOUSE_NOT_FOUND] = "Magazzino non trovato";
messages["it"][ERROR_DOCUMENT_NOT_FOUND] = "Documento non trovato";

function msg(code) {
	if (_.has(messages[(0, _strings.getLanguage)()], code)) {
		return messages[(0, _strings.getLanguage)()][code];
	}

	return "Code: = " + code;
}

/**
 * Returns value of value responses. If o is a promise, a wrapped promise thar returns value will be returned
 */
function value(o) {
	if (o instanceof Promise) {
		return new Promise(function (resolve, reject) {
			o.then(function (result) {
				resolve(result.value);
			}).catch(function (e) {
				return reject(e);
			});
		});
	} else {
		if (_.isObject(o)) {
			return o.value;
		}
	}

	logger.w(o, "is not a value response");

	return null;
}
});
define('api/session.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TYPE_FACEBOOK = exports.TYPE_MAIL = undefined;
exports.login = login;
exports.start = start;
exports.resume = resume;
exports.destroy = destroy;
exports.getLoggedUser = getLoggedUser;
exports.isLoggedIn = isLoggedIn;
exports.getSessionToken = getSessionToken;

var _http = require("../aj/http");

var http = _interopRequireWildcard(_http);

var _preferences = require("../framework/preferences");

var preferences = _interopRequireWildcard(_preferences);

var _config = require("../framework/config");

var config = _interopRequireWildcard(_config);

var _underscore = require("../libs/underscore");

var _ = _interopRequireWildcard(_underscore);

var _responses = require("./responses");

var responses = _interopRequireWildcard(_responses);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var _loggedUser = void 0;
var _sessionToken = void 0;

var TYPE_MAIL = exports.TYPE_MAIL = "MAIL";
var TYPE_FACEBOOK = exports.TYPE_FACEBOOK = "FACEBOOK";

var STOP_OBJ = {};

function stop() {
    return STOP_OBJ;
}

function wrap(r, fn) {
    if (r == STOP_OBJ) {
        return STOP_OBJ;
    } else {
        return fn(r);
    }
}

function login(mail, password) {
    return new Promise(function (resolve, reject) {
        http.post(config.get("login.url"), { mail: mail, password: password }).then(function (json) {
            if (_.isEmpty(json)) {
                reject(responses.ERROR);
            } else {
                var response = JSON.parse(json);

                if (responses.OK != response.responseCode) {
                    reject(response.responseCode);
                } else {
                    resolve(response);
                }
            }
        }).catch(function (e) {
            logger.e("Error logging in:", e);
            reject(responses.ERROR);
        });
    });
}

function start(mail, password) {
    return new Promise(function (resolve, reject) {
        _loggedUser = null;
        _sessionToken = null;

        var data = {};

        preferences.load().then(function () {
            return login(mail, password);
        }).then(function (response) {
            preferences.set("session.type", TYPE_MAIL);
            preferences.set("session.mail", mail);
            preferences.set("session.password", password);

            _sessionToken = response.token;
            console.log(_sessionToken);
            _loggedUser = response.user;

            return preferences.save();
        }).then(function (r) {
            resolve(_loggedUser);
        }).catch(function (e) {
            _loggedUser = null;
            _sessionToken = null;

            preferences.load().then(function () {
                preferences.set("session.type", null);
                preferences.set("session.mail", null);
                preferences.set("session.password", null);
                return preferences.save();
            }).catch(function (e) {
                logger.e(e);
            });

            reject(e);
        });
    });
}

function resume() {
    return new Promise(function (resolve, reject) {
        _loggedUser = null;
        _sessionToken = null;

        preferences.load().then(function () {
            var type = preferences.get("session.type");
            var mail = preferences.get("session.mail");
            var password = preferences.get("session.password");

            if (type == TYPE_MAIL && mail && password) {
                return start(mail, password);
            } else {
                reject(responses.ERROR);
                return stop();
            }
        }).then(function (r) {
            return wrap(r, function () {
                resolve(r);
            });
        }).catch(function (e) {
            reject(e);
        });
    });
}

function destroy() {
    _loggedUser = null;
    _sessionToken = null;

    return preferences.load().then(function () {
        preferences.set("session.type", null);
        preferences.set("session.mail", null);
        preferences.set("session.password", null);
        return preferences.save();
    }).catch(function (e) {
        logger.e(e);
    });
}

function getLoggedUser() {
    return _loggedUser;
}

function isLoggedIn() {
    return _loggedUser != null;
}

function getSessionToken() {
    return _sessionToken;
}
});
define('api/utils.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.addToken = addToken;
exports.post = post;
exports.postJson = postJson;
exports.get = get;
exports.delete_ = delete_;

var _http = require("../aj/http");

var http = _interopRequireWildcard(_http);

var _responses = require("./responses");

var responses = _interopRequireWildcard(_responses);

var _session = require("./session");

var _underscore = require("../libs/underscore");

var _ = _interopRequireWildcard(_underscore);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function addToken(headers) {
    if (!_.isEmpty((0, _session.getSessionToken)())) {
        return _.assign(headers || {}, { "x-auth-token": (0, _session.getSessionToken)() });
    } else {
        return headers;
    }
}

function post(url, data) {
    var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    return new Promise(function (resolve, reject) {
        http.post(url, data, addToken(headers)).then(function (json) {
            if (_.isEmpty(json)) {
                reject(responses.ERROR);
            } else {
                var response = JSON.parse(json);

                if (responses.OK != response.responseCode) {
                    reject(response.responseCode, response);
                } else {
                    resolve(response);
                }
            }
        }).catch(function (e) {
            logger.e("Error in request:", e);
            reject(responses.ERROR);
        });
    });
}

function postJson(url, data) {
    var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    return new Promise(function (resolve, reject) {
        var json = typeof data == "string" ? data : JSON.stringify(data);
        headers = _.assign(headers, { "Content-Type": "application/json" });
        http.post(url, json, addToken(headers)).then(function (json) {
            if (_.isEmpty(json)) {
                reject(responses.ERROR);
            } else {
                var response = JSON.parse(json);

                if (responses.OK != response.responseCode) {
                    reject(response.responseCode);
                } else {
                    resolve(response);
                }
            }
        }).catch(function (e) {
            logger.e("Error in request:", e);
            reject(responses.ERROR);
        });
    });
}

function get(url, data) {
    var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    return new Promise(function (resolve, reject) {
        http.get(url, data, addToken(headers)).then(function (json) {
            if (_.isEmpty(json)) {
                reject(responses.ERROR);
            } else {
                var response = JSON.parse(json);

                if (responses.OK != response.responseCode) {
                    reject(response.responseCode, response);
                } else {
                    resolve(response);
                }
            }
        }).catch(function (e) {
            logger.e("Error in request:", e);
            reject(responses.ERROR);
        });
    });
}

function delete_(url, data, headers) {
    return new Promise(function (resolve, reject) {
        http.delete(url, data, addToken(headers)).then(function (json) {
            if (_.isEmpty(json)) {
                reject(responses.ERROR);
            } else {
                var response = JSON.parse(json);

                if (responses.OK != response.responseCode) {
                    reject(response.responseCode, response);
                } else {
                    resolve(response);
                }
            }
        }).catch(function (e) {
            logger.e("Error in request:", e);
            reject(responses.ERROR);
        });
    });
}
});
define('api/values.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.loadEntities = loadEntities;
exports.load = load;

var _underscore = require("../libs/underscore");

var _ = _interopRequireWildcard(_underscore);

var _lang = require("../utils/lang");

var _query2 = require("../api/query");

var query = _interopRequireWildcard(_query2);

var _utils = require("./utils");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var aj = require("../aj");
var http = require("../aj/http");

var preferences = require("../framework/preferences");
var config = require("../framework/config");

function loadEntities(entity, _query) {
    if (_.isEmpty(_query)) {
        _query = query.create();
    }
    var url = config.get("values.entities.url") + "/" + entity;
    return (0, _utils.get)(url, (0, _lang.flatten)(_query.cleaned()));
}

function load(collection, keyword) {
    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    var url = config.get("values.url") + "/" + collection;
    if (!_.isEmpty(keyword)) {
        url += "?keyword=" + keyword;
    }

    var separator = "&";
    if (url.indexOf("?") == -1) {
        separator = "?";
    }

    var paramsString = "";
    _.each(_.allKeys(params), function (k) {
        paramsString += k + "=" + encodeURIComponent(params[k]);
    });

    if (!_.isEmpty(paramsString)) {
        url += separator + paramsString;
    }

    return (0, _utils.get)(url);
}
});
define('config.js', function(module, exports) {
"use strict";

var serviceBase = "http://localhost:8080/";

module.exports = {
    "service.url": "" + serviceBase,
    "fs.url": serviceBase + "fs",
    "login.url": serviceBase + "auth/login",
    "account.url": serviceBase + "account",
    "account.register.url": serviceBase + "account/register",
    "account.recover.url": serviceBase + "account/recover",
    "account.reset.url": serviceBase + "account/reset",
    "account.confirm.url": serviceBase + "account/confirm",
    "grids.url": serviceBase + "grids",
    "entities.url": serviceBase + "entities",
    "entities.delete.url": serviceBase + "entities/delete",
    "values.url": serviceBase + "values",
    "values.entities.url": serviceBase + "values/entities"
};
});
define('framework/config.js', function(module, exports) {
"use strict";

var config = require("../config");

var _ = require("./../libs/underscore");

exports.get = function (key) {
    if (_.has(config, key)) {
        return config[key];
    } else {
        throw "Config not found: " + key;
    }
};
});
define('framework/preferences.js', function(module, exports) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var storage = require("../aj/storage");

var Preferences = function () {
    _createClass(Preferences, null, [{
        key: "instance",
        value: function instance() {
            if (!Preferences._instance) {
                Preferences._instance = new Preferences();
            }

            return Preferences._instance;
        }
    }]);

    function Preferences() {
        _classCallCheck(this, Preferences);

        this.path = "preferences.json";
        this.data = {};
    }

    _createClass(Preferences, [{
        key: "load",
        value: function load() {
            var _this = this;

            logger.i("Loading preferences...");

            this.data = {};

            return new Promise(function (resolve, reject) {
                storage.exists(_this.path).then(function (exists) {
                    if (exists) {
                        return storage.readText(_this.path).then(function (content) {
                            logger.i("Preferences:", content);
                            try {
                                _this.data = JSON.parse(content);
                            } catch (e) {}
                            resolve(_this);
                        });
                    } else {
                        resolve(_this);
                    }
                }).catch(function (e) {
                    return reject(e);
                });
            });
        }
    }, {
        key: "get",
        value: function get(key) {
            return this.data[key];
        }
    }, {
        key: "set",
        value: function set(key, value) {
            this.data[key] = value;
        }
    }, {
        key: "save",
        value: function save() {
            var _this2 = this;

            logger.i("Saving preferences", JSON.stringify(this.data));
            return new Promise(function (resolve, reject) {
                storage.writeText(_this2.path, JSON.stringify(_this2.data)).then(function () {
                    resolve();
                }).catch(function (e) {
                    return reject(e);
                });
            });
        }
    }, {
        key: "clear",
        value: function clear() {
            this.data = {};
        }
    }]);

    return Preferences;
}();

exports.Preferences = Preferences;

exports.load = function () {
    return Preferences.instance().load();
};

exports.get = function (key) {
    return Preferences.instance().get(key);
};

exports.set = function (key, value) {
    return Preferences.instance().set(key, value);
};

exports.save = function () {
    return Preferences.instance().save();
};

exports.clear = function () {
    return Preferences.instance().clear();
};
});
define('framework/services.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.get = get;
exports.register = register;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ServiceLocator = function () {
    _createClass(ServiceLocator, null, [{
        key: "instance",
        value: function instance() {
            if (!ServiceLocator.__instance) {
                ServiceLocator.__instance = new ServiceLocator("applica");
            }

            return ServiceLocator.__instance;
        }
    }]);

    function ServiceLocator(pwd) {
        _classCallCheck(this, ServiceLocator);

        if (pwd != "applica") {
            throw new Error("ServiceLocator is a singleton. Please use ServiceLocator.instance()");
        }

        this.services = {};
    }

    _createClass(ServiceLocator, [{
        key: "register",
        value: function register(type, fn) {
            this.services[type] = fn;
        }
    }, {
        key: "getService",
        value: function getService(type) {
            if (this.services[type]) {
                return this.services[type];
            }

            throw new Error("Service not registered: " + type);
        }
    }]);

    return ServiceLocator;
}();

function get(type) {
    return ServiceLocator.instance().getService(type);
}

function register(type, fn) {
    ServiceLocator.instance().register(type, fn);
}
});
define('framework/utils.js', function(module, exports) {
"use strict";

exports.isEmpty = function (obj) {
    if (obj == undefined) {
        return true;
    }
    if (obj == null) {
        return true;
    }

    if (obj instanceof Array) {
        return obj.length == 0;
    }

    if (obj == "") {
        return true;
    }

    return false;
};

exports.isNotEmpty = function (obj) {
    return !exports.isEmpty(obj);
};
});
define('libs/moment.js', function(module, exports) {
//! moment.js
//! version : 2.15.1
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com

;(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    global.moment = factory()
}(this, function () { 'use strict';

    var hookCallback;

    function utils_hooks__hooks () {
        return hookCallback.apply(null, arguments);
    }

    // This is done to register the method called with moment()
    // without creating circular dependencies.
    function setHookCallback (callback) {
        hookCallback = callback;
    }

    function isArray(input) {
        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
    }

    function isObject(input) {
        // IE8 will treat undefined and null as object if it wasn't for
        // input != null
        return input != null && Object.prototype.toString.call(input) === '[object Object]';
    }

    function isObjectEmpty(obj) {
        var k;
        for (k in obj) {
            // even if its not own property I'd still call it non-empty
            return false;
        }
        return true;
    }

    function isDate(input) {
        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
    }

    function map(arr, fn) {
        var res = [], i;
        for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i));
        }
        return res;
    }

    function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
    }

    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i];
            }
        }

        if (hasOwnProp(b, 'toString')) {
            a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function create_utc__createUTC (input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
    }

    function defaultParsingFlags() {
        // We need to deep clone this object.
        return {
            empty           : false,
            unusedTokens    : [],
            unusedInput     : [],
            overflow        : -2,
            charsLeftOver   : 0,
            nullInput       : false,
            invalidMonth    : null,
            invalidFormat   : false,
            userInvalidated : false,
            iso             : false,
            parsedDateParts : [],
            meridiem        : null
        };
    }

    function getParsingFlags(m) {
        if (m._pf == null) {
            m._pf = defaultParsingFlags();
        }
        return m._pf;
    }

    var some;
    if (Array.prototype.some) {
        some = Array.prototype.some;
    } else {
        some = function (fun) {
            var t = Object(this);
            var len = t.length >>> 0;

            for (var i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                    return true;
                }
            }

            return false;
        };
    }

    function valid__isValid(m) {
        if (m._isValid == null) {
            var flags = getParsingFlags(m);
            var parsedParts = some.call(flags.parsedDateParts, function (i) {
                return i != null;
            });
            var isNowValid = !isNaN(m._d.getTime()) &&
                flags.overflow < 0 &&
                !flags.empty &&
                !flags.invalidMonth &&
                !flags.invalidWeekday &&
                !flags.nullInput &&
                !flags.invalidFormat &&
                !flags.userInvalidated &&
                (!flags.meridiem || (flags.meridiem && parsedParts));

            if (m._strict) {
                isNowValid = isNowValid &&
                    flags.charsLeftOver === 0 &&
                    flags.unusedTokens.length === 0 &&
                    flags.bigHour === undefined;
            }

            if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid;
            }
            else {
                return isNowValid;
            }
        }
        return m._isValid;
    }

    function valid__createInvalid (flags) {
        var m = create_utc__createUTC(NaN);
        if (flags != null) {
            extend(getParsingFlags(m), flags);
        }
        else {
            getParsingFlags(m).userInvalidated = true;
        }

        return m;
    }

    function isUndefined(input) {
        return input === void 0;
    }

    // Plugins that add properties should also add the key here (null value),
    // so we can properly clone ourselves.
    var momentProperties = utils_hooks__hooks.momentProperties = [];

    function copyConfig(to, from) {
        var i, prop, val;

        if (!isUndefined(from._isAMomentObject)) {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (!isUndefined(from._i)) {
            to._i = from._i;
        }
        if (!isUndefined(from._f)) {
            to._f = from._f;
        }
        if (!isUndefined(from._l)) {
            to._l = from._l;
        }
        if (!isUndefined(from._strict)) {
            to._strict = from._strict;
        }
        if (!isUndefined(from._tzm)) {
            to._tzm = from._tzm;
        }
        if (!isUndefined(from._isUTC)) {
            to._isUTC = from._isUTC;
        }
        if (!isUndefined(from._offset)) {
            to._offset = from._offset;
        }
        if (!isUndefined(from._pf)) {
            to._pf = getParsingFlags(from);
        }
        if (!isUndefined(from._locale)) {
            to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
            for (i in momentProperties) {
                prop = momentProperties[i];
                val = from[prop];
                if (!isUndefined(val)) {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    var updateInProgress = false;

    // Moment prototype object
    function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
        // Prevent infinite loop in case updateOffset creates new moment
        // objects.
        if (updateInProgress === false) {
            updateInProgress = true;
            utils_hooks__hooks.updateOffset(this);
            updateInProgress = false;
        }
    }

    function isMoment (obj) {
        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
    }

    function absFloor (number) {
        if (number < 0) {
            // -0 -> 0
            return Math.ceil(number) || 0;
        } else {
            return Math.floor(number);
        }
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            value = absFloor(coercedNumber);
        }

        return value;
    }

    // compare two arrays, return the number of differences
    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if ((dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    function warn(msg) {
        if (utils_hooks__hooks.suppressDeprecationWarnings === false &&
                (typeof console !==  'undefined') && console.warn) {
            console.warn('Deprecation warning: ' + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;

        return extend(function () {
            if (utils_hooks__hooks.deprecationHandler != null) {
                utils_hooks__hooks.deprecationHandler(null, msg);
            }
            if (firstTime) {
                var args = [];
                var arg;
                for (var i = 0; i < arguments.length; i++) {
                    arg = '';
                    if (typeof arguments[i] === 'object') {
                        arg += '\n[' + i + '] ';
                        for (var key in arguments[0]) {
                            arg += key + ': ' + arguments[0][key] + ', ';
                        }
                        arg = arg.slice(0, -2); // Remove trailing comma and space
                    } else {
                        arg = arguments[i];
                    }
                    args.push(arg);
                }
                warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    var deprecations = {};

    function deprecateSimple(name, msg) {
        if (utils_hooks__hooks.deprecationHandler != null) {
            utils_hooks__hooks.deprecationHandler(name, msg);
        }
        if (!deprecations[name]) {
            warn(msg);
            deprecations[name] = true;
        }
    }

    utils_hooks__hooks.suppressDeprecationWarnings = false;
    utils_hooks__hooks.deprecationHandler = null;

    function isFunction(input) {
        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
    }

    function locale_set__set (config) {
        var prop, i;
        for (i in config) {
            prop = config[i];
            if (isFunction(prop)) {
                this[i] = prop;
            } else {
                this['_' + i] = prop;
            }
        }
        this._config = config;
        // Lenient ordinal parsing accepts just a number in addition to
        // number + (possibly) stuff coming from _ordinalParseLenient.
        this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\d{1,2}/).source);
    }

    function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig), prop;
        for (prop in childConfig) {
            if (hasOwnProp(childConfig, prop)) {
                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                    res[prop] = {};
                    extend(res[prop], parentConfig[prop]);
                    extend(res[prop], childConfig[prop]);
                } else if (childConfig[prop] != null) {
                    res[prop] = childConfig[prop];
                } else {
                    delete res[prop];
                }
            }
        }
        for (prop in parentConfig) {
            if (hasOwnProp(parentConfig, prop) &&
                    !hasOwnProp(childConfig, prop) &&
                    isObject(parentConfig[prop])) {
                // make sure changes to properties don't modify parent config
                res[prop] = extend({}, res[prop]);
            }
        }
        return res;
    }

    function Locale(config) {
        if (config != null) {
            this.set(config);
        }
    }

    var keys;

    if (Object.keys) {
        keys = Object.keys;
    } else {
        keys = function (obj) {
            var i, res = [];
            for (i in obj) {
                if (hasOwnProp(obj, i)) {
                    res.push(i);
                }
            }
            return res;
        };
    }

    var defaultCalendar = {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    };

    function locale_calendar__calendar (key, mom, now) {
        var output = this._calendar[key] || this._calendar['sameElse'];
        return isFunction(output) ? output.call(mom, now) : output;
    }

    var defaultLongDateFormat = {
        LTS  : 'h:mm:ss A',
        LT   : 'h:mm A',
        L    : 'MM/DD/YYYY',
        LL   : 'MMMM D, YYYY',
        LLL  : 'MMMM D, YYYY h:mm A',
        LLLL : 'dddd, MMMM D, YYYY h:mm A'
    };

    function longDateFormat (key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];

        if (format || !formatUpper) {
            return format;
        }

        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
            return val.slice(1);
        });

        return this._longDateFormat[key];
    }

    var defaultInvalidDate = 'Invalid date';

    function invalidDate () {
        return this._invalidDate;
    }

    var defaultOrdinal = '%d';
    var defaultOrdinalParse = /\d{1,2}/;

    function ordinal (number) {
        return this._ordinal.replace('%d', number);
    }

    var defaultRelativeTime = {
        future : 'in %s',
        past   : '%s ago',
        s  : 'a few seconds',
        m  : 'a minute',
        mm : '%d minutes',
        h  : 'an hour',
        hh : '%d hours',
        d  : 'a day',
        dd : '%d days',
        M  : 'a month',
        MM : '%d months',
        y  : 'a year',
        yy : '%d years'
    };

    function relative__relativeTime (number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return (isFunction(output)) ?
            output(number, withoutSuffix, string, isFuture) :
            output.replace(/%d/i, number);
    }

    function pastFuture (diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
    }

    var aliases = {};

    function addUnitAlias (unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
    }

    function normalizeUnits(units) {
        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    var priorities = {};

    function addUnitPriority(unit, priority) {
        priorities[unit] = priority;
    }

    function getPrioritizedUnits(unitsObj) {
        var units = [];
        for (var u in unitsObj) {
            units.push({unit: u, priority: priorities[u]});
        }
        units.sort(function (a, b) {
            return a.priority - b.priority;
        });
        return units;
    }

    function makeGetSet (unit, keepTime) {
        return function (value) {
            if (value != null) {
                get_set__set(this, unit, value);
                utils_hooks__hooks.updateOffset(this, keepTime);
                return this;
            } else {
                return get_set__get(this, unit);
            }
        };
    }

    function get_set__get (mom, unit) {
        return mom.isValid() ?
            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
    }

    function get_set__set (mom, unit, value) {
        if (mom.isValid()) {
            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
        }
    }

    // MOMENTS

    function stringGet (units) {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units]();
        }
        return this;
    }


    function stringSet (units, value) {
        if (typeof units === 'object') {
            units = normalizeObjectUnits(units);
            var prioritized = getPrioritizedUnits(units);
            for (var i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit]);
            }
        } else {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
                return this[units](value);
            }
        }
        return this;
    }

    function zeroFill(number, targetLength, forceSign) {
        var absNumber = '' + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (sign ? (forceSign ? '+' : '') : '-') +
            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
    }

    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

    var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

    var formatFunctions = {};

    var formatTokenFunctions = {};

    // token:    'M'
    // padded:   ['MM', 2]
    // ordinal:  'Mo'
    // callback: function () { this.month() + 1 }
    function addFormatToken (token, padded, ordinal, callback) {
        var func = callback;
        if (typeof callback === 'string') {
            func = function () {
                return this[callback]();
            };
        }
        if (token) {
            formatTokenFunctions[token] = func;
        }
        if (padded) {
            formatTokenFunctions[padded[0]] = function () {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
            };
        }
        if (ordinal) {
            formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(func.apply(this, arguments), token);
            };
        }
    }

    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens), i, length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '', i;
            for (i = 0; i < length; i++) {
                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];
            }
            return output;
        };
    }

    // format date using native date object
    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());
        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }

    var match1         = /\d/;            //       0 - 9
    var match2         = /\d\d/;          //      00 - 99
    var match3         = /\d{3}/;         //     000 - 999
    var match4         = /\d{4}/;         //    0000 - 9999
    var match6         = /[+-]?\d{6}/;    // -999999 - 999999
    var match1to2      = /\d\d?/;         //       0 - 99
    var match3to4      = /\d\d\d\d?/;     //     999 - 9999
    var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
    var match1to3      = /\d{1,3}/;       //       0 - 999
    var match1to4      = /\d{1,4}/;       //       0 - 9999
    var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

    var matchUnsigned  = /\d+/;           //       0 - inf
    var matchSigned    = /[+-]?\d+/;      //    -inf - inf

    var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
    var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

    var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

    // any word (or two) characters or numbers including two/three word month in arabic.
    // includes scottish gaelic two word and hyphenated months
    var matchWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i;


    var regexes = {};

    function addRegexToken (token, regex, strictRegex) {
        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
            return (isStrict && strictRegex) ? strictRegex : regex;
        };
    }

    function getParseRegexForToken (token, config) {
        if (!hasOwnProp(regexes, token)) {
            return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
    }

    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
    function unescapeFormat(s) {
        return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
            return p1 || p2 || p3 || p4;
        }));
    }

    function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    var tokens = {};

    function addParseToken (token, callback) {
        var i, func = callback;
        if (typeof token === 'string') {
            token = [token];
        }
        if (typeof callback === 'number') {
            func = function (input, array) {
                array[callback] = toInt(input);
            };
        }
        for (i = 0; i < token.length; i++) {
            tokens[token[i]] = func;
        }
    }

    function addWeekParseToken (token, callback) {
        addParseToken(token, function (input, array, config, token) {
            config._w = config._w || {};
            callback(input, config._w, config, token);
        });
    }

    function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
            tokens[token](input, config._a, config, token);
        }
    }

    var YEAR = 0;
    var MONTH = 1;
    var DATE = 2;
    var HOUR = 3;
    var MINUTE = 4;
    var SECOND = 5;
    var MILLISECOND = 6;
    var WEEK = 7;
    var WEEKDAY = 8;

    var indexOf;

    if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
    } else {
        indexOf = function (o) {
            // I know
            var i;
            for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                    return i;
                }
            }
            return -1;
        };
    }

    function daysInMonth(year, month) {
        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();
    }

    // FORMATTING

    addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
    });

    addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
    });

    addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
    });

    // ALIASES

    addUnitAlias('month', 'M');

    // PRIORITY

    addUnitPriority('month', 8);

    // PARSING

    addRegexToken('M',    match1to2);
    addRegexToken('MM',   match1to2, match2);
    addRegexToken('MMM',  function (isStrict, locale) {
        return locale.monthsShortRegex(isStrict);
    });
    addRegexToken('MMMM', function (isStrict, locale) {
        return locale.monthsRegex(isStrict);
    });

    addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
    });

    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict);
        // if we didn't find a month name, mark the date as invalid.
        if (month != null) {
            array[MONTH] = month;
        } else {
            getParsingFlags(config).invalidMonth = input;
        }
    });

    // LOCALES

    var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/;
    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
    function localeMonths (m, format) {
        if (!m) {
            return this._months;
        }
        return isArray(this._months) ? this._months[m.month()] :
            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
    }

    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
    function localeMonthsShort (m, format) {
        if (!m) {
            return this._monthsShort;
        }
        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
    }

    function units_month__handleStrictParse(monthName, format, strict) {
        var i, ii, mom, llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
            // this is not used
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (i = 0; i < 12; ++i) {
                mom = create_utc__createUTC([2000, i]);
                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeMonthsParse (monthName, format, strict) {
        var i, mom, regex;

        if (this._monthsParseExact) {
            return units_month__handleStrictParse.call(this, monthName, format, strict);
        }

        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
        }

        // TODO: add sorting
        // Sorting makes sure if one month (or abbr) is a prefix of another
        // see sorting in computeMonthsParse
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = create_utc__createUTC([2000, i]);
            if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
            }
            if (!strict && !this._monthsParse[i]) {
                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
                return i;
            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
                return i;
            } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function setMonth (mom, value) {
        var dayOfMonth;

        if (!mom.isValid()) {
            // No op
            return mom;
        }

        if (typeof value === 'string') {
            if (/^\d+$/.test(value)) {
                value = toInt(value);
            } else {
                value = mom.localeData().monthsParse(value);
                // TODO: Another silent failure?
                if (typeof value !== 'number') {
                    return mom;
                }
            }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function getSetMonth (value) {
        if (value != null) {
            setMonth(this, value);
            utils_hooks__hooks.updateOffset(this, true);
            return this;
        } else {
            return get_set__get(this, 'Month');
        }
    }

    function getDaysInMonth () {
        return daysInMonth(this.year(), this.month());
    }

    var defaultMonthsShortRegex = matchWord;
    function monthsShortRegex (isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsShortStrictRegex;
            } else {
                return this._monthsShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsShortRegex')) {
                this._monthsShortRegex = defaultMonthsShortRegex;
            }
            return this._monthsShortStrictRegex && isStrict ?
                this._monthsShortStrictRegex : this._monthsShortRegex;
        }
    }

    var defaultMonthsRegex = matchWord;
    function units_month__monthsRegex (isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsStrictRegex;
            } else {
                return this._monthsRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsRegex')) {
                this._monthsRegex = defaultMonthsRegex;
            }
            return this._monthsStrictRegex && isStrict ?
                this._monthsStrictRegex : this._monthsRegex;
        }
    }

    function computeMonthsParse () {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var shortPieces = [], longPieces = [], mixedPieces = [],
            i, mom;
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = create_utc__createUTC([2000, i]);
            shortPieces.push(this.monthsShort(mom, ''));
            longPieces.push(this.months(mom, ''));
            mixedPieces.push(this.months(mom, ''));
            mixedPieces.push(this.monthsShort(mom, ''));
        }
        // Sorting makes sure if one month (or abbr) is a prefix of another it
        // will match the longer piece.
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 12; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
        }
        for (i = 0; i < 24; i++) {
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
    }

    // FORMATTING

    addFormatToken('Y', 0, 0, function () {
        var y = this.year();
        return y <= 9999 ? '' + y : '+' + y;
    });

    addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
    });

    addFormatToken(0, ['YYYY',   4],       0, 'year');
    addFormatToken(0, ['YYYYY',  5],       0, 'year');
    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

    // ALIASES

    addUnitAlias('year', 'y');

    // PRIORITIES

    addUnitPriority('year', 1);

    // PARSING

    addRegexToken('Y',      matchSigned);
    addRegexToken('YY',     match1to2, match2);
    addRegexToken('YYYY',   match1to4, match4);
    addRegexToken('YYYYY',  match1to6, match6);
    addRegexToken('YYYYYY', match1to6, match6);

    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
    addParseToken('YYYY', function (input, array) {
        array[YEAR] = input.length === 2 ? utils_hooks__hooks.parseTwoDigitYear(input) : toInt(input);
    });
    addParseToken('YY', function (input, array) {
        array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);
    });
    addParseToken('Y', function (input, array) {
        array[YEAR] = parseInt(input, 10);
    });

    // HELPERS

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    function isLeapYear(year) {
        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    }

    // HOOKS

    utils_hooks__hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    // MOMENTS

    var getSetYear = makeGetSet('FullYear', true);

    function getIsLeapYear () {
        return isLeapYear(this.year());
    }

    function createDate (y, m, d, h, M, s, ms) {
        //can't just apply() to create a date:
        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply
        var date = new Date(y, m, d, h, M, s, ms);

        //the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {
            date.setFullYear(y);
        }
        return date;
    }

    function createUTCDate (y) {
        var date = new Date(Date.UTC.apply(null, arguments));

        //the Date.UTC function remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {
            date.setUTCFullYear(y);
        }
        return date;
    }

    // start-of-first-week - start-of-year
    function firstWeekOffset(year, dow, doy) {
        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
            fwd = 7 + dow - doy,
            // first-week day local weekday -- which local weekday is fwd
            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

        return -fwdlw + fwd - 1;
    }

    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7,
            weekOffset = firstWeekOffset(year, dow, doy),
            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
            resYear, resDayOfYear;

        if (dayOfYear <= 0) {
            resYear = year - 1;
            resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
            resYear = year + 1;
            resDayOfYear = dayOfYear - daysInYear(year);
        } else {
            resYear = year;
            resDayOfYear = dayOfYear;
        }

        return {
            year: resYear,
            dayOfYear: resDayOfYear
        };
    }

    function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
            resWeek, resYear;

        if (week < 1) {
            resYear = mom.year() - 1;
            resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
            resWeek = week - weeksInYear(mom.year(), dow, doy);
            resYear = mom.year() + 1;
        } else {
            resYear = mom.year();
            resWeek = week;
        }

        return {
            week: resWeek,
            year: resYear
        };
    }

    function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy),
            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
    }

    // FORMATTING

    addFormatToken('w', ['ww', 2], 'wo', 'week');
    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

    // ALIASES

    addUnitAlias('week', 'w');
    addUnitAlias('isoWeek', 'W');

    // PRIORITIES

    addUnitPriority('week', 5);
    addUnitPriority('isoWeek', 5);

    // PARSING

    addRegexToken('w',  match1to2);
    addRegexToken('ww', match1to2, match2);
    addRegexToken('W',  match1to2);
    addRegexToken('WW', match1to2, match2);

    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
        week[token.substr(0, 1)] = toInt(input);
    });

    // HELPERS

    // LOCALES

    function localeWeek (mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
    }

    var defaultLocaleWeek = {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    };

    function localeFirstDayOfWeek () {
        return this._week.dow;
    }

    function localeFirstDayOfYear () {
        return this._week.doy;
    }

    // MOMENTS

    function getSetWeek (input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    function getSetISOWeek (input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    // FORMATTING

    addFormatToken('d', 0, 'do', 'day');

    addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
    });

    addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
    });

    addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
    });

    addFormatToken('e', 0, 0, 'weekday');
    addFormatToken('E', 0, 0, 'isoWeekday');

    // ALIASES

    addUnitAlias('day', 'd');
    addUnitAlias('weekday', 'e');
    addUnitAlias('isoWeekday', 'E');

    // PRIORITY
    addUnitPriority('day', 11);
    addUnitPriority('weekday', 11);
    addUnitPriority('isoWeekday', 11);

    // PARSING

    addRegexToken('d',    match1to2);
    addRegexToken('e',    match1to2);
    addRegexToken('E',    match1to2);
    addRegexToken('dd',   function (isStrict, locale) {
        return locale.weekdaysMinRegex(isStrict);
    });
    addRegexToken('ddd',   function (isStrict, locale) {
        return locale.weekdaysShortRegex(isStrict);
    });
    addRegexToken('dddd',   function (isStrict, locale) {
        return locale.weekdaysRegex(isStrict);
    });

    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
        var weekday = config._locale.weekdaysParse(input, token, config._strict);
        // if we didn't get a weekday name, mark the date as invalid
        if (weekday != null) {
            week.d = weekday;
        } else {
            getParsingFlags(config).invalidWeekday = input;
        }
    });

    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
    });

    // HELPERS

    function parseWeekday(input, locale) {
        if (typeof input !== 'string') {
            return input;
        }

        if (!isNaN(input)) {
            return parseInt(input, 10);
        }

        input = locale.weekdaysParse(input);
        if (typeof input === 'number') {
            return input;
        }

        return null;
    }

    function parseIsoWeekday(input, locale) {
        if (typeof input === 'string') {
            return locale.weekdaysParse(input) % 7 || 7;
        }
        return isNaN(input) ? null : input;
    }

    // LOCALES

    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
    function localeWeekdays (m, format) {
        if (!m) {
            return this._weekdays;
        }
        return isArray(this._weekdays) ? this._weekdays[m.day()] :
            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];
    }

    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
    function localeWeekdaysShort (m) {
        return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
    }

    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
    function localeWeekdaysMin (m) {
        return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
    }

    function day_of_week__handleStrictParse(weekdayName, format, strict) {
        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];

            for (i = 0; i < 7; ++i) {
                mom = create_utc__createUTC([2000, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeWeekdaysParse (weekdayName, format, strict) {
        var i, mom, regex;

        if (this._weekdaysParseExact) {
            return day_of_week__handleStrictParse.call(this, weekdayName, format, strict);
        }

        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = [];
        }

        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already

            mom = create_utc__createUTC([2000, 1]).day(i);
            if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\.?') + '$', 'i');
                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\.?') + '$', 'i');
                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\.?') + '$', 'i');
            }
            if (!this._weekdaysParse[i]) {
                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function getSetDayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, 'd');
        } else {
            return day;
        }
    }

    function getSetLocaleDayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
    }

    function getSetISODayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }

        // behaves the same as moment#day except
        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
        // as a setter, sunday should belong to the previous week.

        if (input != null) {
            var weekday = parseIsoWeekday(input, this.localeData());
            return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
            return this.day() || 7;
        }
    }

    var defaultWeekdaysRegex = matchWord;
    function weekdaysRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysStrictRegex;
            } else {
                return this._weekdaysRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                this._weekdaysRegex = defaultWeekdaysRegex;
            }
            return this._weekdaysStrictRegex && isStrict ?
                this._weekdaysStrictRegex : this._weekdaysRegex;
        }
    }

    var defaultWeekdaysShortRegex = matchWord;
    function weekdaysShortRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysShortStrictRegex;
            } else {
                return this._weekdaysShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
            }
            return this._weekdaysShortStrictRegex && isStrict ?
                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
        }
    }

    var defaultWeekdaysMinRegex = matchWord;
    function weekdaysMinRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysMinStrictRegex;
            } else {
                return this._weekdaysMinRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
            }
            return this._weekdaysMinStrictRegex && isStrict ?
                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
        }
    }


    function computeWeekdaysParse () {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
            i, mom, minp, shortp, longp;
        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already
            mom = create_utc__createUTC([2000, 1]).day(i);
            minp = this.weekdaysMin(mom, '');
            shortp = this.weekdaysShort(mom, '');
            longp = this.weekdays(mom, '');
            minPieces.push(minp);
            shortPieces.push(shortp);
            longPieces.push(longp);
            mixedPieces.push(minp);
            mixedPieces.push(shortp);
            mixedPieces.push(longp);
        }
        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
        // will match the longer piece.
        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 7; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;

        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
    }

    // FORMATTING

    function hFormat() {
        return this.hours() % 12 || 12;
    }

    function kFormat() {
        return this.hours() || 24;
    }

    addFormatToken('H', ['HH', 2], 0, 'hour');
    addFormatToken('h', ['hh', 2], 0, hFormat);
    addFormatToken('k', ['kk', 2], 0, kFormat);

    addFormatToken('hmm', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
    });

    addFormatToken('hmmss', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2);
    });

    addFormatToken('Hmm', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2);
    });

    addFormatToken('Hmmss', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2);
    });

    function meridiem (token, lowercase) {
        addFormatToken(token, 0, 0, function () {
            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
        });
    }

    meridiem('a', true);
    meridiem('A', false);

    // ALIASES

    addUnitAlias('hour', 'h');

    // PRIORITY
    addUnitPriority('hour', 13);

    // PARSING

    function matchMeridiem (isStrict, locale) {
        return locale._meridiemParse;
    }

    addRegexToken('a',  matchMeridiem);
    addRegexToken('A',  matchMeridiem);
    addRegexToken('H',  match1to2);
    addRegexToken('h',  match1to2);
    addRegexToken('HH', match1to2, match2);
    addRegexToken('hh', match1to2, match2);

    addRegexToken('hmm', match3to4);
    addRegexToken('hmmss', match5to6);
    addRegexToken('Hmm', match3to4);
    addRegexToken('Hmmss', match5to6);

    addParseToken(['H', 'HH'], HOUR);
    addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
    });
    addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('Hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
    });
    addParseToken('Hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
    });

    // LOCALES

    function localeIsPM (input) {
        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
        // Using charAt should be more compatible.
        return ((input + '').toLowerCase().charAt(0) === 'p');
    }

    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
    function localeMeridiem (hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'pm' : 'PM';
        } else {
            return isLower ? 'am' : 'AM';
        }
    }


    // MOMENTS

    // Setting the hour should keep the time, because the user explicitly
    // specified which hour he wants. So trying to maintain the same hour (in
    // a new timezone) makes sense. Adding/subtracting hours does not follow
    // this rule.
    var getSetHour = makeGetSet('Hours', true);

    var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        ordinalParse: defaultOrdinalParse,
        relativeTime: defaultRelativeTime,

        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,

        week: defaultLocaleWeek,

        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,

        meridiemParse: defaultLocaleMeridiemParse
    };

    // internal storage for locale config files
    var locales = {};
    var globalLocale;

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    // pick the locale from the array
    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
    function chooseLocale(names) {
        var i = 0, j, next, locale, split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                    //the next array item is better than a shallower substring of this one
                    break;
                }
                j--;
            }
            i++;
        }
        return null;
    }

    function loadLocale(name) {
        var oldLocale = null;
        // TODO: Find a better way to register and load all the locales in Node
        if (!locales[name] && (typeof module !== 'undefined') &&
                module && module.exports) {
            try {
                oldLocale = globalLocale._abbr;
                require('./locale/' + name);
                // because defineLocale currently also sets the global locale, we
                // want to undo that for lazy loaded locales
                locale_locales__getSetGlobalLocale(oldLocale);
            } catch (e) { }
        }
        return locales[name];
    }

    // This function will load locale and then set the global locale.  If
    // no arguments are passed in, it will simply return the current global
    // locale key.
    function locale_locales__getSetGlobalLocale (key, values) {
        var data;
        if (key) {
            if (isUndefined(values)) {
                data = locale_locales__getLocale(key);
            }
            else {
                data = defineLocale(key, values);
            }

            if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data;
            }
        }

        return globalLocale._abbr;
    }

    function defineLocale (name, config) {
        if (config !== null) {
            var parentConfig = baseConfig;
            config.abbr = name;
            if (locales[name] != null) {
                deprecateSimple('defineLocaleOverride',
                        'use moment.updateLocale(localeName, config) to change ' +
                        'an existing locale. moment.defineLocale(localeName, ' +
                        'config) should only be used for creating a new locale ' +
                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
                parentConfig = locales[name]._config;
            } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                    parentConfig = locales[config.parentLocale]._config;
                } else {
                    // treat as if there is no base config
                    deprecateSimple('parentLocaleUndefined',
                            'specified parentLocale is not defined yet. See http://momentjs.com/guides/#/warnings/parent-locale/');
                }
            }
            locales[name] = new Locale(mergeConfigs(parentConfig, config));

            // backwards compat for now: also set the locale
            locale_locales__getSetGlobalLocale(name);

            return locales[name];
        } else {
            // useful for testing
            delete locales[name];
            return null;
        }
    }

    function updateLocale(name, config) {
        if (config != null) {
            var locale, parentConfig = baseConfig;
            // MERGE
            if (locales[name] != null) {
                parentConfig = locales[name]._config;
            }
            config = mergeConfigs(parentConfig, config);
            locale = new Locale(config);
            locale.parentLocale = locales[name];
            locales[name] = locale;

            // backwards compat for now: also set the locale
            locale_locales__getSetGlobalLocale(name);
        } else {
            // pass null for config to unupdate, useful for tests
            if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                    locales[name] = locales[name].parentLocale;
                } else if (locales[name] != null) {
                    delete locales[name];
                }
            }
        }
        return locales[name];
    }

    // returns locale data
    function locale_locales__getLocale (key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return globalLocale;
        }

        if (!isArray(key)) {
            //short-circuit everything else
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    }

    function locale_locales__listLocales() {
        return keys(locales);
    }

    function checkOverflow (m) {
        var overflow;
        var a = m._a;

        if (a && getParsingFlags(m).overflow === -2) {
            overflow =
                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
                -1;

            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
                overflow = DATE;
            }
            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK;
            }
            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY;
            }

            getParsingFlags(m).overflow = overflow;
        }

        return m;
    }

    // iso 8601 regex
    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?/;
    var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?/;

    var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

    var isoDates = [
        ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
        ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
        ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
        ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
        ['YYYY-DDD', /\d{4}-\d{3}/],
        ['YYYY-MM', /\d{4}-\d\d/, false],
        ['YYYYYYMMDD', /[+-]\d{10}/],
        ['YYYYMMDD', /\d{8}/],
        // YYYYMM is NOT allowed by the standard
        ['GGGG[W]WWE', /\d{4}W\d{3}/],
        ['GGGG[W]WW', /\d{4}W\d{2}/, false],
        ['YYYYDDD', /\d{7}/]
    ];

    // iso time formats and regexes
    var isoTimes = [
        ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
        ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
        ['HH:mm:ss', /\d\d:\d\d:\d\d/],
        ['HH:mm', /\d\d:\d\d/],
        ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
        ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
        ['HHmmss', /\d\d\d\d\d\d/],
        ['HHmm', /\d\d\d\d/],
        ['HH', /\d\d/]
    ];

    var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

    // date from iso format
    function configFromISO(config) {
        var i, l,
            string = config._i,
            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
            allowTime, dateFormat, timeFormat, tzFormat;

        if (match) {
            getParsingFlags(config).iso = true;

            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                    dateFormat = isoDates[i][0];
                    allowTime = isoDates[i][2] !== false;
                    break;
                }
            }
            if (dateFormat == null) {
                config._isValid = false;
                return;
            }
            if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                    if (isoTimes[i][1].exec(match[3])) {
                        // match[2] should be 'T' or space
                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
                        break;
                    }
                }
                if (timeFormat == null) {
                    config._isValid = false;
                    return;
                }
            }
            if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return;
            }
            if (match[4]) {
                if (tzRegex.exec(match[4])) {
                    tzFormat = 'Z';
                } else {
                    config._isValid = false;
                    return;
                }
            }
            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
            configFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    // date from iso format or fallback
    function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);

        if (matched !== null) {
            config._d = new Date(+matched[1]);
            return;
        }

        configFromISO(config);
        if (config._isValid === false) {
            delete config._isValid;
            utils_hooks__hooks.createFromInputFallback(config);
        }
    }

    utils_hooks__hooks.createFromInputFallback = deprecate(
        'value provided is not in a recognized ISO format. moment construction falls back to js Date(), ' +
        'which is not reliable across all browsers and versions. Non ISO date formats are ' +
        'discouraged and will be removed in an upcoming major release. Please refer to ' +
        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
        function (config) {
            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
        }
    );

    // Pick the first defined of two or three arguments.
    function defaults(a, b, c) {
        if (a != null) {
            return a;
        }
        if (b != null) {
            return b;
        }
        return c;
    }

    function currentDateArray(config) {
        // hooks is actually the exported moment object
        var nowValue = new Date(utils_hooks__hooks.now());
        if (config._useUTC) {
            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
    }

    // convert an array to a date.
    // the array should mirror the parameters below
    // note: all values past the year are optional and will default to the lowest possible value.
    // [year, month, day , hour, minute, second, millisecond]
    function configFromArray (config) {
        var i, date, input = [], currentDate, yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        //compute day of the year from weeks and weekdays
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        //if the day of the year is set, figure out what it is
        if (config._dayOfYear) {
            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

            if (config._dayOfYear > daysInYear(yearToUse)) {
                getParsingFlags(config)._overflowDayOfYear = true;
            }

            date = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        // Zero out whatever was not defaulted, including time
        for (; i < 7; i++) {
            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
        }

        // Check for 24:00:00.000
        if (config._a[HOUR] === 24 &&
                config._a[MINUTE] === 0 &&
                config._a[SECOND] === 0 &&
                config._a[MILLISECOND] === 0) {
            config._nextDay = true;
            config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
        // Apply timezone offset from input. The actual utcOffset can be changed
        // with parseZone.
        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
            config._a[HOUR] = 24;
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            // TODO: We need to take the current isoWeekYear, but that depends on
            // how we interpret now (local, utc, fixed offset). So create
            // a now version of current config (take local/utc/offset flags, and
            // create now).
            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
            if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true;
            }
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year);
            week = defaults(w.w, 1);

            if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < 0 || weekday > 6) {
                    weekdayOverflow = true;
                }
            } else if (w.e != null) {
                // local weekday -- counting starts from begining of week
                weekday = w.e + dow;
                if (w.e < 0 || w.e > 6) {
                    weekdayOverflow = true;
                }
            } else {
                // default to begining of week
                weekday = dow;
            }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
            getParsingFlags(config)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
            getParsingFlags(config)._overflowWeekday = true;
        } else {
            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
            config._a[YEAR] = temp.year;
            config._dayOfYear = temp.dayOfYear;
        }
    }

    // constant that refers to the ISO standard
    utils_hooks__hooks.ISO_8601 = function () {};

    // date from string and format string
    function configFromStringAndFormat(config) {
        // TODO: Move this to another part of the creation flow to prevent circular deps
        if (config._f === utils_hooks__hooks.ISO_8601) {
            configFromISO(config);
            return;
        }

        config._a = [];
        getParsingFlags(config).empty = true;

        // This array is used to make a Date, either with `new Date` or `Date.UTC`
        var string = '' + config._i,
            i, parsedInput, tokens, token, skipped,
            stringLength = string.length,
            totalParsedInputLength = 0;

        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
            // console.log('token', token, 'parsedInput', parsedInput,
            //         'regex', getParseRegexForToken(token, config));
            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    getParsingFlags(config).unusedInput.push(skipped);
                }
                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
                totalParsedInputLength += parsedInput.length;
            }
            // don't parse if it's not a known token
            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    getParsingFlags(config).empty = false;
                }
                else {
                    getParsingFlags(config).unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            }
            else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
            }
        }

        // add remaining unparsed input length to the string
        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
        if (string.length > 0) {
            getParsingFlags(config).unusedInput.push(string);
        }

        // clear _12h flag if hour is <= 12
        if (config._a[HOUR] <= 12 &&
            getParsingFlags(config).bigHour === true &&
            config._a[HOUR] > 0) {
            getParsingFlags(config).bigHour = undefined;
        }

        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem;
        // handle meridiem
        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

        configFromArray(config);
        checkOverflow(config);
    }


    function meridiemFixWrap (locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
            // nothing to do
            return hour;
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
            // Fallback
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12;
            }
            if (!isPm && hour === 12) {
                hour = 0;
            }
            return hour;
        } else {
            // this is not supposed to happen
            return hour;
        }
    }

    // date from string and array of format strings
    function configFromStringAndArray(config) {
        var tempConfig,
            bestMoment,

            scoreToBeat,
            i,
            currentScore;

        if (config._f.length === 0) {
            getParsingFlags(config).invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
            }
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);

            if (!valid__isValid(tempConfig)) {
                continue;
            }

            // if there is any input that was not parsed add a penalty for that format
            currentScore += getParsingFlags(tempConfig).charsLeftOver;

            //or tokens
            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

            getParsingFlags(tempConfig).score = currentScore;

            if (scoreToBeat == null || currentScore < scoreToBeat) {
                scoreToBeat = currentScore;
                bestMoment = tempConfig;
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    function configFromObject(config) {
        if (config._d) {
            return;
        }

        var i = normalizeObjectUnits(config._i);
        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
            return obj && parseInt(obj, 10);
        });

        configFromArray(config);
    }

    function createFromConfig (config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));
        if (res._nextDay) {
            // Adding is smart enough around DST
            res.add(1, 'd');
            res._nextDay = undefined;
        }

        return res;
    }

    function prepareConfig (config) {
        var input = config._i,
            format = config._f;

        config._locale = config._locale || locale_locales__getLocale(config._l);

        if (input === null || (format === undefined && input === '')) {
            return valid__createInvalid({nullInput: true});
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
            return new Moment(checkOverflow(input));
        } else if (isArray(format)) {
            configFromStringAndArray(config);
        } else if (isDate(input)) {
            config._d = input;
        } else if (format) {
            configFromStringAndFormat(config);
        }  else {
            configFromInput(config);
        }

        if (!valid__isValid(config)) {
            config._d = null;
        }

        return config;
    }

    function configFromInput(config) {
        var input = config._i;
        if (input === undefined) {
            config._d = new Date(utils_hooks__hooks.now());
        } else if (isDate(input)) {
            config._d = new Date(input.valueOf());
        } else if (typeof input === 'string') {
            configFromString(config);
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
            });
            configFromArray(config);
        } else if (typeof(input) === 'object') {
            configFromObject(config);
        } else if (typeof(input) === 'number') {
            // from milliseconds
            config._d = new Date(input);
        } else {
            utils_hooks__hooks.createFromInputFallback(config);
        }
    }

    function createLocalOrUTC (input, format, locale, strict, isUTC) {
        var c = {};

        if (typeof(locale) === 'boolean') {
            strict = locale;
            locale = undefined;
        }

        if ((isObject(input) && isObjectEmpty(input)) ||
                (isArray(input) && input.length === 0)) {
            input = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;

        return createFromConfig(c);
    }

    function local__createLocal (input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
    }

    var prototypeMin = deprecate(
        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
        function () {
            var other = local__createLocal.apply(null, arguments);
            if (this.isValid() && other.isValid()) {
                return other < this ? this : other;
            } else {
                return valid__createInvalid();
            }
        }
    );

    var prototypeMax = deprecate(
        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
        function () {
            var other = local__createLocal.apply(null, arguments);
            if (this.isValid() && other.isValid()) {
                return other > this ? this : other;
            } else {
                return valid__createInvalid();
            }
        }
    );

    // Pick a moment m from moments so that m[fn](other) is true for all
    // other. This relies on the function fn to be transitive.
    //
    // moments should either be an array of moment objects or an array, whose
    // first element is an array of moment objects.
    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return local__createLocal();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    // TODO: Use [].sort instead?
    function min () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    }

    function max () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    }

    var now = function () {
        return Date.now ? Date.now() : +(new Date());
    };

    function Duration (duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        // representation for dateAddRemove
        this._milliseconds = +milliseconds +
            seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately
        this._days = +days +
            weeks * 7;
        // It is impossible translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.
        this._months = +months +
            quarters * 3 +
            years * 12;

        this._data = {};

        this._locale = locale_locales__getLocale();

        this._bubble();
    }

    function isDuration (obj) {
        return obj instanceof Duration;
    }

    function absRound (number) {
        if (number < 0) {
            return Math.round(-1 * number) * -1;
        } else {
            return Math.round(number);
        }
    }

    // FORMATTING

    function offset (token, separator) {
        addFormatToken(token, 0, 0, function () {
            var offset = this.utcOffset();
            var sign = '+';
            if (offset < 0) {
                offset = -offset;
                sign = '-';
            }
            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
        });
    }

    offset('Z', ':');
    offset('ZZ', '');

    // PARSING

    addRegexToken('Z',  matchShortOffset);
    addRegexToken('ZZ', matchShortOffset);
    addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input);
    });

    // HELPERS

    // timezone chunker
    // '+10:00' > ['10',  '00']
    // '-1530'  > ['-15', '30']
    var chunkOffset = /([\+\-]|\d\d)/gi;

    function offsetFromString(matcher, string) {
        var matches = ((string || '').match(matcher) || []);
        var chunk   = matches[matches.length - 1] || [];
        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        var minutes = +(parts[1] * 60) + toInt(parts[2]);

        return parts[0] === '+' ? minutes : -minutes;
    }

    // Return a moment from input, that is local/utc/zone equivalent to model.
    function cloneWithOffset(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff = (isMoment(input) || isDate(input) ? input.valueOf() : local__createLocal(input).valueOf()) - res.valueOf();
            // Use low-level api, because this fn is low-level api.
            res._d.setTime(res._d.valueOf() + diff);
            utils_hooks__hooks.updateOffset(res, false);
            return res;
        } else {
            return local__createLocal(input).local();
        }
    }

    function getDateOffset (m) {
        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
        // https://github.com/moment/moment/pull/1871
        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
    }

    // HOOKS

    // This function will be called whenever a moment is mutated.
    // It is intended to keep the offset in sync with the timezone.
    utils_hooks__hooks.updateOffset = function () {};

    // MOMENTS

    // keepLocalTime = true means only change the timezone, without
    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
    // +0200, so we adjust the time as needed, to be valid.
    //
    // Keeping the time actually adds/subtracts (one hour)
    // from the actual represented time. That is why we call updateOffset
    // a second time. In case it wants us to change the offset again
    // _changeInProgress == true case, then we have to adjust, because
    // there is no such time in the given timezone.
    function getSetOffset (input, keepLocalTime) {
        var offset = this._offset || 0,
            localAdjust;
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        if (input != null) {
            if (typeof input === 'string') {
                input = offsetFromString(matchShortOffset, input);
            } else if (Math.abs(input) < 16) {
                input = input * 60;
            }
            if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
                this.add(localAdjust, 'm');
            }
            if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                    add_subtract__addSubtract(this, create__createDuration(input - offset, 'm'), 1, false);
                } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    utils_hooks__hooks.updateOffset(this, true);
                    this._changeInProgress = null;
                }
            }
            return this;
        } else {
            return this._isUTC ? offset : getDateOffset(this);
        }
    }

    function getSetZone (input, keepLocalTime) {
        if (input != null) {
            if (typeof input !== 'string') {
                input = -input;
            }

            this.utcOffset(input, keepLocalTime);

            return this;
        } else {
            return -this.utcOffset();
        }
    }

    function setOffsetToUTC (keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
    }

    function setOffsetToLocal (keepLocalTime) {
        if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;

            if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
            }
        }
        return this;
    }

    function setOffsetToParsedOffset () {
        if (this._tzm) {
            this.utcOffset(this._tzm);
        } else if (typeof this._i === 'string') {
            var tZone = offsetFromString(matchOffset, this._i);

            if (tZone === 0) {
                this.utcOffset(0, true);
            } else {
                this.utcOffset(offsetFromString(matchOffset, this._i));
            }
        }
        return this;
    }

    function hasAlignedHourOffset (input) {
        if (!this.isValid()) {
            return false;
        }
        input = input ? local__createLocal(input).utcOffset() : 0;

        return (this.utcOffset() - input) % 60 === 0;
    }

    function isDaylightSavingTime () {
        return (
            this.utcOffset() > this.clone().month(0).utcOffset() ||
            this.utcOffset() > this.clone().month(5).utcOffset()
        );
    }

    function isDaylightSavingTimeShifted () {
        if (!isUndefined(this._isDSTShifted)) {
            return this._isDSTShifted;
        }

        var c = {};

        copyConfig(c, this);
        c = prepareConfig(c);

        if (c._a) {
            var other = c._isUTC ? create_utc__createUTC(c._a) : local__createLocal(c._a);
            this._isDSTShifted = this.isValid() &&
                compareArrays(c._a, other.toArray()) > 0;
        } else {
            this._isDSTShifted = false;
        }

        return this._isDSTShifted;
    }

    function isLocal () {
        return this.isValid() ? !this._isUTC : false;
    }

    function isUtcOffset () {
        return this.isValid() ? this._isUTC : false;
    }

    function isUtc () {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
    }

    // ASP.NET json date format regex
    var aspNetRegex = /^(\-)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;

    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
    // and further modified to allow for strings containing both week and day
    var isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;

    function create__createDuration (input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
            match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
            duration = {
                ms : input._milliseconds,
                d  : input._days,
                M  : input._months
            };
        } else if (typeof input === 'number') {
            duration = {};
            if (key) {
                duration[key] = input;
            } else {
                duration.milliseconds = input;
            }
        } else if (!!(match = aspNetRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y  : 0,
                d  : toInt(match[DATE])                         * sign,
                h  : toInt(match[HOUR])                         * sign,
                m  : toInt(match[MINUTE])                       * sign,
                s  : toInt(match[SECOND])                       * sign,
                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
            };
        } else if (!!(match = isoRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y : parseIso(match[2], sign),
                M : parseIso(match[3], sign),
                w : parseIso(match[4], sign),
                d : parseIso(match[5], sign),
                h : parseIso(match[6], sign),
                m : parseIso(match[7], sign),
                s : parseIso(match[8], sign)
            };
        } else if (duration == null) {// checks for null or undefined
            duration = {};
        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
            diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to));

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
            ret._locale = input._locale;
        }

        return ret;
    }

    create__createDuration.fn = Duration.prototype;

    function parseIso (inp, sign) {
        // We'd normally use ~~inp for this, but unfortunately it also
        // converts floats to ints.
        // inp may be undefined, so careful calling replace on it.
        var res = inp && parseFloat(inp.replace(',', '.'));
        // apply sign while we're at it
        return (isNaN(res) ? 0 : res) * sign;
    }

    function positiveMomentsDifference(base, other) {
        var res = {milliseconds: 0, months: 0};

        res.months = other.month() - base.month() +
            (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
            return {milliseconds: 0, months: 0};
        }

        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    // TODO: remove 'name' arg after deprecation is removed
    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;
            //invert the arguments, but complain about it
            if (period !== null && !isNaN(+period)) {
                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +
                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
                tmp = val; val = period; period = tmp;
            }

            val = typeof val === 'string' ? +val : val;
            dur = create__createDuration(val, period);
            add_subtract__addSubtract(this, dur, direction);
            return this;
        };
    }

    function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = absRound(duration._days),
            months = absRound(duration._months);

        if (!mom.isValid()) {
            // No op
            return;
        }

        updateOffset = updateOffset == null ? true : updateOffset;

        if (milliseconds) {
            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
        }
        if (days) {
            get_set__set(mom, 'Date', get_set__get(mom, 'Date') + days * isAdding);
        }
        if (months) {
            setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);
        }
        if (updateOffset) {
            utils_hooks__hooks.updateOffset(mom, days || months);
        }
    }

    var add_subtract__add      = createAdder(1, 'add');
    var add_subtract__subtract = createAdder(-1, 'subtract');

    function getCalendarFormat(myMoment, now) {
        var diff = myMoment.diff(now, 'days', true);
        return diff < -6 ? 'sameElse' :
                diff < -1 ? 'lastWeek' :
                diff < 0 ? 'lastDay' :
                diff < 1 ? 'sameDay' :
                diff < 2 ? 'nextDay' :
                diff < 7 ? 'nextWeek' : 'sameElse';
    }

    function moment_calendar__calendar (time, formats) {
        // We want to compare the start of today, vs this.
        // Getting start-of-today depends on whether we're local/utc/offset or not.
        var now = time || local__createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            format = utils_hooks__hooks.calendarFormat(this, sod) || 'sameElse';

        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);

        return this.format(output || this.localeData().calendar(format, this, local__createLocal(now)));
    }

    function clone () {
        return new Moment(this);
    }

    function isAfter (input, units) {
        var localInput = isMoment(input) ? input : local__createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
        if (units === 'millisecond') {
            return this.valueOf() > localInput.valueOf();
        } else {
            return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
    }

    function isBefore (input, units) {
        var localInput = isMoment(input) ? input : local__createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
        if (units === 'millisecond') {
            return this.valueOf() < localInput.valueOf();
        } else {
            return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
    }

    function isBetween (from, to, units, inclusivity) {
        inclusivity = inclusivity || '()';
        return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&
            (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));
    }

    function isSame (input, units) {
        var localInput = isMoment(input) ? input : local__createLocal(input),
            inputMs;
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units || 'millisecond');
        if (units === 'millisecond') {
            return this.valueOf() === localInput.valueOf();
        } else {
            inputMs = localInput.valueOf();
            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
        }
    }

    function isSameOrAfter (input, units) {
        return this.isSame(input, units) || this.isAfter(input,units);
    }

    function isSameOrBefore (input, units) {
        return this.isSame(input, units) || this.isBefore(input,units);
    }

    function diff (input, units, asFloat) {
        var that,
            zoneDelta,
            delta, output;

        if (!this.isValid()) {
            return NaN;
        }

        that = cloneWithOffset(input, this);

        if (!that.isValid()) {
            return NaN;
        }

        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

        units = normalizeUnits(units);

        if (units === 'year' || units === 'month' || units === 'quarter') {
            output = monthDiff(this, that);
            if (units === 'quarter') {
                output = output / 3;
            } else if (units === 'year') {
                output = output / 12;
            }
        } else {
            delta = this - that;
            output = units === 'second' ? delta / 1e3 : // 1000
                units === 'minute' ? delta / 6e4 : // 1000 * 60
                units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60
                units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst
                units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst
                delta;
        }
        return asFloat ? output : absFloor(output);
    }

    function monthDiff (a, b) {
        // difference in months
        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
            // b is in (anchor - 1 month, anchor + 1 month)
            anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2, adjust;

        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor - anchor2);
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor2 - anchor);
        }

        //check for negative zero, return zero if negative zero
        return -(wholeMonthDiff + adjust) || 0;
    }

    utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
    utils_hooks__hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

    function toString () {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
    }

    function moment_format__toISOString () {
        var m = this.clone().utc();
        if (0 < m.year() && m.year() <= 9999) {
            if (isFunction(Date.prototype.toISOString)) {
                // native implementation is ~50x faster, use it when we can
                return this.toDate().toISOString();
            } else {
                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
            }
        } else {
            return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
        }
    }

    function moment_format__format (inputString) {
        if (!inputString) {
            inputString = this.isUtc() ? utils_hooks__hooks.defaultFormatUtc : utils_hooks__hooks.defaultFormat;
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
    }

    function from (time, withoutSuffix) {
        if (this.isValid() &&
                ((isMoment(time) && time.isValid()) ||
                 local__createLocal(time).isValid())) {
            return create__createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function fromNow (withoutSuffix) {
        return this.from(local__createLocal(), withoutSuffix);
    }

    function to (time, withoutSuffix) {
        if (this.isValid() &&
                ((isMoment(time) && time.isValid()) ||
                 local__createLocal(time).isValid())) {
            return create__createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function toNow (withoutSuffix) {
        return this.to(local__createLocal(), withoutSuffix);
    }

    // If passed a locale key, it will set the locale for this
    // instance.  Otherwise, it will return the locale configuration
    // variables for this instance.
    function locale (key) {
        var newLocaleData;

        if (key === undefined) {
            return this._locale._abbr;
        } else {
            newLocaleData = locale_locales__getLocale(key);
            if (newLocaleData != null) {
                this._locale = newLocaleData;
            }
            return this;
        }
    }

    var lang = deprecate(
        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
        function (key) {
            if (key === undefined) {
                return this.localeData();
            } else {
                return this.locale(key);
            }
        }
    );

    function localeData () {
        return this._locale;
    }

    function startOf (units) {
        units = normalizeUnits(units);
        // the following switch intentionally omits break keywords
        // to utilize falling through the cases.
        switch (units) {
            case 'year':
                this.month(0);
                /* falls through */
            case 'quarter':
            case 'month':
                this.date(1);
                /* falls through */
            case 'week':
            case 'isoWeek':
            case 'day':
            case 'date':
                this.hours(0);
                /* falls through */
            case 'hour':
                this.minutes(0);
                /* falls through */
            case 'minute':
                this.seconds(0);
                /* falls through */
            case 'second':
                this.milliseconds(0);
        }

        // weeks are a special case
        if (units === 'week') {
            this.weekday(0);
        }
        if (units === 'isoWeek') {
            this.isoWeekday(1);
        }

        // quarters are also special
        if (units === 'quarter') {
            this.month(Math.floor(this.month() / 3) * 3);
        }

        return this;
    }

    function endOf (units) {
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond') {
            return this;
        }

        // 'date' is an alias for 'day', so it should be considered as such.
        if (units === 'date') {
            units = 'day';
        }

        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
    }

    function to_type__valueOf () {
        return this._d.valueOf() - ((this._offset || 0) * 60000);
    }

    function unix () {
        return Math.floor(this.valueOf() / 1000);
    }

    function toDate () {
        return new Date(this.valueOf());
    }

    function toArray () {
        var m = this;
        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
    }

    function toObject () {
        var m = this;
        return {
            years: m.year(),
            months: m.month(),
            date: m.date(),
            hours: m.hours(),
            minutes: m.minutes(),
            seconds: m.seconds(),
            milliseconds: m.milliseconds()
        };
    }

    function toJSON () {
        // new Date(NaN).toJSON() === null
        return this.isValid() ? this.toISOString() : null;
    }

    function moment_valid__isValid () {
        return valid__isValid(this);
    }

    function parsingFlags () {
        return extend({}, getParsingFlags(this));
    }

    function invalidAt () {
        return getParsingFlags(this).overflow;
    }

    function creationData() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict
        };
    }

    // FORMATTING

    addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
    });

    addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
    });

    function addWeekYearFormatToken (token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
    }

    addWeekYearFormatToken('gggg',     'weekYear');
    addWeekYearFormatToken('ggggg',    'weekYear');
    addWeekYearFormatToken('GGGG',  'isoWeekYear');
    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

    // ALIASES

    addUnitAlias('weekYear', 'gg');
    addUnitAlias('isoWeekYear', 'GG');

    // PRIORITY

    addUnitPriority('weekYear', 1);
    addUnitPriority('isoWeekYear', 1);


    // PARSING

    addRegexToken('G',      matchSigned);
    addRegexToken('g',      matchSigned);
    addRegexToken('GG',     match1to2, match2);
    addRegexToken('gg',     match1to2, match2);
    addRegexToken('GGGG',   match1to4, match4);
    addRegexToken('gggg',   match1to4, match4);
    addRegexToken('GGGGG',  match1to6, match6);
    addRegexToken('ggggg',  match1to6, match6);

    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
        week[token.substr(0, 2)] = toInt(input);
    });

    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = utils_hooks__hooks.parseTwoDigitYear(input);
    });

    // MOMENTS

    function getSetWeekYear (input) {
        return getSetWeekYearHelper.call(this,
                input,
                this.week(),
                this.weekday(),
                this.localeData()._week.dow,
                this.localeData()._week.doy);
    }

    function getSetISOWeekYear (input) {
        return getSetWeekYearHelper.call(this,
                input, this.isoWeek(), this.isoWeekday(), 1, 4);
    }

    function getISOWeeksInYear () {
        return weeksInYear(this.year(), 1, 4);
    }

    function getWeeksInYear () {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    }

    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
            return weekOfYear(this, dow, doy).year;
        } else {
            weeksTarget = weeksInYear(input, dow, doy);
            if (week > weeksTarget) {
                week = weeksTarget;
            }
            return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
    }

    function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
    }

    // FORMATTING

    addFormatToken('Q', 0, 'Qo', 'quarter');

    // ALIASES

    addUnitAlias('quarter', 'Q');

    // PRIORITY

    addUnitPriority('quarter', 7);

    // PARSING

    addRegexToken('Q', match1);
    addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
    });

    // MOMENTS

    function getSetQuarter (input) {
        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
    }

    // FORMATTING

    addFormatToken('D', ['DD', 2], 'Do', 'date');

    // ALIASES

    addUnitAlias('date', 'D');

    // PRIOROITY
    addUnitPriority('date', 9);

    // PARSING

    addRegexToken('D',  match1to2);
    addRegexToken('DD', match1to2, match2);
    addRegexToken('Do', function (isStrict, locale) {
        return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;
    });

    addParseToken(['D', 'DD'], DATE);
    addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0], 10);
    });

    // MOMENTS

    var getSetDayOfMonth = makeGetSet('Date', true);

    // FORMATTING

    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

    // ALIASES

    addUnitAlias('dayOfYear', 'DDD');

    // PRIORITY
    addUnitPriority('dayOfYear', 4);

    // PARSING

    addRegexToken('DDD',  match1to3);
    addRegexToken('DDDD', match3);
    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
    });

    // HELPERS

    // MOMENTS

    function getSetDayOfYear (input) {
        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
    }

    // FORMATTING

    addFormatToken('m', ['mm', 2], 0, 'minute');

    // ALIASES

    addUnitAlias('minute', 'm');

    // PRIORITY

    addUnitPriority('minute', 14);

    // PARSING

    addRegexToken('m',  match1to2);
    addRegexToken('mm', match1to2, match2);
    addParseToken(['m', 'mm'], MINUTE);

    // MOMENTS

    var getSetMinute = makeGetSet('Minutes', false);

    // FORMATTING

    addFormatToken('s', ['ss', 2], 0, 'second');

    // ALIASES

    addUnitAlias('second', 's');

    // PRIORITY

    addUnitPriority('second', 15);

    // PARSING

    addRegexToken('s',  match1to2);
    addRegexToken('ss', match1to2, match2);
    addParseToken(['s', 'ss'], SECOND);

    // MOMENTS

    var getSetSecond = makeGetSet('Seconds', false);

    // FORMATTING

    addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
    });

    addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
    });

    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
    addFormatToken(0, ['SSSS', 4], 0, function () {
        return this.millisecond() * 10;
    });
    addFormatToken(0, ['SSSSS', 5], 0, function () {
        return this.millisecond() * 100;
    });
    addFormatToken(0, ['SSSSSS', 6], 0, function () {
        return this.millisecond() * 1000;
    });
    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
        return this.millisecond() * 10000;
    });
    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
        return this.millisecond() * 100000;
    });
    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
        return this.millisecond() * 1000000;
    });


    // ALIASES

    addUnitAlias('millisecond', 'ms');

    // PRIORITY

    addUnitPriority('millisecond', 16);

    // PARSING

    addRegexToken('S',    match1to3, match1);
    addRegexToken('SS',   match1to3, match2);
    addRegexToken('SSS',  match1to3, match3);

    var token;
    for (token = 'SSSS'; token.length <= 9; token += 'S') {
        addRegexToken(token, matchUnsigned);
    }

    function parseMs(input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
    }

    for (token = 'S'; token.length <= 9; token += 'S') {
        addParseToken(token, parseMs);
    }
    // MOMENTS

    var getSetMillisecond = makeGetSet('Milliseconds', false);

    // FORMATTING

    addFormatToken('z',  0, 0, 'zoneAbbr');
    addFormatToken('zz', 0, 0, 'zoneName');

    // MOMENTS

    function getZoneAbbr () {
        return this._isUTC ? 'UTC' : '';
    }

    function getZoneName () {
        return this._isUTC ? 'Coordinated Universal Time' : '';
    }

    var momentPrototype__proto = Moment.prototype;

    momentPrototype__proto.add               = add_subtract__add;
    momentPrototype__proto.calendar          = moment_calendar__calendar;
    momentPrototype__proto.clone             = clone;
    momentPrototype__proto.diff              = diff;
    momentPrototype__proto.endOf             = endOf;
    momentPrototype__proto.format            = moment_format__format;
    momentPrototype__proto.from              = from;
    momentPrototype__proto.fromNow           = fromNow;
    momentPrototype__proto.to                = to;
    momentPrototype__proto.toNow             = toNow;
    momentPrototype__proto.get               = stringGet;
    momentPrototype__proto.invalidAt         = invalidAt;
    momentPrototype__proto.isAfter           = isAfter;
    momentPrototype__proto.isBefore          = isBefore;
    momentPrototype__proto.isBetween         = isBetween;
    momentPrototype__proto.isSame            = isSame;
    momentPrototype__proto.isSameOrAfter     = isSameOrAfter;
    momentPrototype__proto.isSameOrBefore    = isSameOrBefore;
    momentPrototype__proto.isValid           = moment_valid__isValid;
    momentPrototype__proto.lang              = lang;
    momentPrototype__proto.locale            = locale;
    momentPrototype__proto.localeData        = localeData;
    momentPrototype__proto.max               = prototypeMax;
    momentPrototype__proto.min               = prototypeMin;
    momentPrototype__proto.parsingFlags      = parsingFlags;
    momentPrototype__proto.set               = stringSet;
    momentPrototype__proto.startOf           = startOf;
    momentPrototype__proto.subtract          = add_subtract__subtract;
    momentPrototype__proto.toArray           = toArray;
    momentPrototype__proto.toObject          = toObject;
    momentPrototype__proto.toDate            = toDate;
    momentPrototype__proto.toISOString       = moment_format__toISOString;
    momentPrototype__proto.toJSON            = toJSON;
    momentPrototype__proto.toString          = toString;
    momentPrototype__proto.unix              = unix;
    momentPrototype__proto.valueOf           = to_type__valueOf;
    momentPrototype__proto.creationData      = creationData;

    // Year
    momentPrototype__proto.year       = getSetYear;
    momentPrototype__proto.isLeapYear = getIsLeapYear;

    // Week Year
    momentPrototype__proto.weekYear    = getSetWeekYear;
    momentPrototype__proto.isoWeekYear = getSetISOWeekYear;

    // Quarter
    momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;

    // Month
    momentPrototype__proto.month       = getSetMonth;
    momentPrototype__proto.daysInMonth = getDaysInMonth;

    // Week
    momentPrototype__proto.week           = momentPrototype__proto.weeks        = getSetWeek;
    momentPrototype__proto.isoWeek        = momentPrototype__proto.isoWeeks     = getSetISOWeek;
    momentPrototype__proto.weeksInYear    = getWeeksInYear;
    momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;

    // Day
    momentPrototype__proto.date       = getSetDayOfMonth;
    momentPrototype__proto.day        = momentPrototype__proto.days             = getSetDayOfWeek;
    momentPrototype__proto.weekday    = getSetLocaleDayOfWeek;
    momentPrototype__proto.isoWeekday = getSetISODayOfWeek;
    momentPrototype__proto.dayOfYear  = getSetDayOfYear;

    // Hour
    momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;

    // Minute
    momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;

    // Second
    momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;

    // Millisecond
    momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;

    // Offset
    momentPrototype__proto.utcOffset            = getSetOffset;
    momentPrototype__proto.utc                  = setOffsetToUTC;
    momentPrototype__proto.local                = setOffsetToLocal;
    momentPrototype__proto.parseZone            = setOffsetToParsedOffset;
    momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;
    momentPrototype__proto.isDST                = isDaylightSavingTime;
    momentPrototype__proto.isLocal              = isLocal;
    momentPrototype__proto.isUtcOffset          = isUtcOffset;
    momentPrototype__proto.isUtc                = isUtc;
    momentPrototype__proto.isUTC                = isUtc;

    // Timezone
    momentPrototype__proto.zoneAbbr = getZoneAbbr;
    momentPrototype__proto.zoneName = getZoneName;

    // Deprecations
    momentPrototype__proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
    momentPrototype__proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
    momentPrototype__proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
    momentPrototype__proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
    momentPrototype__proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

    var momentPrototype = momentPrototype__proto;

    function moment_moment__createUnix (input) {
        return local__createLocal(input * 1000);
    }

    function moment_moment__createInZone () {
        return local__createLocal.apply(null, arguments).parseZone();
    }

    function preParsePostFormat (string) {
        return string;
    }

    var prototype__proto = Locale.prototype;

    prototype__proto.calendar        = locale_calendar__calendar;
    prototype__proto.longDateFormat  = longDateFormat;
    prototype__proto.invalidDate     = invalidDate;
    prototype__proto.ordinal         = ordinal;
    prototype__proto.preparse        = preParsePostFormat;
    prototype__proto.postformat      = preParsePostFormat;
    prototype__proto.relativeTime    = relative__relativeTime;
    prototype__proto.pastFuture      = pastFuture;
    prototype__proto.set             = locale_set__set;

    // Month
    prototype__proto.months            =        localeMonths;
    prototype__proto.monthsShort       =        localeMonthsShort;
    prototype__proto.monthsParse       =        localeMonthsParse;
    prototype__proto.monthsRegex       = units_month__monthsRegex;
    prototype__proto.monthsShortRegex  = monthsShortRegex;

    // Week
    prototype__proto.week = localeWeek;
    prototype__proto.firstDayOfYear = localeFirstDayOfYear;
    prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;

    // Day of Week
    prototype__proto.weekdays       =        localeWeekdays;
    prototype__proto.weekdaysMin    =        localeWeekdaysMin;
    prototype__proto.weekdaysShort  =        localeWeekdaysShort;
    prototype__proto.weekdaysParse  =        localeWeekdaysParse;

    prototype__proto.weekdaysRegex       =        weekdaysRegex;
    prototype__proto.weekdaysShortRegex  =        weekdaysShortRegex;
    prototype__proto.weekdaysMinRegex    =        weekdaysMinRegex;

    // Hours
    prototype__proto.isPM = localeIsPM;
    prototype__proto.meridiem = localeMeridiem;

    function lists__get (format, index, field, setter) {
        var locale = locale_locales__getLocale();
        var utc = create_utc__createUTC().set(setter, index);
        return locale[field](utc, format);
    }

    function listMonthsImpl (format, index, field) {
        if (typeof format === 'number') {
            index = format;
            format = undefined;
        }

        format = format || '';

        if (index != null) {
            return lists__get(format, index, field, 'month');
        }

        var i;
        var out = [];
        for (i = 0; i < 12; i++) {
            out[i] = lists__get(format, i, field, 'month');
        }
        return out;
    }

    // ()
    // (5)
    // (fmt, 5)
    // (fmt)
    // (true)
    // (true, 5)
    // (true, fmt, 5)
    // (true, fmt)
    function listWeekdaysImpl (localeSorted, format, index, field) {
        if (typeof localeSorted === 'boolean') {
            if (typeof format === 'number') {
                index = format;
                format = undefined;
            }

            format = format || '';
        } else {
            format = localeSorted;
            index = format;
            localeSorted = false;

            if (typeof format === 'number') {
                index = format;
                format = undefined;
            }

            format = format || '';
        }

        var locale = locale_locales__getLocale(),
            shift = localeSorted ? locale._week.dow : 0;

        if (index != null) {
            return lists__get(format, (index + shift) % 7, field, 'day');
        }

        var i;
        var out = [];
        for (i = 0; i < 7; i++) {
            out[i] = lists__get(format, (i + shift) % 7, field, 'day');
        }
        return out;
    }

    function lists__listMonths (format, index) {
        return listMonthsImpl(format, index, 'months');
    }

    function lists__listMonthsShort (format, index) {
        return listMonthsImpl(format, index, 'monthsShort');
    }

    function lists__listWeekdays (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
    }

    function lists__listWeekdaysShort (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
    }

    function lists__listWeekdaysMin (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
    }

    locale_locales__getSetGlobalLocale('en', {
        ordinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (toInt(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });

    // Side effect imports
    utils_hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', locale_locales__getSetGlobalLocale);
    utils_hooks__hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', locale_locales__getLocale);

    var mathAbs = Math.abs;

    function duration_abs__abs () {
        var data           = this._data;

        this._milliseconds = mathAbs(this._milliseconds);
        this._days         = mathAbs(this._days);
        this._months       = mathAbs(this._months);

        data.milliseconds  = mathAbs(data.milliseconds);
        data.seconds       = mathAbs(data.seconds);
        data.minutes       = mathAbs(data.minutes);
        data.hours         = mathAbs(data.hours);
        data.months        = mathAbs(data.months);
        data.years         = mathAbs(data.years);

        return this;
    }

    function duration_add_subtract__addSubtract (duration, input, value, direction) {
        var other = create__createDuration(input, value);

        duration._milliseconds += direction * other._milliseconds;
        duration._days         += direction * other._days;
        duration._months       += direction * other._months;

        return duration._bubble();
    }

    // supports only 2.0-style add(1, 's') or add(duration)
    function duration_add_subtract__add (input, value) {
        return duration_add_subtract__addSubtract(this, input, value, 1);
    }

    // supports only 2.0-style subtract(1, 's') or subtract(duration)
    function duration_add_subtract__subtract (input, value) {
        return duration_add_subtract__addSubtract(this, input, value, -1);
    }

    function absCeil (number) {
        if (number < 0) {
            return Math.floor(number);
        } else {
            return Math.ceil(number);
        }
    }

    function bubble () {
        var milliseconds = this._milliseconds;
        var days         = this._days;
        var months       = this._months;
        var data         = this._data;
        var seconds, minutes, hours, years, monthsFromDays;

        // if we have a mix of positive and negative values, bubble down first
        // check: https://github.com/moment/moment/issues/2166
        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
                (milliseconds <= 0 && days <= 0 && months <= 0))) {
            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
            days = 0;
            months = 0;
        }

        // The following code bubbles up values, see the tests for
        // examples of what that means.
        data.milliseconds = milliseconds % 1000;

        seconds           = absFloor(milliseconds / 1000);
        data.seconds      = seconds % 60;

        minutes           = absFloor(seconds / 60);
        data.minutes      = minutes % 60;

        hours             = absFloor(minutes / 60);
        data.hours        = hours % 24;

        days += absFloor(hours / 24);

        // convert days to months
        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays));

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        data.days   = days;
        data.months = months;
        data.years  = years;

        return this;
    }

    function daysToMonths (days) {
        // 400 years have 146097 days (taking into account leap year rules)
        // 400 years have 12 months === 4800
        return days * 4800 / 146097;
    }

    function monthsToDays (months) {
        // the reverse of daysToMonths
        return months * 146097 / 4800;
    }

    function as (units) {
        var days;
        var months;
        var milliseconds = this._milliseconds;

        units = normalizeUnits(units);

        if (units === 'month' || units === 'year') {
            days   = this._days   + milliseconds / 864e5;
            months = this._months + daysToMonths(days);
            return units === 'month' ? months : months / 12;
        } else {
            // handle milliseconds separately because of floating point math errors (issue #1867)
            days = this._days + Math.round(monthsToDays(this._months));
            switch (units) {
                case 'week'   : return days / 7     + milliseconds / 6048e5;
                case 'day'    : return days         + milliseconds / 864e5;
                case 'hour'   : return days * 24    + milliseconds / 36e5;
                case 'minute' : return days * 1440  + milliseconds / 6e4;
                case 'second' : return days * 86400 + milliseconds / 1000;
                // Math.floor prevents floating point math errors here
                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
                default: throw new Error('Unknown unit ' + units);
            }
        }
    }

    // TODO: Use this.as('ms')?
    function duration_as__valueOf () {
        return (
            this._milliseconds +
            this._days * 864e5 +
            (this._months % 12) * 2592e6 +
            toInt(this._months / 12) * 31536e6
        );
    }

    function makeAs (alias) {
        return function () {
            return this.as(alias);
        };
    }

    var asMilliseconds = makeAs('ms');
    var asSeconds      = makeAs('s');
    var asMinutes      = makeAs('m');
    var asHours        = makeAs('h');
    var asDays         = makeAs('d');
    var asWeeks        = makeAs('w');
    var asMonths       = makeAs('M');
    var asYears        = makeAs('y');

    function duration_get__get (units) {
        units = normalizeUnits(units);
        return this[units + 's']();
    }

    function makeGetter(name) {
        return function () {
            return this._data[name];
        };
    }

    var milliseconds = makeGetter('milliseconds');
    var seconds      = makeGetter('seconds');
    var minutes      = makeGetter('minutes');
    var hours        = makeGetter('hours');
    var days         = makeGetter('days');
    var duration_get__months       = makeGetter('months');
    var years        = makeGetter('years');

    function weeks () {
        return absFloor(this.days() / 7);
    }

    var round = Math.round;
    var thresholds = {
        s: 45,  // seconds to minute
        m: 45,  // minutes to hour
        h: 22,  // hours to day
        d: 26,  // days to month
        M: 11   // months to year
    };

    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function duration_humanize__relativeTime (posNegDuration, withoutSuffix, locale) {
        var duration = create__createDuration(posNegDuration).abs();
        var seconds  = round(duration.as('s'));
        var minutes  = round(duration.as('m'));
        var hours    = round(duration.as('h'));
        var days     = round(duration.as('d'));
        var months   = round(duration.as('M'));
        var years    = round(duration.as('y'));

        var a = seconds < thresholds.s && ['s', seconds]  ||
                minutes <= 1           && ['m']           ||
                minutes < thresholds.m && ['mm', minutes] ||
                hours   <= 1           && ['h']           ||
                hours   < thresholds.h && ['hh', hours]   ||
                days    <= 1           && ['d']           ||
                days    < thresholds.d && ['dd', days]    ||
                months  <= 1           && ['M']           ||
                months  < thresholds.M && ['MM', months]  ||
                years   <= 1           && ['y']           || ['yy', years];

        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
    }

    // This function allows you to set the rounding function for relative time strings
    function duration_humanize__getSetRelativeTimeRounding (roundingFunction) {
        if (roundingFunction === undefined) {
            return round;
        }
        if (typeof(roundingFunction) === 'function') {
            round = roundingFunction;
            return true;
        }
        return false;
    }

    // This function allows you to set a threshold for relative time strings
    function duration_humanize__getSetRelativeTimeThreshold (threshold, limit) {
        if (thresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        return true;
    }

    function humanize (withSuffix) {
        var locale = this.localeData();
        var output = duration_humanize__relativeTime(this, !withSuffix, locale);

        if (withSuffix) {
            output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
    }

    var iso_string__abs = Math.abs;

    function iso_string__toISOString() {
        // for ISO strings we do not use the normal bubbling rules:
        //  * milliseconds bubble up until they become hours
        //  * days do not bubble at all
        //  * months bubble up until they become years
        // This is because there is no context-free conversion between hours and days
        // (think of clock changes)
        // and also not between days and months (28-31 days per month)
        var seconds = iso_string__abs(this._milliseconds) / 1000;
        var days         = iso_string__abs(this._days);
        var months       = iso_string__abs(this._months);
        var minutes, hours, years;

        // 3600 seconds -> 60 minutes -> 1 hour
        minutes           = absFloor(seconds / 60);
        hours             = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60;

        // 12 months -> 1 year
        years  = absFloor(months / 12);
        months %= 12;


        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
        var Y = years;
        var M = months;
        var D = days;
        var h = hours;
        var m = minutes;
        var s = seconds;
        var total = this.asSeconds();

        if (!total) {
            // this is the same as C#'s (Noda) and python (isodate)...
            // but not other JS (goog.date)
            return 'P0D';
        }

        return (total < 0 ? '-' : '') +
            'P' +
            (Y ? Y + 'Y' : '') +
            (M ? M + 'M' : '') +
            (D ? D + 'D' : '') +
            ((h || m || s) ? 'T' : '') +
            (h ? h + 'H' : '') +
            (m ? m + 'M' : '') +
            (s ? s + 'S' : '');
    }

    var duration_prototype__proto = Duration.prototype;

    duration_prototype__proto.abs            = duration_abs__abs;
    duration_prototype__proto.add            = duration_add_subtract__add;
    duration_prototype__proto.subtract       = duration_add_subtract__subtract;
    duration_prototype__proto.as             = as;
    duration_prototype__proto.asMilliseconds = asMilliseconds;
    duration_prototype__proto.asSeconds      = asSeconds;
    duration_prototype__proto.asMinutes      = asMinutes;
    duration_prototype__proto.asHours        = asHours;
    duration_prototype__proto.asDays         = asDays;
    duration_prototype__proto.asWeeks        = asWeeks;
    duration_prototype__proto.asMonths       = asMonths;
    duration_prototype__proto.asYears        = asYears;
    duration_prototype__proto.valueOf        = duration_as__valueOf;
    duration_prototype__proto._bubble        = bubble;
    duration_prototype__proto.get            = duration_get__get;
    duration_prototype__proto.milliseconds   = milliseconds;
    duration_prototype__proto.seconds        = seconds;
    duration_prototype__proto.minutes        = minutes;
    duration_prototype__proto.hours          = hours;
    duration_prototype__proto.days           = days;
    duration_prototype__proto.weeks          = weeks;
    duration_prototype__proto.months         = duration_get__months;
    duration_prototype__proto.years          = years;
    duration_prototype__proto.humanize       = humanize;
    duration_prototype__proto.toISOString    = iso_string__toISOString;
    duration_prototype__proto.toString       = iso_string__toISOString;
    duration_prototype__proto.toJSON         = iso_string__toISOString;
    duration_prototype__proto.locale         = locale;
    duration_prototype__proto.localeData     = localeData;

    // Deprecations
    duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', iso_string__toISOString);
    duration_prototype__proto.lang = lang;

    // Side effect imports

    // FORMATTING

    addFormatToken('X', 0, 0, 'unix');
    addFormatToken('x', 0, 0, 'valueOf');

    // PARSING

    addRegexToken('x', matchSigned);
    addRegexToken('X', matchTimestamp);
    addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input, 10) * 1000);
    });
    addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
    });

    // Side effect imports

    ;


    utils_hooks__hooks.version = '2.15.1';

    setHookCallback(local__createLocal);

    utils_hooks__hooks.fn                    = momentPrototype;
    utils_hooks__hooks.min                   = min;
    utils_hooks__hooks.max                   = max;
    utils_hooks__hooks.now                   = now;
    utils_hooks__hooks.utc                   = create_utc__createUTC;
    utils_hooks__hooks.unix                  = moment_moment__createUnix;
    utils_hooks__hooks.months                = lists__listMonths;
    utils_hooks__hooks.isDate                = isDate;
    utils_hooks__hooks.locale                = locale_locales__getSetGlobalLocale;
    utils_hooks__hooks.invalid               = valid__createInvalid;
    utils_hooks__hooks.duration              = create__createDuration;
    utils_hooks__hooks.isMoment              = isMoment;
    utils_hooks__hooks.weekdays              = lists__listWeekdays;
    utils_hooks__hooks.parseZone             = moment_moment__createInZone;
    utils_hooks__hooks.localeData            = locale_locales__getLocale;
    utils_hooks__hooks.isDuration            = isDuration;
    utils_hooks__hooks.monthsShort           = lists__listMonthsShort;
    utils_hooks__hooks.weekdaysMin           = lists__listWeekdaysMin;
    utils_hooks__hooks.defineLocale          = defineLocale;
    utils_hooks__hooks.updateLocale          = updateLocale;
    utils_hooks__hooks.locales               = locale_locales__listLocales;
    utils_hooks__hooks.weekdaysShort         = lists__listWeekdaysShort;
    utils_hooks__hooks.normalizeUnits        = normalizeUnits;
    utils_hooks__hooks.relativeTimeRounding = duration_humanize__getSetRelativeTimeRounding;
    utils_hooks__hooks.relativeTimeThreshold = duration_humanize__getSetRelativeTimeThreshold;
    utils_hooks__hooks.calendarFormat        = getCalendarFormat;
    utils_hooks__hooks.prototype             = momentPrototype;

    var moment__default = utils_hooks__hooks;


    var af = moment__default.defineLocale('af', {
        months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
        monthsShort : 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
        weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
        weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
        weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
        meridiemParse: /vm|nm/i,
        isPM : function (input) {
            return /^nm$/i.test(input);
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower ? 'vm' : 'VM';
            } else {
                return isLower ? 'nm' : 'NM';
            }
        },
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Vandag om] LT',
            nextDay : '[Môre om] LT',
            nextWeek : 'dddd [om] LT',
            lastDay : '[Gister om] LT',
            lastWeek : '[Laas] dddd [om] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'oor %s',
            past : '%s gelede',
            s : '\'n paar sekondes',
            m : '\'n minuut',
            mm : '%d minute',
            h : '\'n uur',
            hh : '%d ure',
            d : '\'n dag',
            dd : '%d dae',
            M : '\'n maand',
            MM : '%d maande',
            y : '\'n jaar',
            yy : '%d jaar'
        },
        ordinalParse: /\d{1,2}(ste|de)/,
        ordinal : function (number) {
            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter
        },
        week : {
            dow : 1, // Maandag is die eerste dag van die week.
            doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
        }
    });


    var ar_ly__symbolMap = {
        '1': '1',
        '2': '2',
        '3': '3',
        '4': '4',
        '5': '5',
        '6': '6',
        '7': '7',
        '8': '8',
        '9': '9',
        '0': '0'
    }, ar_ly__pluralForm = function (n) {
        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
    }, ar_ly__plurals = {
        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
    }, ar_ly__pluralize = function (u) {
        return function (number, withoutSuffix, string, isFuture) {
            var f = ar_ly__pluralForm(number),
                str = ar_ly__plurals[u][ar_ly__pluralForm(number)];
            if (f === 2) {
                str = str[withoutSuffix ? 0 : 1];
            }
            return str.replace(/%d/i, number);
        };
    }, ar_ly__months = [
        'يناير',
        'فبراير',
        'مارس',
        'أبريل',
        'مايو',
        'يونيو',
        'يوليو',
        'أغسطس',
        'سبتمبر',
        'أكتوبر',
        'نوفمبر',
        'ديسمبر'
    ];

    var ar_ly = moment__default.defineLocale('ar-ly', {
        months : ar_ly__months,
        monthsShort : ar_ly__months,
        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'D/\u200FM/\u200FYYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ص|م/,
        isPM : function (input) {
            return 'م' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar : {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'بعد %s',
            past : 'منذ %s',
            s : ar_ly__pluralize('s'),
            m : ar_ly__pluralize('m'),
            mm : ar_ly__pluralize('m'),
            h : ar_ly__pluralize('h'),
            hh : ar_ly__pluralize('h'),
            d : ar_ly__pluralize('d'),
            dd : ar_ly__pluralize('d'),
            M : ar_ly__pluralize('M'),
            MM : ar_ly__pluralize('M'),
            y : ar_ly__pluralize('y'),
            yy : ar_ly__pluralize('y')
        },
        preparse: function (string) {
            return string.replace(/\u200f/g, '').replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return ar_ly__symbolMap[match];
            }).replace(/,/g, '،');
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var ar_ma = moment__default.defineLocale('ar-ma', {
        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'في %s',
            past : 'منذ %s',
            s : 'ثوان',
            m : 'دقيقة',
            mm : '%d دقائق',
            h : 'ساعة',
            hh : '%d ساعات',
            d : 'يوم',
            dd : '%d أيام',
            M : 'شهر',
            MM : '%d أشهر',
            y : 'سنة',
            yy : '%d سنوات'
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var ar_sa__symbolMap = {
        '1': '١',
        '2': '٢',
        '3': '٣',
        '4': '٤',
        '5': '٥',
        '6': '٦',
        '7': '٧',
        '8': '٨',
        '9': '٩',
        '0': '٠'
    }, ar_sa__numberMap = {
        '١': '1',
        '٢': '2',
        '٣': '3',
        '٤': '4',
        '٥': '5',
        '٦': '6',
        '٧': '7',
        '٨': '8',
        '٩': '9',
        '٠': '0'
    };

    var ar_sa = moment__default.defineLocale('ar-sa', {
        months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ص|م/,
        isPM : function (input) {
            return 'م' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar : {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'في %s',
            past : 'منذ %s',
            s : 'ثوان',
            m : 'دقيقة',
            mm : '%d دقائق',
            h : 'ساعة',
            hh : '%d ساعات',
            d : 'يوم',
            dd : '%d أيام',
            M : 'شهر',
            MM : '%d أشهر',
            y : 'سنة',
            yy : '%d سنوات'
        },
        preparse: function (string) {
            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                return ar_sa__numberMap[match];
            }).replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return ar_sa__symbolMap[match];
            }).replace(/,/g, '،');
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var ar_tn = moment__default.defineLocale('ar-tn', {
        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات'
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
        }
    });


    var ar__symbolMap = {
        '1': '١',
        '2': '٢',
        '3': '٣',
        '4': '٤',
        '5': '٥',
        '6': '٦',
        '7': '٧',
        '8': '٨',
        '9': '٩',
        '0': '٠'
    }, ar__numberMap = {
        '١': '1',
        '٢': '2',
        '٣': '3',
        '٤': '4',
        '٥': '5',
        '٦': '6',
        '٧': '7',
        '٨': '8',
        '٩': '9',
        '٠': '0'
    }, ar__pluralForm = function (n) {
        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
    }, ar__plurals = {
        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
    }, ar__pluralize = function (u) {
        return function (number, withoutSuffix, string, isFuture) {
            var f = ar__pluralForm(number),
                str = ar__plurals[u][ar__pluralForm(number)];
            if (f === 2) {
                str = str[withoutSuffix ? 0 : 1];
            }
            return str.replace(/%d/i, number);
        };
    }, ar__months = [
        'كانون الثاني يناير',
        'شباط فبراير',
        'آذار مارس',
        'نيسان أبريل',
        'أيار مايو',
        'حزيران يونيو',
        'تموز يوليو',
        'آب أغسطس',
        'أيلول سبتمبر',
        'تشرين الأول أكتوبر',
        'تشرين الثاني نوفمبر',
        'كانون الأول ديسمبر'
    ];

    var ar = moment__default.defineLocale('ar', {
        months : ar__months,
        monthsShort : ar__months,
        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'D/\u200FM/\u200FYYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ص|م/,
        isPM : function (input) {
            return 'م' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar : {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'بعد %s',
            past : 'منذ %s',
            s : ar__pluralize('s'),
            m : ar__pluralize('m'),
            mm : ar__pluralize('m'),
            h : ar__pluralize('h'),
            hh : ar__pluralize('h'),
            d : ar__pluralize('d'),
            dd : ar__pluralize('d'),
            M : ar__pluralize('M'),
            MM : ar__pluralize('M'),
            y : ar__pluralize('y'),
            yy : ar__pluralize('y')
        },
        preparse: function (string) {
            return string.replace(/\u200f/g, '').replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                return ar__numberMap[match];
            }).replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return ar__symbolMap[match];
            }).replace(/,/g, '،');
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var az__suffixes = {
        1: '-inci',
        5: '-inci',
        8: '-inci',
        70: '-inci',
        80: '-inci',
        2: '-nci',
        7: '-nci',
        20: '-nci',
        50: '-nci',
        3: '-üncü',
        4: '-üncü',
        100: '-üncü',
        6: '-ncı',
        9: '-uncu',
        10: '-uncu',
        30: '-uncu',
        60: '-ıncı',
        90: '-ıncı'
    };

    var az = moment__default.defineLocale('az', {
        months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),
        monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
        weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),
        weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
        weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[bugün saat] LT',
            nextDay : '[sabah saat] LT',
            nextWeek : '[gələn həftə] dddd [saat] LT',
            lastDay : '[dünən] LT',
            lastWeek : '[keçən həftə] dddd [saat] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s sonra',
            past : '%s əvvəl',
            s : 'birneçə saniyyə',
            m : 'bir dəqiqə',
            mm : '%d dəqiqə',
            h : 'bir saat',
            hh : '%d saat',
            d : 'bir gün',
            dd : '%d gün',
            M : 'bir ay',
            MM : '%d ay',
            y : 'bir il',
            yy : '%d il'
        },
        meridiemParse: /gecə|səhər|gündüz|axşam/,
        isPM : function (input) {
            return /^(gündüz|axşam)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'gecə';
            } else if (hour < 12) {
                return 'səhər';
            } else if (hour < 17) {
                return 'gündüz';
            } else {
                return 'axşam';
            }
        },
        ordinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
        ordinal : function (number) {
            if (number === 0) {  // special case for zero
                return number + '-ıncı';
            }
            var a = number % 10,
                b = number % 100 - a,
                c = number >= 100 ? 100 : null;
            return number + (az__suffixes[a] || az__suffixes[b] || az__suffixes[c]);
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });


    function be__plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
    }
    function be__relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
            'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
            'dd': 'дзень_дні_дзён',
            'MM': 'месяц_месяцы_месяцаў',
            'yy': 'год_гады_гадоў'
        };
        if (key === 'm') {
            return withoutSuffix ? 'хвіліна' : 'хвіліну';
        }
        else if (key === 'h') {
            return withoutSuffix ? 'гадзіна' : 'гадзіну';
        }
        else {
            return number + ' ' + be__plural(format[key], +number);
        }
    }

    var be = moment__default.defineLocale('be', {
        months : {
            format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),
            standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')
        },
        monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
        weekdays : {
            format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),
            standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
            isFormat: /\[ ?[Вв] ?(?:мінулую|наступную)? ?\] ?dddd/
        },
        weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
        weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY г.',
            LLL : 'D MMMM YYYY г., HH:mm',
            LLLL : 'dddd, D MMMM YYYY г., HH:mm'
        },
        calendar : {
            sameDay: '[Сёння ў] LT',
            nextDay: '[Заўтра ў] LT',
            lastDay: '[Учора ў] LT',
            nextWeek: function () {
                return '[У] dddd [ў] LT';
            },
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 5:
                    case 6:
                        return '[У мінулую] dddd [ў] LT';
                    case 1:
                    case 2:
                    case 4:
                        return '[У мінулы] dddd [ў] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'праз %s',
            past : '%s таму',
            s : 'некалькі секунд',
            m : be__relativeTimeWithPlural,
            mm : be__relativeTimeWithPlural,
            h : be__relativeTimeWithPlural,
            hh : be__relativeTimeWithPlural,
            d : 'дзень',
            dd : be__relativeTimeWithPlural,
            M : 'месяц',
            MM : be__relativeTimeWithPlural,
            y : 'год',
            yy : be__relativeTimeWithPlural
        },
        meridiemParse: /ночы|раніцы|дня|вечара/,
        isPM : function (input) {
            return /^(дня|вечара)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ночы';
            } else if (hour < 12) {
                return 'раніцы';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечара';
            }
        },
        ordinalParse: /\d{1,2}-(і|ы|га)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                case 'w':
                case 'W':
                    return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';
                case 'D':
                    return number + '-га';
                default:
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var bg = moment__default.defineLocale('bg', {
        months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
        monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
        weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
        weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'D.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY H:mm',
            LLLL : 'dddd, D MMMM YYYY H:mm'
        },
        calendar : {
            sameDay : '[Днес в] LT',
            nextDay : '[Утре в] LT',
            nextWeek : 'dddd [в] LT',
            lastDay : '[Вчера в] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 6:
                        return '[В изминалата] dddd [в] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[В изминалия] dddd [в] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'след %s',
            past : 'преди %s',
            s : 'няколко секунди',
            m : 'минута',
            mm : '%d минути',
            h : 'час',
            hh : '%d часа',
            d : 'ден',
            dd : '%d дни',
            M : 'месец',
            MM : '%d месеца',
            y : 'година',
            yy : '%d години'
        },
        ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
        ordinal : function (number) {
            var lastDigit = number % 10,
                last2Digits = number % 100;
            if (number === 0) {
                return number + '-ев';
            } else if (last2Digits === 0) {
                return number + '-ен';
            } else if (last2Digits > 10 && last2Digits < 20) {
                return number + '-ти';
            } else if (lastDigit === 1) {
                return number + '-ви';
            } else if (lastDigit === 2) {
                return number + '-ри';
            } else if (lastDigit === 7 || lastDigit === 8) {
                return number + '-ми';
            } else {
                return number + '-ти';
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var bn__symbolMap = {
        '1': '১',
        '2': '২',
        '3': '৩',
        '4': '৪',
        '5': '৫',
        '6': '৬',
        '7': '৭',
        '8': '৮',
        '9': '৯',
        '0': '০'
    },
    bn__numberMap = {
        '১': '1',
        '২': '2',
        '৩': '3',
        '৪': '4',
        '৫': '5',
        '৬': '6',
        '৭': '7',
        '৮': '8',
        '৯': '9',
        '০': '0'
    };

    var bn = moment__default.defineLocale('bn', {
        months : 'জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
        monthsShort : 'জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),
        weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),
        weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
        weekdaysMin : 'রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি'.split('_'),
        longDateFormat : {
            LT : 'A h:mm সময়',
            LTS : 'A h:mm:ss সময়',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm সময়',
            LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'
        },
        calendar : {
            sameDay : '[আজ] LT',
            nextDay : '[আগামীকাল] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[গতকাল] LT',
            lastWeek : '[গত] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s পরে',
            past : '%s আগে',
            s : 'কয়েক সেকেন্ড',
            m : 'এক মিনিট',
            mm : '%d মিনিট',
            h : 'এক ঘন্টা',
            hh : '%d ঘন্টা',
            d : 'এক দিন',
            dd : '%d দিন',
            M : 'এক মাস',
            MM : '%d মাস',
            y : 'এক বছর',
            yy : '%d বছর'
        },
        preparse: function (string) {
            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
                return bn__numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return bn__symbolMap[match];
            });
        },
        meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if ((meridiem === 'রাত' && hour >= 4) ||
                    (meridiem === 'দুপুর' && hour < 5) ||
                    meridiem === 'বিকাল') {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'রাত';
            } else if (hour < 10) {
                return 'সকাল';
            } else if (hour < 17) {
                return 'দুপুর';
            } else if (hour < 20) {
                return 'বিকাল';
            } else {
                return 'রাত';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var bo__symbolMap = {
        '1': '༡',
        '2': '༢',
        '3': '༣',
        '4': '༤',
        '5': '༥',
        '6': '༦',
        '7': '༧',
        '8': '༨',
        '9': '༩',
        '0': '༠'
    },
    bo__numberMap = {
        '༡': '1',
        '༢': '2',
        '༣': '3',
        '༤': '4',
        '༥': '5',
        '༦': '6',
        '༧': '7',
        '༨': '8',
        '༩': '9',
        '༠': '0'
    };

    var bo = moment__default.defineLocale('bo', {
        months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
        monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
        weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
        weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
        weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
        longDateFormat : {
            LT : 'A h:mm',
            LTS : 'A h:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm',
            LLLL : 'dddd, D MMMM YYYY, A h:mm'
        },
        calendar : {
            sameDay : '[དི་རིང] LT',
            nextDay : '[སང་ཉིན] LT',
            nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',
            lastDay : '[ཁ་སང] LT',
            lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ལ་',
            past : '%s སྔན་ལ',
            s : 'ལམ་སང',
            m : 'སྐར་མ་གཅིག',
            mm : '%d སྐར་མ',
            h : 'ཆུ་ཚོད་གཅིག',
            hh : '%d ཆུ་ཚོད',
            d : 'ཉིན་གཅིག',
            dd : '%d ཉིན་',
            M : 'ཟླ་བ་གཅིག',
            MM : '%d ཟླ་བ',
            y : 'ལོ་གཅིག',
            yy : '%d ལོ'
        },
        preparse: function (string) {
            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
                return bo__numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return bo__symbolMap[match];
            });
        },
        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if ((meridiem === 'མཚན་མོ' && hour >= 4) ||
                    (meridiem === 'ཉིན་གུང' && hour < 5) ||
                    meridiem === 'དགོང་དག') {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'མཚན་མོ';
            } else if (hour < 10) {
                return 'ཞོགས་ཀས';
            } else if (hour < 17) {
                return 'ཉིན་གུང';
            } else if (hour < 20) {
                return 'དགོང་དག';
            } else {
                return 'མཚན་མོ';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 1st is the first week of the year.
        }
    });


    function relativeTimeWithMutation(number, withoutSuffix, key) {
        var format = {
            'mm': 'munutenn',
            'MM': 'miz',
            'dd': 'devezh'
        };
        return number + ' ' + mutation(format[key], number);
    }
    function specialMutationForYears(number) {
        switch (lastNumber(number)) {
            case 1:
            case 3:
            case 4:
            case 5:
            case 9:
                return number + ' bloaz';
            default:
                return number + ' vloaz';
        }
    }
    function lastNumber(number) {
        if (number > 9) {
            return lastNumber(number % 10);
        }
        return number;
    }
    function mutation(text, number) {
        if (number === 2) {
            return softMutation(text);
        }
        return text;
    }
    function softMutation(text) {
        var mutationTable = {
            'm': 'v',
            'b': 'v',
            'd': 'z'
        };
        if (mutationTable[text.charAt(0)] === undefined) {
            return text;
        }
        return mutationTable[text.charAt(0)] + text.substring(1);
    }

    var br = moment__default.defineLocale('br', {
        months : 'Genver_C\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
        monthsShort : 'Gen_C\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
        weekdays : 'Sul_Lun_Meurzh_Merc\'her_Yaou_Gwener_Sadorn'.split('_'),
        weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
        weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'h[e]mm A',
            LTS : 'h[e]mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D [a viz] MMMM YYYY',
            LLL : 'D [a viz] MMMM YYYY h[e]mm A',
            LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'
        },
        calendar : {
            sameDay : '[Hiziv da] LT',
            nextDay : '[Warc\'hoazh da] LT',
            nextWeek : 'dddd [da] LT',
            lastDay : '[Dec\'h da] LT',
            lastWeek : 'dddd [paset da] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'a-benn %s',
            past : '%s \'zo',
            s : 'un nebeud segondennoù',
            m : 'ur vunutenn',
            mm : relativeTimeWithMutation,
            h : 'un eur',
            hh : '%d eur',
            d : 'un devezh',
            dd : relativeTimeWithMutation,
            M : 'ur miz',
            MM : relativeTimeWithMutation,
            y : 'ur bloaz',
            yy : specialMutationForYears
        },
        ordinalParse: /\d{1,2}(añ|vet)/,
        ordinal : function (number) {
            var output = (number === 1) ? 'añ' : 'vet';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    function bs__translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'm':
                return withoutSuffix ? 'jedna minuta' : 'jedne minute';
            case 'mm':
                if (number === 1) {
                    result += 'minuta';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'minute';
                } else {
                    result += 'minuta';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'jedan sat' : 'jednog sata';
            case 'hh':
                if (number === 1) {
                    result += 'sat';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sata';
                } else {
                    result += 'sati';
                }
                return result;
            case 'dd':
                if (number === 1) {
                    result += 'dan';
                } else {
                    result += 'dana';
                }
                return result;
            case 'MM':
                if (number === 1) {
                    result += 'mjesec';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'mjeseca';
                } else {
                    result += 'mjeseci';
                }
                return result;
            case 'yy':
                if (number === 1) {
                    result += 'godina';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'godine';
                } else {
                    result += 'godina';
                }
                return result;
        }
    }

    var bs = moment__default.defineLocale('bs', {
        months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd, D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay  : '[danas u] LT',
            nextDay  : '[sutra u] LT',
            nextWeek : function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay  : '[jučer u] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                        return '[prošlu] dddd [u] LT';
                    case 6:
                        return '[prošle] [subote] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prošli] dddd [u] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'za %s',
            past   : 'prije %s',
            s      : 'par sekundi',
            m      : bs__translate,
            mm     : bs__translate,
            h      : bs__translate,
            hh     : bs__translate,
            d      : 'dan',
            dd     : bs__translate,
            M      : 'mjesec',
            MM     : bs__translate,
            y      : 'godinu',
            yy     : bs__translate
        },
        ordinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var ca = moment__default.defineLocale('ca', {
        months : 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
        monthsShort : 'gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.'.split('_'),
        monthsParseExact : true,
        weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
        weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
        weekdaysMin : 'Dg_Dl_Dt_Dc_Dj_Dv_Ds'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY H:mm',
            LLLL : 'dddd D MMMM YYYY H:mm'
        },
        calendar : {
            sameDay : function () {
                return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            nextDay : function () {
                return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            lastDay : function () {
                return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            lastWeek : function () {
                return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'en %s',
            past : 'fa %s',
            s : 'uns segons',
            m : 'un minut',
            mm : '%d minuts',
            h : 'una hora',
            hh : '%d hores',
            d : 'un dia',
            dd : '%d dies',
            M : 'un mes',
            MM : '%d mesos',
            y : 'un any',
            yy : '%d anys'
        },
        ordinalParse: /\d{1,2}(r|n|t|è|a)/,
        ordinal : function (number, period) {
            var output = (number === 1) ? 'r' :
                (number === 2) ? 'n' :
                (number === 3) ? 'r' :
                (number === 4) ? 't' : 'è';
            if (period === 'w' || period === 'W') {
                output = 'a';
            }
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var cs__months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),
        cs__monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');
    function cs__plural(n) {
        return (n > 1) && (n < 5) && (~~(n / 10) !== 1);
    }
    function cs__translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':  // a few seconds / in a few seconds / a few seconds ago
                return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';
            case 'm':  // a minute / in a minute / a minute ago
                return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');
            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
                if (withoutSuffix || isFuture) {
                    return result + (cs__plural(number) ? 'minuty' : 'minut');
                } else {
                    return result + 'minutami';
                }
                break;
            case 'h':  // an hour / in an hour / an hour ago
                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
            case 'hh': // 9 hours / in 9 hours / 9 hours ago
                if (withoutSuffix || isFuture) {
                    return result + (cs__plural(number) ? 'hodiny' : 'hodin');
                } else {
                    return result + 'hodinami';
                }
                break;
            case 'd':  // a day / in a day / a day ago
                return (withoutSuffix || isFuture) ? 'den' : 'dnem';
            case 'dd': // 9 days / in 9 days / 9 days ago
                if (withoutSuffix || isFuture) {
                    return result + (cs__plural(number) ? 'dny' : 'dní');
                } else {
                    return result + 'dny';
                }
                break;
            case 'M':  // a month / in a month / a month ago
                return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';
            case 'MM': // 9 months / in 9 months / 9 months ago
                if (withoutSuffix || isFuture) {
                    return result + (cs__plural(number) ? 'měsíce' : 'měsíců');
                } else {
                    return result + 'měsíci';
                }
                break;
            case 'y':  // a year / in a year / a year ago
                return (withoutSuffix || isFuture) ? 'rok' : 'rokem';
            case 'yy': // 9 years / in 9 years / 9 years ago
                if (withoutSuffix || isFuture) {
                    return result + (cs__plural(number) ? 'roky' : 'let');
                } else {
                    return result + 'lety';
                }
                break;
        }
    }

    var cs = moment__default.defineLocale('cs', {
        months : cs__months,
        monthsShort : cs__monthsShort,
        monthsParse : (function (months, monthsShort) {
            var i, _monthsParse = [];
            for (i = 0; i < 12; i++) {
                // use custom parser to solve problem with July (červenec)
                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');
            }
            return _monthsParse;
        }(cs__months, cs__monthsShort)),
        shortMonthsParse : (function (monthsShort) {
            var i, _shortMonthsParse = [];
            for (i = 0; i < 12; i++) {
                _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');
            }
            return _shortMonthsParse;
        }(cs__monthsShort)),
        longMonthsParse : (function (months) {
            var i, _longMonthsParse = [];
            for (i = 0; i < 12; i++) {
                _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');
            }
            return _longMonthsParse;
        }(cs__months)),
        weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
        weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),
        weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),
        longDateFormat : {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd D. MMMM YYYY H:mm',
            l : 'D. M. YYYY'
        },
        calendar : {
            sameDay: '[dnes v] LT',
            nextDay: '[zítra v] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[v neděli v] LT';
                    case 1:
                    case 2:
                        return '[v] dddd [v] LT';
                    case 3:
                        return '[ve středu v] LT';
                    case 4:
                        return '[ve čtvrtek v] LT';
                    case 5:
                        return '[v pátek v] LT';
                    case 6:
                        return '[v sobotu v] LT';
                }
            },
            lastDay: '[včera v] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[minulou neděli v] LT';
                    case 1:
                    case 2:
                        return '[minulé] dddd [v] LT';
                    case 3:
                        return '[minulou středu v] LT';
                    case 4:
                    case 5:
                        return '[minulý] dddd [v] LT';
                    case 6:
                        return '[minulou sobotu v] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'za %s',
            past : 'před %s',
            s : cs__translate,
            m : cs__translate,
            mm : cs__translate,
            h : cs__translate,
            hh : cs__translate,
            d : cs__translate,
            dd : cs__translate,
            M : cs__translate,
            MM : cs__translate,
            y : cs__translate,
            yy : cs__translate
        },
        ordinalParse : /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var cv = moment__default.defineLocale('cv', {
        months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),
        monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
        weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),
        weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
        weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD-MM-YYYY',
            LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
            LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
            LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'
        },
        calendar : {
            sameDay: '[Паян] LT [сехетре]',
            nextDay: '[Ыран] LT [сехетре]',
            lastDay: '[Ӗнер] LT [сехетре]',
            nextWeek: '[Ҫитес] dddd LT [сехетре]',
            lastWeek: '[Иртнӗ] dddd LT [сехетре]',
            sameElse: 'L'
        },
        relativeTime : {
            future : function (output) {
                var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';
                return output + affix;
            },
            past : '%s каялла',
            s : 'пӗр-ик ҫеккунт',
            m : 'пӗр минут',
            mm : '%d минут',
            h : 'пӗр сехет',
            hh : '%d сехет',
            d : 'пӗр кун',
            dd : '%d кун',
            M : 'пӗр уйӑх',
            MM : '%d уйӑх',
            y : 'пӗр ҫул',
            yy : '%d ҫул'
        },
        ordinalParse: /\d{1,2}-мӗш/,
        ordinal : '%d-мӗш',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var cy = moment__default.defineLocale('cy', {
        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),
        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),
        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
        weekdaysParseExact : true,
        // time formats are the same as en-gb
        longDateFormat: {
            LT: 'HH:mm',
            LTS : 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Heddiw am] LT',
            nextDay: '[Yfory am] LT',
            nextWeek: 'dddd [am] LT',
            lastDay: '[Ddoe am] LT',
            lastWeek: 'dddd [diwethaf am] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'mewn %s',
            past: '%s yn ôl',
            s: 'ychydig eiliadau',
            m: 'munud',
            mm: '%d munud',
            h: 'awr',
            hh: '%d awr',
            d: 'diwrnod',
            dd: '%d diwrnod',
            M: 'mis',
            MM: '%d mis',
            y: 'blwyddyn',
            yy: '%d flynedd'
        },
        ordinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
        ordinal: function (number) {
            var b = number,
                output = '',
                lookup = [
                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed
                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed
                ];
            if (b > 20) {
                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
                    output = 'fed'; // not 30ain, 70ain or 90ain
                } else {
                    output = 'ain';
                }
            } else if (b > 0) {
                output = lookup[b];
            }
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var da = moment__default.defineLocale('da', {
        months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),
        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
        weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),
        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY HH:mm',
            LLLL : 'dddd [d.] D. MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[I dag kl.] LT',
            nextDay : '[I morgen kl.] LT',
            nextWeek : 'dddd [kl.] LT',
            lastDay : '[I går kl.] LT',
            lastWeek : '[sidste] dddd [kl] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'om %s',
            past : '%s siden',
            s : 'få sekunder',
            m : 'et minut',
            mm : '%d minutter',
            h : 'en time',
            hh : '%d timer',
            d : 'en dag',
            dd : '%d dage',
            M : 'en måned',
            MM : '%d måneder',
            y : 'et år',
            yy : '%d år'
        },
        ordinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    function de_at__processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eine Minute', 'einer Minute'],
            'h': ['eine Stunde', 'einer Stunde'],
            'd': ['ein Tag', 'einem Tag'],
            'dd': [number + ' Tage', number + ' Tagen'],
            'M': ['ein Monat', 'einem Monat'],
            'MM': [number + ' Monate', number + ' Monaten'],
            'y': ['ein Jahr', 'einem Jahr'],
            'yy': [number + ' Jahre', number + ' Jahren']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var de_at = moment__default.defineLocale('de-at', {
        months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort : 'Jän._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY HH:mm',
            LLLL : 'dddd, D. MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]'
        },
        relativeTime : {
            future : 'in %s',
            past : 'vor %s',
            s : 'ein paar Sekunden',
            m : de_at__processRelativeTime,
            mm : '%d Minuten',
            h : de_at__processRelativeTime,
            hh : '%d Stunden',
            d : de_at__processRelativeTime,
            dd : de_at__processRelativeTime,
            M : de_at__processRelativeTime,
            MM : de_at__processRelativeTime,
            y : de_at__processRelativeTime,
            yy : de_at__processRelativeTime
        },
        ordinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    function de__processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eine Minute', 'einer Minute'],
            'h': ['eine Stunde', 'einer Stunde'],
            'd': ['ein Tag', 'einem Tag'],
            'dd': [number + ' Tage', number + ' Tagen'],
            'M': ['ein Monat', 'einem Monat'],
            'MM': [number + ' Monate', number + ' Monaten'],
            'y': ['ein Jahr', 'einem Jahr'],
            'yy': [number + ' Jahre', number + ' Jahren']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var de = moment__default.defineLocale('de', {
        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort : 'Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY HH:mm',
            LLLL : 'dddd, D. MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]'
        },
        relativeTime : {
            future : 'in %s',
            past : 'vor %s',
            s : 'ein paar Sekunden',
            m : de__processRelativeTime,
            mm : '%d Minuten',
            h : de__processRelativeTime,
            hh : '%d Stunden',
            d : de__processRelativeTime,
            dd : de__processRelativeTime,
            M : de__processRelativeTime,
            MM : de__processRelativeTime,
            y : de__processRelativeTime,
            yy : de__processRelativeTime
        },
        ordinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var dv__months = [
        'ޖެނުއަރީ',
        'ފެބްރުއަރީ',
        'މާރިޗު',
        'އޭޕްރީލު',
        'މޭ',
        'ޖޫން',
        'ޖުލައި',
        'އޯގަސްޓު',
        'ސެޕްޓެމްބަރު',
        'އޮކްޓޯބަރު',
        'ނޮވެމްބަރު',
        'ޑިސެމްބަރު'
    ], dv__weekdays = [
        'އާދިއްތަ',
        'ހޯމަ',
        'އަންގާރަ',
        'ބުދަ',
        'ބުރާސްފަތި',
        'ހުކުރު',
        'ހޮނިހިރު'
    ];

    var dv = moment__default.defineLocale('dv', {
        months : dv__months,
        monthsShort : dv__months,
        weekdays : dv__weekdays,
        weekdaysShort : dv__weekdays,
        weekdaysMin : 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
        longDateFormat : {

            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'D/M/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /މކ|މފ/,
        isPM : function (input) {
            return 'މފ' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'މކ';
            } else {
                return 'މފ';
            }
        },
        calendar : {
            sameDay : '[މިއަދު] LT',
            nextDay : '[މާދަމާ] LT',
            nextWeek : 'dddd LT',
            lastDay : '[އިއްޔެ] LT',
            lastWeek : '[ފާއިތުވި] dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'ތެރޭގައި %s',
            past : 'ކުރިން %s',
            s : 'ސިކުންތުކޮޅެއް',
            m : 'މިނިޓެއް',
            mm : 'މިނިޓު %d',
            h : 'ގަޑިއިރެއް',
            hh : 'ގަޑިއިރު %d',
            d : 'ދުވަހެއް',
            dd : 'ދުވަސް %d',
            M : 'މަހެއް',
            MM : 'މަސް %d',
            y : 'އަހަރެއް',
            yy : 'އަހަރު %d'
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week : {
            dow : 7,  // Sunday is the first day of the week.
            doy : 12  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var el = moment__default.defineLocale('el', {
        monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),
        monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),
        months : function (momentToFormat, format) {
            if (/D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'
                return this._monthsGenitiveEl[momentToFormat.month()];
            } else {
                return this._monthsNominativeEl[momentToFormat.month()];
            }
        },
        monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
        weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),
        weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
        weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'μμ' : 'ΜΜ';
            } else {
                return isLower ? 'πμ' : 'ΠΜ';
            }
        },
        isPM : function (input) {
            return ((input + '').toLowerCase()[0] === 'μ');
        },
        meridiemParse : /[ΠΜ]\.?Μ?\.?/i,
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendarEl : {
            sameDay : '[Σήμερα {}] LT',
            nextDay : '[Αύριο {}] LT',
            nextWeek : 'dddd [{}] LT',
            lastDay : '[Χθες {}] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 6:
                        return '[το προηγούμενο] dddd [{}] LT';
                    default:
                        return '[την προηγούμενη] dddd [{}] LT';
                }
            },
            sameElse : 'L'
        },
        calendar : function (key, mom) {
            var output = this._calendarEl[key],
                hours = mom && mom.hours();
            if (isFunction(output)) {
                output = output.apply(mom);
            }
            return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));
        },
        relativeTime : {
            future : 'σε %s',
            past : '%s πριν',
            s : 'λίγα δευτερόλεπτα',
            m : 'ένα λεπτό',
            mm : '%d λεπτά',
            h : 'μία ώρα',
            hh : '%d ώρες',
            d : 'μία μέρα',
            dd : '%d μέρες',
            M : 'ένας μήνας',
            MM : '%d μήνες',
            y : 'ένας χρόνος',
            yy : '%d χρόνια'
        },
        ordinalParse: /\d{1,2}η/,
        ordinal: '%dη',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4st is the first week of the year.
        }
    });


    var en_au = moment__default.defineLocale('en-au', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var en_ca = moment__default.defineLocale('en-ca', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'YYYY-MM-DD',
            LL : 'MMMM D, YYYY',
            LLL : 'MMMM D, YYYY h:mm A',
            LLLL : 'dddd, MMMM D, YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });


    var en_gb = moment__default.defineLocale('en-gb', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var en_ie = moment__default.defineLocale('en-ie', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD-MM-YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var en_nz = moment__default.defineLocale('en-nz', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var eo = moment__default.defineLocale('eo', {
        months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),
        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),
        weekdays : 'Dimanĉo_Lundo_Mardo_Merkredo_Ĵaŭdo_Vendredo_Sabato'.split('_'),
        weekdaysShort : 'Dim_Lun_Mard_Merk_Ĵaŭ_Ven_Sab'.split('_'),
        weekdaysMin : 'Di_Lu_Ma_Me_Ĵa_Ve_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'D[-an de] MMMM, YYYY',
            LLL : 'D[-an de] MMMM, YYYY HH:mm',
            LLLL : 'dddd, [la] D[-an de] MMMM, YYYY HH:mm'
        },
        meridiemParse: /[ap]\.t\.m/i,
        isPM: function (input) {
            return input.charAt(0).toLowerCase() === 'p';
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'p.t.m.' : 'P.T.M.';
            } else {
                return isLower ? 'a.t.m.' : 'A.T.M.';
            }
        },
        calendar : {
            sameDay : '[Hodiaŭ je] LT',
            nextDay : '[Morgaŭ je] LT',
            nextWeek : 'dddd [je] LT',
            lastDay : '[Hieraŭ je] LT',
            lastWeek : '[pasinta] dddd [je] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'je %s',
            past : 'antaŭ %s',
            s : 'sekundoj',
            m : 'minuto',
            mm : '%d minutoj',
            h : 'horo',
            hh : '%d horoj',
            d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo
            dd : '%d tagoj',
            M : 'monato',
            MM : '%d monatoj',
            y : 'jaro',
            yy : '%d jaroj'
        },
        ordinalParse: /\d{1,2}a/,
        ordinal : '%da',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var es_do__monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
        es_do__monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

    var es_do = moment__default.defineLocale('es-do', {
        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
        monthsShort : function (m, format) {
            if (/-MMM-/.test(format)) {
                return es_do__monthsShort[m.month()];
            } else {
                return es_do__monthsShortDot[m.month()];
            }
        },
        monthsParseExact : true,
        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY h:mm A',
            LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'
        },
        calendar : {
            sameDay : function () {
                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextDay : function () {
                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastDay : function () {
                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastWeek : function () {
                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'en %s',
            past : 'hace %s',
            s : 'unos segundos',
            m : 'un minuto',
            mm : '%d minutos',
            h : 'una hora',
            hh : '%d horas',
            d : 'un día',
            dd : '%d días',
            M : 'un mes',
            MM : '%d meses',
            y : 'un año',
            yy : '%d años'
        },
        ordinalParse : /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var es__monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
        es__monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

    var es = moment__default.defineLocale('es', {
        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
        monthsShort : function (m, format) {
            if (/-MMM-/.test(format)) {
                return es__monthsShort[m.month()];
            } else {
                return es__monthsShortDot[m.month()];
            }
        },
        monthsParseExact : true,
        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY H:mm',
            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
        },
        calendar : {
            sameDay : function () {
                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextDay : function () {
                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastDay : function () {
                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastWeek : function () {
                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'en %s',
            past : 'hace %s',
            s : 'unos segundos',
            m : 'un minuto',
            mm : '%d minutos',
            h : 'una hora',
            hh : '%d horas',
            d : 'un día',
            dd : '%d días',
            M : 'un mes',
            MM : '%d meses',
            y : 'un año',
            yy : '%d años'
        },
        ordinalParse : /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    function et__processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
            'm' : ['ühe minuti', 'üks minut'],
            'mm': [number + ' minuti', number + ' minutit'],
            'h' : ['ühe tunni', 'tund aega', 'üks tund'],
            'hh': [number + ' tunni', number + ' tundi'],
            'd' : ['ühe päeva', 'üks päev'],
            'M' : ['kuu aja', 'kuu aega', 'üks kuu'],
            'MM': [number + ' kuu', number + ' kuud'],
            'y' : ['ühe aasta', 'aasta', 'üks aasta'],
            'yy': [number + ' aasta', number + ' aastat']
        };
        if (withoutSuffix) {
            return format[key][2] ? format[key][2] : format[key][1];
        }
        return isFuture ? format[key][0] : format[key][1];
    }

    var et = moment__default.defineLocale('et', {
        months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),
        monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
        weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),
        weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),
        weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),
        longDateFormat : {
            LT   : 'H:mm',
            LTS : 'H:mm:ss',
            L    : 'DD.MM.YYYY',
            LL   : 'D. MMMM YYYY',
            LLL  : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd, D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay  : '[Täna,] LT',
            nextDay  : '[Homme,] LT',
            nextWeek : '[Järgmine] dddd LT',
            lastDay  : '[Eile,] LT',
            lastWeek : '[Eelmine] dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s pärast',
            past   : '%s tagasi',
            s      : et__processRelativeTime,
            m      : et__processRelativeTime,
            mm     : et__processRelativeTime,
            h      : et__processRelativeTime,
            hh     : et__processRelativeTime,
            d      : et__processRelativeTime,
            dd     : '%d päeva',
            M      : et__processRelativeTime,
            MM     : et__processRelativeTime,
            y      : et__processRelativeTime,
            yy     : et__processRelativeTime
        },
        ordinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var eu = moment__default.defineLocale('eu', {
        months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
        monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
        monthsParseExact : true,
        weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
        weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),
        weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'YYYY[ko] MMMM[ren] D[a]',
            LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',
            LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
            l : 'YYYY-M-D',
            ll : 'YYYY[ko] MMM D[a]',
            lll : 'YYYY[ko] MMM D[a] HH:mm',
            llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'
        },
        calendar : {
            sameDay : '[gaur] LT[etan]',
            nextDay : '[bihar] LT[etan]',
            nextWeek : 'dddd LT[etan]',
            lastDay : '[atzo] LT[etan]',
            lastWeek : '[aurreko] dddd LT[etan]',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s barru',
            past : 'duela %s',
            s : 'segundo batzuk',
            m : 'minutu bat',
            mm : '%d minutu',
            h : 'ordu bat',
            hh : '%d ordu',
            d : 'egun bat',
            dd : '%d egun',
            M : 'hilabete bat',
            MM : '%d hilabete',
            y : 'urte bat',
            yy : '%d urte'
        },
        ordinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var fa__symbolMap = {
        '1': '۱',
        '2': '۲',
        '3': '۳',
        '4': '۴',
        '5': '۵',
        '6': '۶',
        '7': '۷',
        '8': '۸',
        '9': '۹',
        '0': '۰'
    }, fa__numberMap = {
        '۱': '1',
        '۲': '2',
        '۳': '3',
        '۴': '4',
        '۵': '5',
        '۶': '6',
        '۷': '7',
        '۸': '8',
        '۹': '9',
        '۰': '0'
    };

    var fa = moment__default.defineLocale('fa', {
        months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
        monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
        weekdays : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
        weekdaysShort : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
        weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        meridiemParse: /قبل از ظهر|بعد از ظهر/,
        isPM: function (input) {
            return /بعد از ظهر/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'قبل از ظهر';
            } else {
                return 'بعد از ظهر';
            }
        },
        calendar : {
            sameDay : '[امروز ساعت] LT',
            nextDay : '[فردا ساعت] LT',
            nextWeek : 'dddd [ساعت] LT',
            lastDay : '[دیروز ساعت] LT',
            lastWeek : 'dddd [پیش] [ساعت] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'در %s',
            past : '%s پیش',
            s : 'چندین ثانیه',
            m : 'یک دقیقه',
            mm : '%d دقیقه',
            h : 'یک ساعت',
            hh : '%d ساعت',
            d : 'یک روز',
            dd : '%d روز',
            M : 'یک ماه',
            MM : '%d ماه',
            y : 'یک سال',
            yy : '%d سال'
        },
        preparse: function (string) {
            return string.replace(/[۰-۹]/g, function (match) {
                return fa__numberMap[match];
            }).replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return fa__symbolMap[match];
            }).replace(/,/g, '،');
        },
        ordinalParse: /\d{1,2}م/,
        ordinal : '%dم',
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12 // The week that contains Jan 1st is the first week of the year.
        }
    });


    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),
        numbersFuture = [
            'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',
            numbersPast[7], numbersPast[8], numbersPast[9]
        ];
    function fi__translate(number, withoutSuffix, key, isFuture) {
        var result = '';
        switch (key) {
            case 's':
                return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
            case 'm':
                return isFuture ? 'minuutin' : 'minuutti';
            case 'mm':
                result = isFuture ? 'minuutin' : 'minuuttia';
                break;
            case 'h':
                return isFuture ? 'tunnin' : 'tunti';
            case 'hh':
                result = isFuture ? 'tunnin' : 'tuntia';
                break;
            case 'd':
                return isFuture ? 'päivän' : 'päivä';
            case 'dd':
                result = isFuture ? 'päivän' : 'päivää';
                break;
            case 'M':
                return isFuture ? 'kuukauden' : 'kuukausi';
            case 'MM':
                result = isFuture ? 'kuukauden' : 'kuukautta';
                break;
            case 'y':
                return isFuture ? 'vuoden' : 'vuosi';
            case 'yy':
                result = isFuture ? 'vuoden' : 'vuotta';
                break;
        }
        result = verbalNumber(number, isFuture) + ' ' + result;
        return result;
    }
    function verbalNumber(number, isFuture) {
        return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;
    }

    var fi = moment__default.defineLocale('fi', {
        months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),
        monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),
        weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),
        weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),
        weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD.MM.YYYY',
            LL : 'Do MMMM[ta] YYYY',
            LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',
            LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
            l : 'D.M.YYYY',
            ll : 'Do MMM YYYY',
            lll : 'Do MMM YYYY, [klo] HH.mm',
            llll : 'ddd, Do MMM YYYY, [klo] HH.mm'
        },
        calendar : {
            sameDay : '[tänään] [klo] LT',
            nextDay : '[huomenna] [klo] LT',
            nextWeek : 'dddd [klo] LT',
            lastDay : '[eilen] [klo] LT',
            lastWeek : '[viime] dddd[na] [klo] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s päästä',
            past : '%s sitten',
            s : fi__translate,
            m : fi__translate,
            mm : fi__translate,
            h : fi__translate,
            hh : fi__translate,
            d : fi__translate,
            dd : fi__translate,
            M : fi__translate,
            MM : fi__translate,
            y : fi__translate,
            yy : fi__translate
        },
        ordinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var fo = moment__default.defineLocale('fo', {
        months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
        weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),
        weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
        weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D. MMMM, YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Í dag kl.] LT',
            nextDay : '[Í morgin kl.] LT',
            nextWeek : 'dddd [kl.] LT',
            lastDay : '[Í gjár kl.] LT',
            lastWeek : '[síðstu] dddd [kl] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'um %s',
            past : '%s síðani',
            s : 'fá sekund',
            m : 'ein minutt',
            mm : '%d minuttir',
            h : 'ein tími',
            hh : '%d tímar',
            d : 'ein dagur',
            dd : '%d dagar',
            M : 'ein mánaði',
            MM : '%d mánaðir',
            y : 'eitt ár',
            yy : '%d ár'
        },
        ordinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var fr_ca = moment__default.defineLocale('fr-ca', {
        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
        monthsParseExact : true,
        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Aujourd\'hui à] LT',
            nextDay: '[Demain à] LT',
            nextWeek: 'dddd [à] LT',
            lastDay: '[Hier à] LT',
            lastWeek: 'dddd [dernier à] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'dans %s',
            past : 'il y a %s',
            s : 'quelques secondes',
            m : 'une minute',
            mm : '%d minutes',
            h : 'une heure',
            hh : '%d heures',
            d : 'un jour',
            dd : '%d jours',
            M : 'un mois',
            MM : '%d mois',
            y : 'un an',
            yy : '%d ans'
        },
        ordinalParse: /\d{1,2}(er|e)/,
        ordinal : function (number) {
            return number + (number === 1 ? 'er' : 'e');
        }
    });


    var fr_ch = moment__default.defineLocale('fr-ch', {
        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
        monthsParseExact : true,
        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Aujourd\'hui à] LT',
            nextDay: '[Demain à] LT',
            nextWeek: 'dddd [à] LT',
            lastDay: '[Hier à] LT',
            lastWeek: 'dddd [dernier à] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'dans %s',
            past : 'il y a %s',
            s : 'quelques secondes',
            m : 'une minute',
            mm : '%d minutes',
            h : 'une heure',
            hh : '%d heures',
            d : 'un jour',
            dd : '%d jours',
            M : 'un mois',
            MM : '%d mois',
            y : 'un an',
            yy : '%d ans'
        },
        ordinalParse: /\d{1,2}(er|e)/,
        ordinal : function (number) {
            return number + (number === 1 ? 'er' : 'e');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var fr = moment__default.defineLocale('fr', {
        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
        monthsParseExact : true,
        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Aujourd\'hui à] LT',
            nextDay: '[Demain à] LT',
            nextWeek: 'dddd [à] LT',
            lastDay: '[Hier à] LT',
            lastWeek: 'dddd [dernier à] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'dans %s',
            past : 'il y a %s',
            s : 'quelques secondes',
            m : 'une minute',
            mm : '%d minutes',
            h : 'une heure',
            hh : '%d heures',
            d : 'un jour',
            dd : '%d jours',
            M : 'un mois',
            MM : '%d mois',
            y : 'un an',
            yy : '%d ans'
        },
        ordinalParse: /\d{1,2}(er|)/,
        ordinal : function (number) {
            return number + (number === 1 ? 'er' : '');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var fy__monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),
        fy__monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');

    var fy = moment__default.defineLocale('fy', {
        months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),
        monthsShort : function (m, format) {
            if (/-MMM-/.test(format)) {
                return fy__monthsShortWithoutDots[m.month()];
            } else {
                return fy__monthsShortWithDots[m.month()];
            }
        },
        monthsParseExact : true,
        weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),
        weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),
        weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD-MM-YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[hjoed om] LT',
            nextDay: '[moarn om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[juster om] LT',
            lastWeek: '[ôfrûne] dddd [om] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'oer %s',
            past : '%s lyn',
            s : 'in pear sekonden',
            m : 'ien minút',
            mm : '%d minuten',
            h : 'ien oere',
            hh : '%d oeren',
            d : 'ien dei',
            dd : '%d dagen',
            M : 'ien moanne',
            MM : '%d moannen',
            y : 'ien jier',
            yy : '%d jierren'
        },
        ordinalParse: /\d{1,2}(ste|de)/,
        ordinal : function (number) {
            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var gd__months = [
        'Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'
    ];

    var gd__monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];

    var gd__weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];

    var weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];

    var weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];

    var gd = moment__default.defineLocale('gd', {
        months : gd__months,
        monthsShort : gd__monthsShort,
        monthsParseExact : true,
        weekdays : gd__weekdays,
        weekdaysShort : weekdaysShort,
        weekdaysMin : weekdaysMin,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[An-diugh aig] LT',
            nextDay : '[A-màireach aig] LT',
            nextWeek : 'dddd [aig] LT',
            lastDay : '[An-dè aig] LT',
            lastWeek : 'dddd [seo chaidh] [aig] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'ann an %s',
            past : 'bho chionn %s',
            s : 'beagan diogan',
            m : 'mionaid',
            mm : '%d mionaidean',
            h : 'uair',
            hh : '%d uairean',
            d : 'latha',
            dd : '%d latha',
            M : 'mìos',
            MM : '%d mìosan',
            y : 'bliadhna',
            yy : '%d bliadhna'
        },
        ordinalParse : /\d{1,2}(d|na|mh)/,
        ordinal : function (number) {
            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var gl = moment__default.defineLocale('gl', {
        months : 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),
        monthsShort : 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays : 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),
        weekdaysShort : 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
        weekdaysMin : 'do_lu_ma_mé_xo_ve_sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY H:mm',
            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
        },
        calendar : {
            sameDay : function () {
                return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
            },
            nextDay : function () {
                return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
            },
            lastDay : function () {
                return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';
            },
            lastWeek : function () {
                return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : function (str) {
                if (str.indexOf('un') === 0) {
                    return 'n' + str;
                }
                return 'en ' + str;
            },
            past : 'hai %s',
            s : 'uns segundos',
            m : 'un minuto',
            mm : '%d minutos',
            h : 'unha hora',
            hh : '%d horas',
            d : 'un día',
            dd : '%d días',
            M : 'un mes',
            MM : '%d meses',
            y : 'un ano',
            yy : '%d anos'
        },
        ordinalParse : /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var he = moment__default.defineLocale('he', {
        months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),
        monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
        weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
        weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
        weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [ב]MMMM YYYY',
            LLL : 'D [ב]MMMM YYYY HH:mm',
            LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',
            l : 'D/M/YYYY',
            ll : 'D MMM YYYY',
            lll : 'D MMM YYYY HH:mm',
            llll : 'ddd, D MMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[היום ב־]LT',
            nextDay : '[מחר ב־]LT',
            nextWeek : 'dddd [בשעה] LT',
            lastDay : '[אתמול ב־]LT',
            lastWeek : '[ביום] dddd [האחרון בשעה] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'בעוד %s',
            past : 'לפני %s',
            s : 'מספר שניות',
            m : 'דקה',
            mm : '%d דקות',
            h : 'שעה',
            hh : function (number) {
                if (number === 2) {
                    return 'שעתיים';
                }
                return number + ' שעות';
            },
            d : 'יום',
            dd : function (number) {
                if (number === 2) {
                    return 'יומיים';
                }
                return number + ' ימים';
            },
            M : 'חודש',
            MM : function (number) {
                if (number === 2) {
                    return 'חודשיים';
                }
                return number + ' חודשים';
            },
            y : 'שנה',
            yy : function (number) {
                if (number === 2) {
                    return 'שנתיים';
                } else if (number % 10 === 0 && number !== 10) {
                    return number + ' שנה';
                }
                return number + ' שנים';
            }
        },
        meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
        isPM : function (input) {
            return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 5) {
                return 'לפנות בוקר';
            } else if (hour < 10) {
                return 'בבוקר';
            } else if (hour < 12) {
                return isLower ? 'לפנה"צ' : 'לפני הצהריים';
            } else if (hour < 18) {
                return isLower ? 'אחה"צ' : 'אחרי הצהריים';
            } else {
                return 'בערב';
            }
        }
    });


    var hi__symbolMap = {
        '1': '१',
        '2': '२',
        '3': '३',
        '4': '४',
        '5': '५',
        '6': '६',
        '7': '७',
        '8': '८',
        '9': '९',
        '0': '०'
    },
    hi__numberMap = {
        '१': '1',
        '२': '2',
        '३': '3',
        '४': '4',
        '५': '5',
        '६': '6',
        '७': '7',
        '८': '8',
        '९': '9',
        '०': '0'
    };

    var hi = moment__default.defineLocale('hi', {
        months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),
        monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
        monthsParseExact: true,
        weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
        weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
        longDateFormat : {
            LT : 'A h:mm बजे',
            LTS : 'A h:mm:ss बजे',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm बजे',
            LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'
        },
        calendar : {
            sameDay : '[आज] LT',
            nextDay : '[कल] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[कल] LT',
            lastWeek : '[पिछले] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s में',
            past : '%s पहले',
            s : 'कुछ ही क्षण',
            m : 'एक मिनट',
            mm : '%d मिनट',
            h : 'एक घंटा',
            hh : '%d घंटे',
            d : 'एक दिन',
            dd : '%d दिन',
            M : 'एक महीने',
            MM : '%d महीने',
            y : 'एक वर्ष',
            yy : '%d वर्ष'
        },
        preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return hi__numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return hi__symbolMap[match];
            });
        },
        // Hindi notation for meridiems are quite fuzzy in practice. While there exists
        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
        meridiemParse: /रात|सुबह|दोपहर|शाम/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'रात') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'सुबह') {
                return hour;
            } else if (meridiem === 'दोपहर') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'शाम') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'रात';
            } else if (hour < 10) {
                return 'सुबह';
            } else if (hour < 17) {
                return 'दोपहर';
            } else if (hour < 20) {
                return 'शाम';
            } else {
                return 'रात';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 1st is the first week of the year.
        }
    });


    function hr__translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'm':
                return withoutSuffix ? 'jedna minuta' : 'jedne minute';
            case 'mm':
                if (number === 1) {
                    result += 'minuta';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'minute';
                } else {
                    result += 'minuta';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'jedan sat' : 'jednog sata';
            case 'hh':
                if (number === 1) {
                    result += 'sat';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sata';
                } else {
                    result += 'sati';
                }
                return result;
            case 'dd':
                if (number === 1) {
                    result += 'dan';
                } else {
                    result += 'dana';
                }
                return result;
            case 'MM':
                if (number === 1) {
                    result += 'mjesec';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'mjeseca';
                } else {
                    result += 'mjeseci';
                }
                return result;
            case 'yy':
                if (number === 1) {
                    result += 'godina';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'godine';
                } else {
                    result += 'godina';
                }
                return result;
        }
    }

    var hr = moment__default.defineLocale('hr', {
        months : {
            format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),
            standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')
        },
        monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),
        monthsParseExact: true,
        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd, D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay  : '[danas u] LT',
            nextDay  : '[sutra u] LT',
            nextWeek : function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay  : '[jučer u] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                        return '[prošlu] dddd [u] LT';
                    case 6:
                        return '[prošle] [subote] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prošli] dddd [u] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'za %s',
            past   : 'prije %s',
            s      : 'par sekundi',
            m      : hr__translate,
            mm     : hr__translate,
            h      : hr__translate,
            hh     : hr__translate,
            d      : 'dan',
            dd     : hr__translate,
            M      : 'mjesec',
            MM     : hr__translate,
            y      : 'godinu',
            yy     : hr__translate
        },
        ordinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');
    function hu__translate(number, withoutSuffix, key, isFuture) {
        var num = number,
            suffix;
        switch (key) {
            case 's':
                return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';
            case 'm':
                return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
            case 'mm':
                return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
            case 'h':
                return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
            case 'hh':
                return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
            case 'd':
                return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
            case 'dd':
                return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
            case 'M':
                return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
            case 'MM':
                return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
            case 'y':
                return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
            case 'yy':
                return num + (isFuture || withoutSuffix ? ' év' : ' éve');
        }
        return '';
    }
    function week(isFuture) {
        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';
    }

    var hu = moment__default.defineLocale('hu', {
        months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
        monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),
        weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
        weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
        weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'YYYY.MM.DD.',
            LL : 'YYYY. MMMM D.',
            LLL : 'YYYY. MMMM D. H:mm',
            LLLL : 'YYYY. MMMM D., dddd H:mm'
        },
        meridiemParse: /de|du/i,
        isPM: function (input) {
            return input.charAt(1).toLowerCase() === 'u';
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower === true ? 'de' : 'DE';
            } else {
                return isLower === true ? 'du' : 'DU';
            }
        },
        calendar : {
            sameDay : '[ma] LT[-kor]',
            nextDay : '[holnap] LT[-kor]',
            nextWeek : function () {
                return week.call(this, true);
            },
            lastDay : '[tegnap] LT[-kor]',
            lastWeek : function () {
                return week.call(this, false);
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s múlva',
            past : '%s',
            s : hu__translate,
            m : hu__translate,
            mm : hu__translate,
            h : hu__translate,
            hh : hu__translate,
            d : hu__translate,
            dd : hu__translate,
            M : hu__translate,
            MM : hu__translate,
            y : hu__translate,
            yy : hu__translate
        },
        ordinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var hy_am = moment__default.defineLocale('hy-am', {
        months : {
            format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),
            standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')
        },
        monthsShort : 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
        weekdays : 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),
        weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
        weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY թ.',
            LLL : 'D MMMM YYYY թ., HH:mm',
            LLLL : 'dddd, D MMMM YYYY թ., HH:mm'
        },
        calendar : {
            sameDay: '[այսօր] LT',
            nextDay: '[վաղը] LT',
            lastDay: '[երեկ] LT',
            nextWeek: function () {
                return 'dddd [օրը ժամը] LT';
            },
            lastWeek: function () {
                return '[անցած] dddd [օրը ժամը] LT';
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : '%s հետո',
            past : '%s առաջ',
            s : 'մի քանի վայրկյան',
            m : 'րոպե',
            mm : '%d րոպե',
            h : 'ժամ',
            hh : '%d ժամ',
            d : 'օր',
            dd : '%d օր',
            M : 'ամիս',
            MM : '%d ամիս',
            y : 'տարի',
            yy : '%d տարի'
        },
        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
        isPM: function (input) {
            return /^(ցերեկվա|երեկոյան)$/.test(input);
        },
        meridiem : function (hour) {
            if (hour < 4) {
                return 'գիշերվա';
            } else if (hour < 12) {
                return 'առավոտվա';
            } else if (hour < 17) {
                return 'ցերեկվա';
            } else {
                return 'երեկոյան';
            }
        },
        ordinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'DDD':
                case 'w':
                case 'W':
                case 'DDDo':
                    if (number === 1) {
                        return number + '-ին';
                    }
                    return number + '-րդ';
                default:
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var id = moment__default.defineLocale('id', {
        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),
        weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
        weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [pukul] HH.mm',
            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /pagi|siang|sore|malam/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'siang') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'sore' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'siang';
            } else if (hours < 19) {
                return 'sore';
            } else {
                return 'malam';
            }
        },
        calendar : {
            sameDay : '[Hari ini pukul] LT',
            nextDay : '[Besok pukul] LT',
            nextWeek : 'dddd [pukul] LT',
            lastDay : '[Kemarin pukul] LT',
            lastWeek : 'dddd [lalu pukul] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dalam %s',
            past : '%s yang lalu',
            s : 'beberapa detik',
            m : 'semenit',
            mm : '%d menit',
            h : 'sejam',
            hh : '%d jam',
            d : 'sehari',
            dd : '%d hari',
            M : 'sebulan',
            MM : '%d bulan',
            y : 'setahun',
            yy : '%d tahun'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });


    function is__plural(n) {
        if (n % 100 === 11) {
            return true;
        } else if (n % 10 === 1) {
            return false;
        }
        return true;
    }
    function is__translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':
                return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
            case 'm':
                return withoutSuffix ? 'mínúta' : 'mínútu';
            case 'mm':
                if (is__plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');
                } else if (withoutSuffix) {
                    return result + 'mínúta';
                }
                return result + 'mínútu';
            case 'hh':
                if (is__plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');
                }
                return result + 'klukkustund';
            case 'd':
                if (withoutSuffix) {
                    return 'dagur';
                }
                return isFuture ? 'dag' : 'degi';
            case 'dd':
                if (is__plural(number)) {
                    if (withoutSuffix) {
                        return result + 'dagar';
                    }
                    return result + (isFuture ? 'daga' : 'dögum');
                } else if (withoutSuffix) {
                    return result + 'dagur';
                }
                return result + (isFuture ? 'dag' : 'degi');
            case 'M':
                if (withoutSuffix) {
                    return 'mánuður';
                }
                return isFuture ? 'mánuð' : 'mánuði';
            case 'MM':
                if (is__plural(number)) {
                    if (withoutSuffix) {
                        return result + 'mánuðir';
                    }
                    return result + (isFuture ? 'mánuði' : 'mánuðum');
                } else if (withoutSuffix) {
                    return result + 'mánuður';
                }
                return result + (isFuture ? 'mánuð' : 'mánuði');
            case 'y':
                return withoutSuffix || isFuture ? 'ár' : 'ári';
            case 'yy':
                if (is__plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
                }
                return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
        }
    }

    var is = moment__default.defineLocale('is', {
        months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),
        monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
        weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),
        weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
        weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY [kl.] H:mm',
            LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'
        },
        calendar : {
            sameDay : '[í dag kl.] LT',
            nextDay : '[á morgun kl.] LT',
            nextWeek : 'dddd [kl.] LT',
            lastDay : '[í gær kl.] LT',
            lastWeek : '[síðasta] dddd [kl.] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'eftir %s',
            past : 'fyrir %s síðan',
            s : is__translate,
            m : is__translate,
            mm : is__translate,
            h : 'klukkustund',
            hh : is__translate,
            d : is__translate,
            dd : is__translate,
            M : is__translate,
            MM : is__translate,
            y : is__translate,
            yy : is__translate
        },
        ordinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var it = moment__default.defineLocale('it', {
        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
        weekdays : 'Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato'.split('_'),
        weekdaysShort : 'Dom_Lun_Mar_Mer_Gio_Ven_Sab'.split('_'),
        weekdaysMin : 'Do_Lu_Ma_Me_Gi_Ve_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Oggi alle] LT',
            nextDay: '[Domani alle] LT',
            nextWeek: 'dddd [alle] LT',
            lastDay: '[Ieri alle] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[la scorsa] dddd [alle] LT';
                    default:
                        return '[lo scorso] dddd [alle] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : function (s) {
                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
            },
            past : '%s fa',
            s : 'alcuni secondi',
            m : 'un minuto',
            mm : '%d minuti',
            h : 'un\'ora',
            hh : '%d ore',
            d : 'un giorno',
            dd : '%d giorni',
            M : 'un mese',
            MM : '%d mesi',
            y : 'un anno',
            yy : '%d anni'
        },
        ordinalParse : /\d{1,2}º/,
        ordinal: '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var ja = moment__default.defineLocale('ja', {
        months : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
        weekdaysShort : '日_月_火_水_木_金_土'.split('_'),
        weekdaysMin : '日_月_火_水_木_金_土'.split('_'),
        longDateFormat : {
            LT : 'Ah時m分',
            LTS : 'Ah時m分s秒',
            L : 'YYYY/MM/DD',
            LL : 'YYYY年M月D日',
            LLL : 'YYYY年M月D日Ah時m分',
            LLLL : 'YYYY年M月D日Ah時m分 dddd'
        },
        meridiemParse: /午前|午後/i,
        isPM : function (input) {
            return input === '午後';
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return '午前';
            } else {
                return '午後';
            }
        },
        calendar : {
            sameDay : '[今日] LT',
            nextDay : '[明日] LT',
            nextWeek : '[来週]dddd LT',
            lastDay : '[昨日] LT',
            lastWeek : '[前週]dddd LT',
            sameElse : 'L'
        },
        ordinalParse : /\d{1,2}日/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '日';
                default:
                    return number;
            }
        },
        relativeTime : {
            future : '%s後',
            past : '%s前',
            s : '数秒',
            m : '1分',
            mm : '%d分',
            h : '1時間',
            hh : '%d時間',
            d : '1日',
            dd : '%d日',
            M : '1ヶ月',
            MM : '%dヶ月',
            y : '1年',
            yy : '%d年'
        }
    });


    var jv = moment__default.defineLocale('jv', {
        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
        weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
        weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [pukul] HH.mm',
            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /enjing|siyang|sonten|ndalu/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'enjing') {
                return hour;
            } else if (meridiem === 'siyang') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
                return hour + 12;
            }
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'enjing';
            } else if (hours < 15) {
                return 'siyang';
            } else if (hours < 19) {
                return 'sonten';
            } else {
                return 'ndalu';
            }
        },
        calendar : {
            sameDay : '[Dinten puniko pukul] LT',
            nextDay : '[Mbenjang pukul] LT',
            nextWeek : 'dddd [pukul] LT',
            lastDay : '[Kala wingi pukul] LT',
            lastWeek : 'dddd [kepengker pukul] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'wonten ing %s',
            past : '%s ingkang kepengker',
            s : 'sawetawis detik',
            m : 'setunggal menit',
            mm : '%d menit',
            h : 'setunggal jam',
            hh : '%d jam',
            d : 'sedinten',
            dd : '%d dinten',
            M : 'sewulan',
            MM : '%d wulan',
            y : 'setaun',
            yy : '%d taun'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var ka = moment__default.defineLocale('ka', {
        months : {
            standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
            format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')
        },
        monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
        weekdays : {
            standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
            format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),
            isFormat: /(წინა|შემდეგ)/
        },
        weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
        weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[დღეს] LT[-ზე]',
            nextDay : '[ხვალ] LT[-ზე]',
            lastDay : '[გუშინ] LT[-ზე]',
            nextWeek : '[შემდეგ] dddd LT[-ზე]',
            lastWeek : '[წინა] dddd LT-ზე',
            sameElse : 'L'
        },
        relativeTime : {
            future : function (s) {
                return (/(წამი|წუთი|საათი|წელი)/).test(s) ?
                    s.replace(/ი$/, 'ში') :
                    s + 'ში';
            },
            past : function (s) {
                if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {
                    return s.replace(/(ი|ე)$/, 'ის წინ');
                }
                if ((/წელი/).test(s)) {
                    return s.replace(/წელი$/, 'წლის წინ');
                }
            },
            s : 'რამდენიმე წამი',
            m : 'წუთი',
            mm : '%d წუთი',
            h : 'საათი',
            hh : '%d საათი',
            d : 'დღე',
            dd : '%d დღე',
            M : 'თვე',
            MM : '%d თვე',
            y : 'წელი',
            yy : '%d წელი'
        },
        ordinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
        ordinal : function (number) {
            if (number === 0) {
                return number;
            }
            if (number === 1) {
                return number + '-ლი';
            }
            if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {
                return 'მე-' + number;
            }
            return number + '-ე';
        },
        week : {
            dow : 1,
            doy : 7
        }
    });


    var kk__suffixes = {
        0: '-ші',
        1: '-ші',
        2: '-ші',
        3: '-ші',
        4: '-ші',
        5: '-ші',
        6: '-шы',
        7: '-ші',
        8: '-ші',
        9: '-шы',
        10: '-шы',
        20: '-шы',
        30: '-шы',
        40: '-шы',
        50: '-ші',
        60: '-шы',
        70: '-ші',
        80: '-ші',
        90: '-шы',
        100: '-ші'
    };

    var kk = moment__default.defineLocale('kk', {
        months : 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),
        monthsShort : 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
        weekdays : 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),
        weekdaysShort : 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
        weekdaysMin : 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Бүгін сағат] LT',
            nextDay : '[Ертең сағат] LT',
            nextWeek : 'dddd [сағат] LT',
            lastDay : '[Кеше сағат] LT',
            lastWeek : '[Өткен аптаның] dddd [сағат] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ішінде',
            past : '%s бұрын',
            s : 'бірнеше секунд',
            m : 'бір минут',
            mm : '%d минут',
            h : 'бір сағат',
            hh : '%d сағат',
            d : 'бір күн',
            dd : '%d күн',
            M : 'бір ай',
            MM : '%d ай',
            y : 'бір жыл',
            yy : '%d жыл'
        },
        ordinalParse: /\d{1,2}-(ші|шы)/,
        ordinal : function (number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (kk__suffixes[number] || kk__suffixes[a] || kk__suffixes[b]);
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var km = moment__default.defineLocale('km', {
        months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
        monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
        weekdaysShort: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
        weekdaysMin: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS : 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
            nextDay: '[ស្អែក ម៉ោង] LT',
            nextWeek: 'dddd [ម៉ោង] LT',
            lastDay: '[ម្សិលមិញ ម៉ោង] LT',
            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%sទៀត',
            past: '%sមុន',
            s: 'ប៉ុន្មានវិនាទី',
            m: 'មួយនាទី',
            mm: '%d នាទី',
            h: 'មួយម៉ោង',
            hh: '%d ម៉ោង',
            d: 'មួយថ្ងៃ',
            dd: '%d ថ្ងៃ',
            M: 'មួយខែ',
            MM: '%d ខែ',
            y: 'មួយឆ្នាំ',
            yy: '%d ឆ្នាំ'
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
        }
    });


    var ko = moment__default.defineLocale('ko', {
        months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
        monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
        weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
        weekdaysShort : '일_월_화_수_목_금_토'.split('_'),
        weekdaysMin : '일_월_화_수_목_금_토'.split('_'),
        longDateFormat : {
            LT : 'A h시 m분',
            LTS : 'A h시 m분 s초',
            L : 'YYYY.MM.DD',
            LL : 'YYYY년 MMMM D일',
            LLL : 'YYYY년 MMMM D일 A h시 m분',
            LLLL : 'YYYY년 MMMM D일 dddd A h시 m분'
        },
        calendar : {
            sameDay : '오늘 LT',
            nextDay : '내일 LT',
            nextWeek : 'dddd LT',
            lastDay : '어제 LT',
            lastWeek : '지난주 dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s 후',
            past : '%s 전',
            s : '몇 초',
            ss : '%d초',
            m : '일분',
            mm : '%d분',
            h : '한 시간',
            hh : '%d시간',
            d : '하루',
            dd : '%d일',
            M : '한 달',
            MM : '%d달',
            y : '일 년',
            yy : '%d년'
        },
        ordinalParse : /\d{1,2}일/,
        ordinal : '%d일',
        meridiemParse : /오전|오후/,
        isPM : function (token) {
            return token === '오후';
        },
        meridiem : function (hour, minute, isUpper) {
            return hour < 12 ? '오전' : '오후';
        }
    });



    var ky__suffixes = {
        0: '-чү',
        1: '-чи',
        2: '-чи',
        3: '-чү',
        4: '-чү',
        5: '-чи',
        6: '-чы',
        7: '-чи',
        8: '-чи',
        9: '-чу',
        10: '-чу',
        20: '-чы',
        30: '-чу',
        40: '-чы',
        50: '-чү',
        60: '-чы',
        70: '-чи',
        80: '-чи',
        90: '-чу',
        100: '-чү'
    };

    var ky = moment__default.defineLocale('ky', {
        months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
        monthsShort : 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
        weekdays : 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),
        weekdaysShort : 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
        weekdaysMin : 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Бүгүн саат] LT',
            nextDay : '[Эртең саат] LT',
            nextWeek : 'dddd [саат] LT',
            lastDay : '[Кече саат] LT',
            lastWeek : '[Өткен аптанын] dddd [күнү] [саат] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ичинде',
            past : '%s мурун',
            s : 'бирнече секунд',
            m : 'бир мүнөт',
            mm : '%d мүнөт',
            h : 'бир саат',
            hh : '%d саат',
            d : 'бир күн',
            dd : '%d күн',
            M : 'бир ай',
            MM : '%d ай',
            y : 'бир жыл',
            yy : '%d жыл'
        },
        ordinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
        ordinal : function (number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (ky__suffixes[number] || ky__suffixes[a] || ky__suffixes[b]);
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });


    function lb__processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eng Minutt', 'enger Minutt'],
            'h': ['eng Stonn', 'enger Stonn'],
            'd': ['een Dag', 'engem Dag'],
            'M': ['ee Mount', 'engem Mount'],
            'y': ['ee Joer', 'engem Joer']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }
    function processFutureTime(string) {
        var number = string.substr(0, string.indexOf(' '));
        if (eifelerRegelAppliesToNumber(number)) {
            return 'a ' + string;
        }
        return 'an ' + string;
    }
    function processPastTime(string) {
        var number = string.substr(0, string.indexOf(' '));
        if (eifelerRegelAppliesToNumber(number)) {
            return 'viru ' + string;
        }
        return 'virun ' + string;
    }
    /**
     * Returns true if the word before the given number loses the '-n' ending.
     * e.g. 'an 10 Deeg' but 'a 5 Deeg'
     *
     * @param number {integer}
     * @returns {boolean}
     */
    function eifelerRegelAppliesToNumber(number) {
        number = parseInt(number, 10);
        if (isNaN(number)) {
            return false;
        }
        if (number < 0) {
            // Negative Number --> always true
            return true;
        } else if (number < 10) {
            // Only 1 digit
            if (4 <= number && number <= 7) {
                return true;
            }
            return false;
        } else if (number < 100) {
            // 2 digits
            var lastDigit = number % 10, firstDigit = number / 10;
            if (lastDigit === 0) {
                return eifelerRegelAppliesToNumber(firstDigit);
            }
            return eifelerRegelAppliesToNumber(lastDigit);
        } else if (number < 10000) {
            // 3 or 4 digits --> recursively check first digit
            while (number >= 10) {
                number = number / 10;
            }
            return eifelerRegelAppliesToNumber(number);
        } else {
            // Anything larger than 4 digits: recursively check first n-3 digits
            number = number / 1000;
            return eifelerRegelAppliesToNumber(number);
        }
    }

    var lb = moment__default.defineLocale('lb', {
        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'H:mm [Auer]',
            LTS: 'H:mm:ss [Auer]',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm [Auer]',
            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'
        },
        calendar: {
            sameDay: '[Haut um] LT',
            sameElse: 'L',
            nextDay: '[Muer um] LT',
            nextWeek: 'dddd [um] LT',
            lastDay: '[Gëschter um] LT',
            lastWeek: function () {
                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
                switch (this.day()) {
                    case 2:
                    case 4:
                        return '[Leschten] dddd [um] LT';
                    default:
                        return '[Leschte] dddd [um] LT';
                }
            }
        },
        relativeTime : {
            future : processFutureTime,
            past : processPastTime,
            s : 'e puer Sekonnen',
            m : lb__processRelativeTime,
            mm : '%d Minutten',
            h : lb__processRelativeTime,
            hh : '%d Stonnen',
            d : lb__processRelativeTime,
            dd : '%d Deeg',
            M : lb__processRelativeTime,
            MM : '%d Méint',
            y : lb__processRelativeTime,
            yy : '%d Joer'
        },
        ordinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var lo = moment__default.defineLocale('lo', {
        months : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
        monthsShort : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
        weekdays : 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
        weekdaysShort : 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
        weekdaysMin : 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'ວັນdddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
        isPM: function (input) {
            return input === 'ຕອນແລງ';
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ຕອນເຊົ້າ';
            } else {
                return 'ຕອນແລງ';
            }
        },
        calendar : {
            sameDay : '[ມື້ນີ້ເວລາ] LT',
            nextDay : '[ມື້ອື່ນເວລາ] LT',
            nextWeek : '[ວັນ]dddd[ໜ້າເວລາ] LT',
            lastDay : '[ມື້ວານນີ້ເວລາ] LT',
            lastWeek : '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'ອີກ %s',
            past : '%sຜ່ານມາ',
            s : 'ບໍ່ເທົ່າໃດວິນາທີ',
            m : '1 ນາທີ',
            mm : '%d ນາທີ',
            h : '1 ຊົ່ວໂມງ',
            hh : '%d ຊົ່ວໂມງ',
            d : '1 ມື້',
            dd : '%d ມື້',
            M : '1 ເດືອນ',
            MM : '%d ເດືອນ',
            y : '1 ປີ',
            yy : '%d ປີ'
        },
        ordinalParse: /(ທີ່)\d{1,2}/,
        ordinal : function (number) {
            return 'ທີ່' + number;
        }
    });


    var lt__units = {
        'm' : 'minutė_minutės_minutę',
        'mm': 'minutės_minučių_minutes',
        'h' : 'valanda_valandos_valandą',
        'hh': 'valandos_valandų_valandas',
        'd' : 'diena_dienos_dieną',
        'dd': 'dienos_dienų_dienas',
        'M' : 'mėnuo_mėnesio_mėnesį',
        'MM': 'mėnesiai_mėnesių_mėnesius',
        'y' : 'metai_metų_metus',
        'yy': 'metai_metų_metus'
    };
    function translateSeconds(number, withoutSuffix, key, isFuture) {
        if (withoutSuffix) {
            return 'kelios sekundės';
        } else {
            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
        }
    }
    function translateSingular(number, withoutSuffix, key, isFuture) {
        return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);
    }
    function special(number) {
        return number % 10 === 0 || (number > 10 && number < 20);
    }
    function forms(key) {
        return lt__units[key].split('_');
    }
    function lt__translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        if (number === 1) {
            return result + translateSingular(number, withoutSuffix, key[0], isFuture);
        } else if (withoutSuffix) {
            return result + (special(number) ? forms(key)[1] : forms(key)[0]);
        } else {
            if (isFuture) {
                return result + forms(key)[1];
            } else {
                return result + (special(number) ? forms(key)[1] : forms(key)[2]);
            }
        }
    }
    var lt = moment__default.defineLocale('lt', {
        months : {
            format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),
            standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),
            isFormat: /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?|MMMM?(\[[^\[\]]*\]|\s+)+D[oD]?/
        },
        monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
        weekdays : {
            format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),
            standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),
            isFormat: /dddd HH:mm/
        },
        weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
        weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'YYYY [m.] MMMM D [d.]',
            LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
            LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
            l : 'YYYY-MM-DD',
            ll : 'YYYY [m.] MMMM D [d.]',
            lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
            llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'
        },
        calendar : {
            sameDay : '[Šiandien] LT',
            nextDay : '[Rytoj] LT',
            nextWeek : 'dddd LT',
            lastDay : '[Vakar] LT',
            lastWeek : '[Praėjusį] dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'po %s',
            past : 'prieš %s',
            s : translateSeconds,
            m : translateSingular,
            mm : lt__translate,
            h : translateSingular,
            hh : lt__translate,
            d : translateSingular,
            dd : lt__translate,
            M : translateSingular,
            MM : lt__translate,
            y : translateSingular,
            yy : lt__translate
        },
        ordinalParse: /\d{1,2}-oji/,
        ordinal : function (number) {
            return number + '-oji';
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var lv__units = {
        'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
        'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
        'h': 'stundas_stundām_stunda_stundas'.split('_'),
        'hh': 'stundas_stundām_stunda_stundas'.split('_'),
        'd': 'dienas_dienām_diena_dienas'.split('_'),
        'dd': 'dienas_dienām_diena_dienas'.split('_'),
        'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
        'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
        'y': 'gada_gadiem_gads_gadi'.split('_'),
        'yy': 'gada_gadiem_gads_gadi'.split('_')
    };
    /**
     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
     */
    function lv__format(forms, number, withoutSuffix) {
        if (withoutSuffix) {
            // E.g. "21 minūte", "3 minūtes".
            return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];
        } else {
            // E.g. "21 minūtes" as in "pēc 21 minūtes".
            // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
            return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];
        }
    }
    function lv__relativeTimeWithPlural(number, withoutSuffix, key) {
        return number + ' ' + lv__format(lv__units[key], number, withoutSuffix);
    }
    function relativeTimeWithSingular(number, withoutSuffix, key) {
        return lv__format(lv__units[key], number, withoutSuffix);
    }
    function relativeSeconds(number, withoutSuffix) {
        return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
    }

    var lv = moment__default.defineLocale('lv', {
        months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),
        monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
        weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),
        weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),
        weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY.',
            LL : 'YYYY. [gada] D. MMMM',
            LLL : 'YYYY. [gada] D. MMMM, HH:mm',
            LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'
        },
        calendar : {
            sameDay : '[Šodien pulksten] LT',
            nextDay : '[Rīt pulksten] LT',
            nextWeek : 'dddd [pulksten] LT',
            lastDay : '[Vakar pulksten] LT',
            lastWeek : '[Pagājušā] dddd [pulksten] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'pēc %s',
            past : 'pirms %s',
            s : relativeSeconds,
            m : relativeTimeWithSingular,
            mm : lv__relativeTimeWithPlural,
            h : relativeTimeWithSingular,
            hh : lv__relativeTimeWithPlural,
            d : relativeTimeWithSingular,
            dd : lv__relativeTimeWithPlural,
            M : relativeTimeWithSingular,
            MM : lv__relativeTimeWithPlural,
            y : relativeTimeWithSingular,
            yy : lv__relativeTimeWithPlural
        },
        ordinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var me__translator = {
        words: { //Different grammatical cases
            m: ['jedan minut', 'jednog minuta'],
            mm: ['minut', 'minuta', 'minuta'],
            h: ['jedan sat', 'jednog sata'],
            hh: ['sat', 'sata', 'sati'],
            dd: ['dan', 'dana', 'dana'],
            MM: ['mjesec', 'mjeseca', 'mjeseci'],
            yy: ['godina', 'godine', 'godina']
        },
        correctGrammaticalCase: function (number, wordKey) {
            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
        },
        translate: function (number, withoutSuffix, key) {
            var wordKey = me__translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return number + ' ' + me__translator.correctGrammaticalCase(number, wordKey);
            }
        }
    };

    var me = moment__default.defineLocale('me', {
        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
        monthsParseExact : true,
        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sjutra u] LT',

            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay  : '[juče u] LT',
            lastWeek : function () {
                var lastWeekDays = [
                    '[prošle] [nedjelje] [u] LT',
                    '[prošlog] [ponedjeljka] [u] LT',
                    '[prošlog] [utorka] [u] LT',
                    '[prošle] [srijede] [u] LT',
                    '[prošlog] [četvrtka] [u] LT',
                    '[prošlog] [petka] [u] LT',
                    '[prošle] [subote] [u] LT'
                ];
                return lastWeekDays[this.day()];
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'za %s',
            past   : 'prije %s',
            s      : 'nekoliko sekundi',
            m      : me__translator.translate,
            mm     : me__translator.translate,
            h      : me__translator.translate,
            hh     : me__translator.translate,
            d      : 'dan',
            dd     : me__translator.translate,
            M      : 'mjesec',
            MM     : me__translator.translate,
            y      : 'godinu',
            yy     : me__translator.translate
        },
        ordinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var mi = moment__default.defineLocale('mi', {
        months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),
        monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),
        monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
        weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),
        weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
        weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [i] HH:mm',
            LLLL: 'dddd, D MMMM YYYY [i] HH:mm'
        },
        calendar: {
            sameDay: '[i teie mahana, i] LT',
            nextDay: '[apopo i] LT',
            nextWeek: 'dddd [i] LT',
            lastDay: '[inanahi i] LT',
            lastWeek: 'dddd [whakamutunga i] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'i roto i %s',
            past: '%s i mua',
            s: 'te hēkona ruarua',
            m: 'he meneti',
            mm: '%d meneti',
            h: 'te haora',
            hh: '%d haora',
            d: 'he ra',
            dd: '%d ra',
            M: 'he marama',
            MM: '%d marama',
            y: 'he tau',
            yy: '%d tau'
        },
        ordinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var mk = moment__default.defineLocale('mk', {
        months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),
        monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
        weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),
        weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
        weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'D.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY H:mm',
            LLLL : 'dddd, D MMMM YYYY H:mm'
        },
        calendar : {
            sameDay : '[Денес во] LT',
            nextDay : '[Утре во] LT',
            nextWeek : '[Во] dddd [во] LT',
            lastDay : '[Вчера во] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 6:
                        return '[Изминатата] dddd [во] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[Изминатиот] dddd [во] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'после %s',
            past : 'пред %s',
            s : 'неколку секунди',
            m : 'минута',
            mm : '%d минути',
            h : 'час',
            hh : '%d часа',
            d : 'ден',
            dd : '%d дена',
            M : 'месец',
            MM : '%d месеци',
            y : 'година',
            yy : '%d години'
        },
        ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
        ordinal : function (number) {
            var lastDigit = number % 10,
                last2Digits = number % 100;
            if (number === 0) {
                return number + '-ев';
            } else if (last2Digits === 0) {
                return number + '-ен';
            } else if (last2Digits > 10 && last2Digits < 20) {
                return number + '-ти';
            } else if (lastDigit === 1) {
                return number + '-ви';
            } else if (lastDigit === 2) {
                return number + '-ри';
            } else if (lastDigit === 7 || lastDigit === 8) {
                return number + '-ми';
            } else {
                return number + '-ти';
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var ml = moment__default.defineLocale('ml', {
        months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),
        monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),
        monthsParseExact : true,
        weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),
        weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
        weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
        longDateFormat : {
            LT : 'A h:mm -നു',
            LTS : 'A h:mm:ss -നു',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm -നു',
            LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'
        },
        calendar : {
            sameDay : '[ഇന്ന്] LT',
            nextDay : '[നാളെ] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[ഇന്നലെ] LT',
            lastWeek : '[കഴിഞ്ഞ] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s കഴിഞ്ഞ്',
            past : '%s മുൻപ്',
            s : 'അൽപ നിമിഷങ്ങൾ',
            m : 'ഒരു മിനിറ്റ്',
            mm : '%d മിനിറ്റ്',
            h : 'ഒരു മണിക്കൂർ',
            hh : '%d മണിക്കൂർ',
            d : 'ഒരു ദിവസം',
            dd : '%d ദിവസം',
            M : 'ഒരു മാസം',
            MM : '%d മാസം',
            y : 'ഒരു വർഷം',
            yy : '%d വർഷം'
        },
        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if ((meridiem === 'രാത്രി' && hour >= 4) ||
                    meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||
                    meridiem === 'വൈകുന്നേരം') {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'രാത്രി';
            } else if (hour < 12) {
                return 'രാവിലെ';
            } else if (hour < 17) {
                return 'ഉച്ച കഴിഞ്ഞ്';
            } else if (hour < 20) {
                return 'വൈകുന്നേരം';
            } else {
                return 'രാത്രി';
            }
        }
    });


    var mr__symbolMap = {
        '1': '१',
        '2': '२',
        '3': '३',
        '4': '४',
        '5': '५',
        '6': '६',
        '7': '७',
        '8': '८',
        '9': '९',
        '0': '०'
    },
    mr__numberMap = {
        '१': '1',
        '२': '2',
        '३': '3',
        '४': '4',
        '५': '5',
        '६': '6',
        '७': '7',
        '८': '8',
        '९': '9',
        '०': '0'
    };

    function relativeTimeMr(number, withoutSuffix, string, isFuture)
    {
        var output = '';
        if (withoutSuffix) {
            switch (string) {
                case 's': output = 'काही सेकंद'; break;
                case 'm': output = 'एक मिनिट'; break;
                case 'mm': output = '%d मिनिटे'; break;
                case 'h': output = 'एक तास'; break;
                case 'hh': output = '%d तास'; break;
                case 'd': output = 'एक दिवस'; break;
                case 'dd': output = '%d दिवस'; break;
                case 'M': output = 'एक महिना'; break;
                case 'MM': output = '%d महिने'; break;
                case 'y': output = 'एक वर्ष'; break;
                case 'yy': output = '%d वर्षे'; break;
            }
        }
        else {
            switch (string) {
                case 's': output = 'काही सेकंदां'; break;
                case 'm': output = 'एका मिनिटा'; break;
                case 'mm': output = '%d मिनिटां'; break;
                case 'h': output = 'एका तासा'; break;
                case 'hh': output = '%d तासां'; break;
                case 'd': output = 'एका दिवसा'; break;
                case 'dd': output = '%d दिवसां'; break;
                case 'M': output = 'एका महिन्या'; break;
                case 'MM': output = '%d महिन्यां'; break;
                case 'y': output = 'एका वर्षा'; break;
                case 'yy': output = '%d वर्षां'; break;
            }
        }
        return output.replace(/%d/i, number);
    }

    var mr = moment__default.defineLocale('mr', {
        months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
        monthsParseExact : true,
        weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
        weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
        longDateFormat : {
            LT : 'A h:mm वाजता',
            LTS : 'A h:mm:ss वाजता',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm वाजता',
            LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'
        },
        calendar : {
            sameDay : '[आज] LT',
            nextDay : '[उद्या] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[काल] LT',
            lastWeek: '[मागील] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future: '%sमध्ये',
            past: '%sपूर्वी',
            s: relativeTimeMr,
            m: relativeTimeMr,
            mm: relativeTimeMr,
            h: relativeTimeMr,
            hh: relativeTimeMr,
            d: relativeTimeMr,
            dd: relativeTimeMr,
            M: relativeTimeMr,
            MM: relativeTimeMr,
            y: relativeTimeMr,
            yy: relativeTimeMr
        },
        preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return mr__numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return mr__symbolMap[match];
            });
        },
        meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'रात्री') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'सकाळी') {
                return hour;
            } else if (meridiem === 'दुपारी') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'सायंकाळी') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'रात्री';
            } else if (hour < 10) {
                return 'सकाळी';
            } else if (hour < 17) {
                return 'दुपारी';
            } else if (hour < 20) {
                return 'सायंकाळी';
            } else {
                return 'रात्री';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var ms_my = moment__default.defineLocale('ms-my', {
        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [pukul] HH.mm',
            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /pagi|tengahari|petang|malam/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'tengahari') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'petang' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'tengahari';
            } else if (hours < 19) {
                return 'petang';
            } else {
                return 'malam';
            }
        },
        calendar : {
            sameDay : '[Hari ini pukul] LT',
            nextDay : '[Esok pukul] LT',
            nextWeek : 'dddd [pukul] LT',
            lastDay : '[Kelmarin pukul] LT',
            lastWeek : 'dddd [lepas pukul] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dalam %s',
            past : '%s yang lepas',
            s : 'beberapa saat',
            m : 'seminit',
            mm : '%d minit',
            h : 'sejam',
            hh : '%d jam',
            d : 'sehari',
            dd : '%d hari',
            M : 'sebulan',
            MM : '%d bulan',
            y : 'setahun',
            yy : '%d tahun'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var locale_ms = moment__default.defineLocale('ms', {
        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [pukul] HH.mm',
            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /pagi|tengahari|petang|malam/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'tengahari') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'petang' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'tengahari';
            } else if (hours < 19) {
                return 'petang';
            } else {
                return 'malam';
            }
        },
        calendar : {
            sameDay : '[Hari ini pukul] LT',
            nextDay : '[Esok pukul] LT',
            nextWeek : 'dddd [pukul] LT',
            lastDay : '[Kelmarin pukul] LT',
            lastWeek : 'dddd [lepas pukul] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dalam %s',
            past : '%s yang lepas',
            s : 'beberapa saat',
            m : 'seminit',
            mm : '%d minit',
            h : 'sejam',
            hh : '%d jam',
            d : 'sehari',
            dd : '%d hari',
            M : 'sebulan',
            MM : '%d bulan',
            y : 'setahun',
            yy : '%d tahun'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var my__symbolMap = {
        '1': '၁',
        '2': '၂',
        '3': '၃',
        '4': '၄',
        '5': '၅',
        '6': '၆',
        '7': '၇',
        '8': '၈',
        '9': '၉',
        '0': '၀'
    }, my__numberMap = {
        '၁': '1',
        '၂': '2',
        '၃': '3',
        '၄': '4',
        '၅': '5',
        '၆': '6',
        '၇': '7',
        '၈': '8',
        '၉': '9',
        '၀': '0'
    };

    var my = moment__default.defineLocale('my', {
        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),
        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),
        weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
        weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),

        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[ယနေ.] LT [မှာ]',
            nextDay: '[မနက်ဖြန်] LT [မှာ]',
            nextWeek: 'dddd LT [မှာ]',
            lastDay: '[မနေ.က] LT [မှာ]',
            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'လာမည့် %s မှာ',
            past: 'လွန်ခဲ့သော %s က',
            s: 'စက္ကန်.အနည်းငယ်',
            m: 'တစ်မိနစ်',
            mm: '%d မိနစ်',
            h: 'တစ်နာရီ',
            hh: '%d နာရီ',
            d: 'တစ်ရက်',
            dd: '%d ရက်',
            M: 'တစ်လ',
            MM: '%d လ',
            y: 'တစ်နှစ်',
            yy: '%d နှစ်'
        },
        preparse: function (string) {
            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
                return my__numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return my__symbolMap[match];
            });
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 1st is the first week of the year.
        }
    });


    var nb = moment__default.defineLocale('nb', {
        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
        monthsShort : 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),
        monthsParseExact : true,
        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
        weekdaysShort : 'sø._ma._ti._on._to._fr._lø.'.split('_'),
        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY [kl.] HH:mm',
            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
        },
        calendar : {
            sameDay: '[i dag kl.] LT',
            nextDay: '[i morgen kl.] LT',
            nextWeek: 'dddd [kl.] LT',
            lastDay: '[i går kl.] LT',
            lastWeek: '[forrige] dddd [kl.] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'om %s',
            past : '%s siden',
            s : 'noen sekunder',
            m : 'ett minutt',
            mm : '%d minutter',
            h : 'en time',
            hh : '%d timer',
            d : 'en dag',
            dd : '%d dager',
            M : 'en måned',
            MM : '%d måneder',
            y : 'ett år',
            yy : '%d år'
        },
        ordinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var ne__symbolMap = {
        '1': '१',
        '2': '२',
        '3': '३',
        '4': '४',
        '5': '५',
        '6': '६',
        '7': '७',
        '8': '८',
        '9': '९',
        '0': '०'
    },
    ne__numberMap = {
        '१': '1',
        '२': '2',
        '३': '3',
        '४': '4',
        '५': '5',
        '६': '6',
        '७': '7',
        '८': '8',
        '९': '9',
        '०': '0'
    };

    var ne = moment__default.defineLocale('ne', {
        months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),
        monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),
        monthsParseExact : true,
        weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),
        weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
        weekdaysMin : 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'Aको h:mm बजे',
            LTS : 'Aको h:mm:ss बजे',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, Aको h:mm बजे',
            LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'
        },
        preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return ne__numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return ne__symbolMap[match];
            });
        },
        meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'राति') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'बिहान') {
                return hour;
            } else if (meridiem === 'दिउँसो') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'साँझ') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 3) {
                return 'राति';
            } else if (hour < 12) {
                return 'बिहान';
            } else if (hour < 16) {
                return 'दिउँसो';
            } else if (hour < 20) {
                return 'साँझ';
            } else {
                return 'राति';
            }
        },
        calendar : {
            sameDay : '[आज] LT',
            nextDay : '[भोलि] LT',
            nextWeek : '[आउँदो] dddd[,] LT',
            lastDay : '[हिजो] LT',
            lastWeek : '[गएको] dddd[,] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%sमा',
            past : '%s अगाडि',
            s : 'केही क्षण',
            m : 'एक मिनेट',
            mm : '%d मिनेट',
            h : 'एक घण्टा',
            hh : '%d घण्टा',
            d : 'एक दिन',
            dd : '%d दिन',
            M : 'एक महिना',
            MM : '%d महिना',
            y : 'एक बर्ष',
            yy : '%d बर्ष'
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var nl__monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
        nl__monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

    var nl__monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
    var nl__monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

    var nl = moment__default.defineLocale('nl', {
        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
        monthsShort : function (m, format) {
            if (/-MMM-/.test(format)) {
                return nl__monthsShortWithoutDots[m.month()];
            } else {
                return nl__monthsShortWithDots[m.month()];
            }
        },

        monthsRegex: nl__monthsRegex,
        monthsShortRegex: nl__monthsRegex,
        monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
        monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

        monthsParse : nl__monthsParse,
        longMonthsParse : nl__monthsParse,
        shortMonthsParse : nl__monthsParse,

        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
        weekdaysMin : 'Zo_Ma_Di_Wo_Do_Vr_Za'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD-MM-YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[vandaag om] LT',
            nextDay: '[morgen om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[gisteren om] LT',
            lastWeek: '[afgelopen] dddd [om] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'over %s',
            past : '%s geleden',
            s : 'een paar seconden',
            m : 'één minuut',
            mm : '%d minuten',
            h : 'één uur',
            hh : '%d uur',
            d : 'één dag',
            dd : '%d dagen',
            M : 'één maand',
            MM : '%d maanden',
            y : 'één jaar',
            yy : '%d jaar'
        },
        ordinalParse: /\d{1,2}(ste|de)/,
        ordinal : function (number) {
            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var nn = moment__default.defineLocale('nn', {
        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
        weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
        weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),
        weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY [kl.] H:mm',
            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
        },
        calendar : {
            sameDay: '[I dag klokka] LT',
            nextDay: '[I morgon klokka] LT',
            nextWeek: 'dddd [klokka] LT',
            lastDay: '[I går klokka] LT',
            lastWeek: '[Føregåande] dddd [klokka] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'om %s',
            past : '%s sidan',
            s : 'nokre sekund',
            m : 'eit minutt',
            mm : '%d minutt',
            h : 'ein time',
            hh : '%d timar',
            d : 'ein dag',
            dd : '%d dagar',
            M : 'ein månad',
            MM : '%d månader',
            y : 'eit år',
            yy : '%d år'
        },
        ordinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var pa_in__symbolMap = {
        '1': '੧',
        '2': '੨',
        '3': '੩',
        '4': '੪',
        '5': '੫',
        '6': '੬',
        '7': '੭',
        '8': '੮',
        '9': '੯',
        '0': '੦'
    },
    pa_in__numberMap = {
        '੧': '1',
        '੨': '2',
        '੩': '3',
        '੪': '4',
        '੫': '5',
        '੬': '6',
        '੭': '7',
        '੮': '8',
        '੯': '9',
        '੦': '0'
    };

    var pa_in = moment__default.defineLocale('pa-in', {
        // There are months name as per Nanakshahi Calender but they are not used as rigidly in modern Punjabi.
        months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
        monthsShort : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
        weekdays : 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),
        weekdaysShort : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
        weekdaysMin : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
        longDateFormat : {
            LT : 'A h:mm ਵਜੇ',
            LTS : 'A h:mm:ss ਵਜੇ',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm ਵਜੇ',
            LLLL : 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'
        },
        calendar : {
            sameDay : '[ਅਜ] LT',
            nextDay : '[ਕਲ] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[ਕਲ] LT',
            lastWeek : '[ਪਿਛਲੇ] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ਵਿੱਚ',
            past : '%s ਪਿਛਲੇ',
            s : 'ਕੁਝ ਸਕਿੰਟ',
            m : 'ਇਕ ਮਿੰਟ',
            mm : '%d ਮਿੰਟ',
            h : 'ਇੱਕ ਘੰਟਾ',
            hh : '%d ਘੰਟੇ',
            d : 'ਇੱਕ ਦਿਨ',
            dd : '%d ਦਿਨ',
            M : 'ਇੱਕ ਮਹੀਨਾ',
            MM : '%d ਮਹੀਨੇ',
            y : 'ਇੱਕ ਸਾਲ',
            yy : '%d ਸਾਲ'
        },
        preparse: function (string) {
            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
                return pa_in__numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return pa_in__symbolMap[match];
            });
        },
        // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'ਰਾਤ') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ਸਵੇਰ') {
                return hour;
            } else if (meridiem === 'ਦੁਪਹਿਰ') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'ਸ਼ਾਮ') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ਰਾਤ';
            } else if (hour < 10) {
                return 'ਸਵੇਰ';
            } else if (hour < 17) {
                return 'ਦੁਪਹਿਰ';
            } else if (hour < 20) {
                return 'ਸ਼ਾਮ';
            } else {
                return 'ਰਾਤ';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),
        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');
    function pl__plural(n) {
        return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);
    }
    function pl__translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'm':
                return withoutSuffix ? 'minuta' : 'minutę';
            case 'mm':
                return result + (pl__plural(number) ? 'minuty' : 'minut');
            case 'h':
                return withoutSuffix  ? 'godzina'  : 'godzinę';
            case 'hh':
                return result + (pl__plural(number) ? 'godziny' : 'godzin');
            case 'MM':
                return result + (pl__plural(number) ? 'miesiące' : 'miesięcy');
            case 'yy':
                return result + (pl__plural(number) ? 'lata' : 'lat');
        }
    }

    var pl = moment__default.defineLocale('pl', {
        months : function (momentToFormat, format) {
            if (format === '') {
                // Hack: if format empty we know this is used to generate
                // RegExp by moment. Give then back both valid forms of months
                // in RegExp ready format.
                return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';
            } else if (/D MMMM/.test(format)) {
                return monthsSubjective[momentToFormat.month()];
            } else {
                return monthsNominative[momentToFormat.month()];
            }
        },
        monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
        weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
        weekdaysShort : 'nie_pon_wt_śr_czw_pt_sb'.split('_'),
        weekdaysMin : 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Dziś o] LT',
            nextDay: '[Jutro o] LT',
            nextWeek: '[W] dddd [o] LT',
            lastDay: '[Wczoraj o] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[W zeszłą niedzielę o] LT';
                    case 3:
                        return '[W zeszłą środę o] LT';
                    case 6:
                        return '[W zeszłą sobotę o] LT';
                    default:
                        return '[W zeszły] dddd [o] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'za %s',
            past : '%s temu',
            s : 'kilka sekund',
            m : pl__translate,
            mm : pl__translate,
            h : pl__translate,
            hh : pl__translate,
            d : '1 dzień',
            dd : '%d dni',
            M : 'miesiąc',
            MM : pl__translate,
            y : 'rok',
            yy : pl__translate
        },
        ordinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var pt_br = moment__default.defineLocale('pt-br', {
        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
        weekdaysMin : 'Dom_2ª_3ª_4ª_5ª_6ª_Sáb'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',
            LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'
        },
        calendar : {
            sameDay: '[Hoje às] LT',
            nextDay: '[Amanhã às] LT',
            nextWeek: 'dddd [às] LT',
            lastDay: '[Ontem às] LT',
            lastWeek: function () {
                return (this.day() === 0 || this.day() === 6) ?
                    '[Último] dddd [às] LT' : // Saturday + Sunday
                    '[Última] dddd [às] LT'; // Monday - Friday
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'em %s',
            past : '%s atrás',
            s : 'poucos segundos',
            m : 'um minuto',
            mm : '%d minutos',
            h : 'uma hora',
            hh : '%d horas',
            d : 'um dia',
            dd : '%d dias',
            M : 'um mês',
            MM : '%d meses',
            y : 'um ano',
            yy : '%d anos'
        },
        ordinalParse: /\d{1,2}º/,
        ordinal : '%dº'
    });


    var pt = moment__default.defineLocale('pt', {
        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
        weekdays : 'Domingo_Segunda-Feira_Terça-Feira_Quarta-Feira_Quinta-Feira_Sexta-Feira_Sábado'.split('_'),
        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
        weekdaysMin : 'Dom_2ª_3ª_4ª_5ª_6ª_Sáb'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY HH:mm',
            LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Hoje às] LT',
            nextDay: '[Amanhã às] LT',
            nextWeek: 'dddd [às] LT',
            lastDay: '[Ontem às] LT',
            lastWeek: function () {
                return (this.day() === 0 || this.day() === 6) ?
                    '[Último] dddd [às] LT' : // Saturday + Sunday
                    '[Última] dddd [às] LT'; // Monday - Friday
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'em %s',
            past : 'há %s',
            s : 'segundos',
            m : 'um minuto',
            mm : '%d minutos',
            h : 'uma hora',
            hh : '%d horas',
            d : 'um dia',
            dd : '%d dias',
            M : 'um mês',
            MM : '%d meses',
            y : 'um ano',
            yy : '%d anos'
        },
        ordinalParse: /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    function ro__relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
                'mm': 'minute',
                'hh': 'ore',
                'dd': 'zile',
                'MM': 'luni',
                'yy': 'ani'
            },
            separator = ' ';
        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
            separator = ' de ';
        }
        return number + separator + format[key];
    }

    var ro = moment__default.defineLocale('ro', {
        months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),
        monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
        weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
        weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY H:mm',
            LLLL : 'dddd, D MMMM YYYY H:mm'
        },
        calendar : {
            sameDay: '[azi la] LT',
            nextDay: '[mâine la] LT',
            nextWeek: 'dddd [la] LT',
            lastDay: '[ieri la] LT',
            lastWeek: '[fosta] dddd [la] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'peste %s',
            past : '%s în urmă',
            s : 'câteva secunde',
            m : 'un minut',
            mm : ro__relativeTimeWithPlural,
            h : 'o oră',
            hh : ro__relativeTimeWithPlural,
            d : 'o zi',
            dd : ro__relativeTimeWithPlural,
            M : 'o lună',
            MM : ro__relativeTimeWithPlural,
            y : 'un an',
            yy : ro__relativeTimeWithPlural
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });


    function ru__plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
    }
    function ru__relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
            'hh': 'час_часа_часов',
            'dd': 'день_дня_дней',
            'MM': 'месяц_месяца_месяцев',
            'yy': 'год_года_лет'
        };
        if (key === 'm') {
            return withoutSuffix ? 'минута' : 'минуту';
        }
        else {
            return number + ' ' + ru__plural(format[key], +number);
        }
    }
    var ru__monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];

    // http://new.gramota.ru/spravka/rules/139-prop : § 103
    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
    var ru = moment__default.defineLocale('ru', {
        months : {
            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),
            standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')
        },
        monthsShort : {
            // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку ?
            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),
            standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')
        },
        weekdays : {
            standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),
            isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/
        },
        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
        monthsParse : ru__monthsParse,
        longMonthsParse : ru__monthsParse,
        shortMonthsParse : ru__monthsParse,

        // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки
        monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

        // копия предыдущего
        monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

        // полные названия с падежами
        monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,

        // Выражение, которое соотвествует только сокращённым формам
        monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY г.',
            LLL : 'D MMMM YYYY г., HH:mm',
            LLLL : 'dddd, D MMMM YYYY г., HH:mm'
        },
        calendar : {
            sameDay: '[Сегодня в] LT',
            nextDay: '[Завтра в] LT',
            lastDay: '[Вчера в] LT',
            nextWeek: function (now) {
                if (now.week() !== this.week()) {
                    switch (this.day()) {
                        case 0:
                            return '[В следующее] dddd [в] LT';
                        case 1:
                        case 2:
                        case 4:
                            return '[В следующий] dddd [в] LT';
                        case 3:
                        case 5:
                        case 6:
                            return '[В следующую] dddd [в] LT';
                    }
                } else {
                    if (this.day() === 2) {
                        return '[Во] dddd [в] LT';
                    } else {
                        return '[В] dddd [в] LT';
                    }
                }
            },
            lastWeek: function (now) {
                if (now.week() !== this.week()) {
                    switch (this.day()) {
                        case 0:
                            return '[В прошлое] dddd [в] LT';
                        case 1:
                        case 2:
                        case 4:
                            return '[В прошлый] dddd [в] LT';
                        case 3:
                        case 5:
                        case 6:
                            return '[В прошлую] dddd [в] LT';
                    }
                } else {
                    if (this.day() === 2) {
                        return '[Во] dddd [в] LT';
                    } else {
                        return '[В] dddd [в] LT';
                    }
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'через %s',
            past : '%s назад',
            s : 'несколько секунд',
            m : ru__relativeTimeWithPlural,
            mm : ru__relativeTimeWithPlural,
            h : 'час',
            hh : ru__relativeTimeWithPlural,
            d : 'день',
            dd : ru__relativeTimeWithPlural,
            M : 'месяц',
            MM : ru__relativeTimeWithPlural,
            y : 'год',
            yy : ru__relativeTimeWithPlural
        },
        meridiemParse: /ночи|утра|дня|вечера/i,
        isPM : function (input) {
            return /^(дня|вечера)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ночи';
            } else if (hour < 12) {
                return 'утра';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечера';
            }
        },
        ordinalParse: /\d{1,2}-(й|го|я)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                    return number + '-й';
                case 'D':
                    return number + '-го';
                case 'w':
                case 'W':
                    return number + '-я';
                default:
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });



    var se = moment__default.defineLocale('se', {
        months : 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),
        monthsShort : 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),
        weekdays : 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),
        weekdaysShort : 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
        weekdaysMin : 's_v_m_g_d_b_L'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'MMMM D. [b.] YYYY',
            LLL : 'MMMM D. [b.] YYYY [ti.] HH:mm',
            LLLL : 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'
        },
        calendar : {
            sameDay: '[otne ti] LT',
            nextDay: '[ihttin ti] LT',
            nextWeek: 'dddd [ti] LT',
            lastDay: '[ikte ti] LT',
            lastWeek: '[ovddit] dddd [ti] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : '%s geažes',
            past : 'maŋit %s',
            s : 'moadde sekunddat',
            m : 'okta minuhta',
            mm : '%d minuhtat',
            h : 'okta diimmu',
            hh : '%d diimmut',
            d : 'okta beaivi',
            dd : '%d beaivvit',
            M : 'okta mánnu',
            MM : '%d mánut',
            y : 'okta jahki',
            yy : '%d jagit'
        },
        ordinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    /*jshint -W100*/
    var si = moment__default.defineLocale('si', {
        months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),
        monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),
        weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),
        weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
        weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'a h:mm',
            LTS : 'a h:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'YYYY MMMM D',
            LLL : 'YYYY MMMM D, a h:mm',
            LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'
        },
        calendar : {
            sameDay : '[අද] LT[ට]',
            nextDay : '[හෙට] LT[ට]',
            nextWeek : 'dddd LT[ට]',
            lastDay : '[ඊයේ] LT[ට]',
            lastWeek : '[පසුගිය] dddd LT[ට]',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%sකින්',
            past : '%sකට පෙර',
            s : 'තත්පර කිහිපය',
            m : 'මිනිත්තුව',
            mm : 'මිනිත්තු %d',
            h : 'පැය',
            hh : 'පැය %d',
            d : 'දිනය',
            dd : 'දින %d',
            M : 'මාසය',
            MM : 'මාස %d',
            y : 'වසර',
            yy : 'වසර %d'
        },
        ordinalParse: /\d{1,2} වැනි/,
        ordinal : function (number) {
            return number + ' වැනි';
        },
        meridiemParse : /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
        isPM : function (input) {
            return input === 'ප.ව.' || input === 'පස් වරු';
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'ප.ව.' : 'පස් වරු';
            } else {
                return isLower ? 'පෙ.ව.' : 'පෙර වරු';
            }
        }
    });


    var sk__months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),
        sk__monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
    function sk__plural(n) {
        return (n > 1) && (n < 5);
    }
    function sk__translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':  // a few seconds / in a few seconds / a few seconds ago
                return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';
            case 'm':  // a minute / in a minute / a minute ago
                return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');
            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
                if (withoutSuffix || isFuture) {
                    return result + (sk__plural(number) ? 'minúty' : 'minút');
                } else {
                    return result + 'minútami';
                }
                break;
            case 'h':  // an hour / in an hour / an hour ago
                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
            case 'hh': // 9 hours / in 9 hours / 9 hours ago
                if (withoutSuffix || isFuture) {
                    return result + (sk__plural(number) ? 'hodiny' : 'hodín');
                } else {
                    return result + 'hodinami';
                }
                break;
            case 'd':  // a day / in a day / a day ago
                return (withoutSuffix || isFuture) ? 'deň' : 'dňom';
            case 'dd': // 9 days / in 9 days / 9 days ago
                if (withoutSuffix || isFuture) {
                    return result + (sk__plural(number) ? 'dni' : 'dní');
                } else {
                    return result + 'dňami';
                }
                break;
            case 'M':  // a month / in a month / a month ago
                return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';
            case 'MM': // 9 months / in 9 months / 9 months ago
                if (withoutSuffix || isFuture) {
                    return result + (sk__plural(number) ? 'mesiace' : 'mesiacov');
                } else {
                    return result + 'mesiacmi';
                }
                break;
            case 'y':  // a year / in a year / a year ago
                return (withoutSuffix || isFuture) ? 'rok' : 'rokom';
            case 'yy': // 9 years / in 9 years / 9 years ago
                if (withoutSuffix || isFuture) {
                    return result + (sk__plural(number) ? 'roky' : 'rokov');
                } else {
                    return result + 'rokmi';
                }
                break;
        }
    }

    var sk = moment__default.defineLocale('sk', {
        months : sk__months,
        monthsShort : sk__monthsShort,
        weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
        weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),
        weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),
        longDateFormat : {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay: '[dnes o] LT',
            nextDay: '[zajtra o] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[v nedeľu o] LT';
                    case 1:
                    case 2:
                        return '[v] dddd [o] LT';
                    case 3:
                        return '[v stredu o] LT';
                    case 4:
                        return '[vo štvrtok o] LT';
                    case 5:
                        return '[v piatok o] LT';
                    case 6:
                        return '[v sobotu o] LT';
                }
            },
            lastDay: '[včera o] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[minulú nedeľu o] LT';
                    case 1:
                    case 2:
                        return '[minulý] dddd [o] LT';
                    case 3:
                        return '[minulú stredu o] LT';
                    case 4:
                    case 5:
                        return '[minulý] dddd [o] LT';
                    case 6:
                        return '[minulú sobotu o] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'za %s',
            past : 'pred %s',
            s : sk__translate,
            m : sk__translate,
            mm : sk__translate,
            h : sk__translate,
            hh : sk__translate,
            d : sk__translate,
            dd : sk__translate,
            M : sk__translate,
            MM : sk__translate,
            y : sk__translate,
            yy : sk__translate
        },
        ordinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    function sl__processRelativeTime(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':
                return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';
            case 'm':
                return withoutSuffix ? 'ena minuta' : 'eno minuto';
            case 'mm':
                if (number === 1) {
                    result += withoutSuffix ? 'minuta' : 'minuto';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'minute' : 'minutami';
                } else {
                    result += withoutSuffix || isFuture ? 'minut' : 'minutami';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'ena ura' : 'eno uro';
            case 'hh':
                if (number === 1) {
                    result += withoutSuffix ? 'ura' : 'uro';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'uri' : 'urama';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'ure' : 'urami';
                } else {
                    result += withoutSuffix || isFuture ? 'ur' : 'urami';
                }
                return result;
            case 'd':
                return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
            case 'dd':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'dan' : 'dnem';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
                } else {
                    result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
                }
                return result;
            case 'M':
                return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
            case 'MM':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
                } else {
                    result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
                }
                return result;
            case 'y':
                return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
            case 'yy':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'leto' : 'letom';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'leti' : 'letoma';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'leta' : 'leti';
                } else {
                    result += withoutSuffix || isFuture ? 'let' : 'leti';
                }
                return result;
        }
    }

    var sl = moment__default.defineLocale('sl', {
        months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),
        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
        weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
        weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd, D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay  : '[danes ob] LT',
            nextDay  : '[jutri ob] LT',

            nextWeek : function () {
                switch (this.day()) {
                    case 0:
                        return '[v] [nedeljo] [ob] LT';
                    case 3:
                        return '[v] [sredo] [ob] LT';
                    case 6:
                        return '[v] [soboto] [ob] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[v] dddd [ob] LT';
                }
            },
            lastDay  : '[včeraj ob] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                        return '[prejšnjo] [nedeljo] [ob] LT';
                    case 3:
                        return '[prejšnjo] [sredo] [ob] LT';
                    case 6:
                        return '[prejšnjo] [soboto] [ob] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prejšnji] dddd [ob] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'čez %s',
            past   : 'pred %s',
            s      : sl__processRelativeTime,
            m      : sl__processRelativeTime,
            mm     : sl__processRelativeTime,
            h      : sl__processRelativeTime,
            hh     : sl__processRelativeTime,
            d      : sl__processRelativeTime,
            dd     : sl__processRelativeTime,
            M      : sl__processRelativeTime,
            MM     : sl__processRelativeTime,
            y      : sl__processRelativeTime,
            yy     : sl__processRelativeTime
        },
        ordinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var sq = moment__default.defineLocale('sq', {
        months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),
        monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
        weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),
        weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
        weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),
        weekdaysParseExact : true,
        meridiemParse: /PD|MD/,
        isPM: function (input) {
            return input.charAt(0) === 'M';
        },
        meridiem : function (hours, minutes, isLower) {
            return hours < 12 ? 'PD' : 'MD';
        },
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Sot në] LT',
            nextDay : '[Nesër në] LT',
            nextWeek : 'dddd [në] LT',
            lastDay : '[Dje në] LT',
            lastWeek : 'dddd [e kaluar në] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'në %s',
            past : '%s më parë',
            s : 'disa sekonda',
            m : 'një minutë',
            mm : '%d minuta',
            h : 'një orë',
            hh : '%d orë',
            d : 'një ditë',
            dd : '%d ditë',
            M : 'një muaj',
            MM : '%d muaj',
            y : 'një vit',
            yy : '%d vite'
        },
        ordinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var sr_cyrl__translator = {
        words: { //Different grammatical cases
            m: ['један минут', 'једне минуте'],
            mm: ['минут', 'минуте', 'минута'],
            h: ['један сат', 'једног сата'],
            hh: ['сат', 'сата', 'сати'],
            dd: ['дан', 'дана', 'дана'],
            MM: ['месец', 'месеца', 'месеци'],
            yy: ['година', 'године', 'година']
        },
        correctGrammaticalCase: function (number, wordKey) {
            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
        },
        translate: function (number, withoutSuffix, key) {
            var wordKey = sr_cyrl__translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return number + ' ' + sr_cyrl__translator.correctGrammaticalCase(number, wordKey);
            }
        }
    };

    var sr_cyrl = moment__default.defineLocale('sr-cyrl', {
        months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),
        monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),
        monthsParseExact: true,
        weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
        weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
        weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[данас у] LT',
            nextDay: '[сутра у] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[у] [недељу] [у] LT';
                    case 3:
                        return '[у] [среду] [у] LT';
                    case 6:
                        return '[у] [суботу] [у] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[у] dddd [у] LT';
                }
            },
            lastDay  : '[јуче у] LT',
            lastWeek : function () {
                var lastWeekDays = [
                    '[прошле] [недеље] [у] LT',
                    '[прошлог] [понедељка] [у] LT',
                    '[прошлог] [уторка] [у] LT',
                    '[прошле] [среде] [у] LT',
                    '[прошлог] [четвртка] [у] LT',
                    '[прошлог] [петка] [у] LT',
                    '[прошле] [суботе] [у] LT'
                ];
                return lastWeekDays[this.day()];
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'за %s',
            past   : 'пре %s',
            s      : 'неколико секунди',
            m      : sr_cyrl__translator.translate,
            mm     : sr_cyrl__translator.translate,
            h      : sr_cyrl__translator.translate,
            hh     : sr_cyrl__translator.translate,
            d      : 'дан',
            dd     : sr_cyrl__translator.translate,
            M      : 'месец',
            MM     : sr_cyrl__translator.translate,
            y      : 'годину',
            yy     : sr_cyrl__translator.translate
        },
        ordinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var sr__translator = {
        words: { //Different grammatical cases
            m: ['jedan minut', 'jedne minute'],
            mm: ['minut', 'minute', 'minuta'],
            h: ['jedan sat', 'jednog sata'],
            hh: ['sat', 'sata', 'sati'],
            dd: ['dan', 'dana', 'dana'],
            MM: ['mesec', 'meseca', 'meseci'],
            yy: ['godina', 'godine', 'godina']
        },
        correctGrammaticalCase: function (number, wordKey) {
            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
        },
        translate: function (number, withoutSuffix, key) {
            var wordKey = sr__translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return number + ' ' + sr__translator.correctGrammaticalCase(number, wordKey);
            }
        }
    };

    var sr = moment__default.defineLocale('sr', {
        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),
        weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sutra u] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedelju] [u] LT';
                    case 3:
                        return '[u] [sredu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay  : '[juče u] LT',
            lastWeek : function () {
                var lastWeekDays = [
                    '[prošle] [nedelje] [u] LT',
                    '[prošlog] [ponedeljka] [u] LT',
                    '[prošlog] [utorka] [u] LT',
                    '[prošle] [srede] [u] LT',
                    '[prošlog] [četvrtka] [u] LT',
                    '[prošlog] [petka] [u] LT',
                    '[prošle] [subote] [u] LT'
                ];
                return lastWeekDays[this.day()];
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'za %s',
            past   : 'pre %s',
            s      : 'nekoliko sekundi',
            m      : sr__translator.translate,
            mm     : sr__translator.translate,
            h      : sr__translator.translate,
            hh     : sr__translator.translate,
            d      : 'dan',
            dd     : sr__translator.translate,
            M      : 'mesec',
            MM     : sr__translator.translate,
            y      : 'godinu',
            yy     : sr__translator.translate
        },
        ordinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });



    var ss = moment__default.defineLocale('ss', {
        months : "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split('_'),
        monthsShort : 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
        weekdays : 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),
        weekdaysShort : 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
        weekdaysMin : 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Namuhla nga] LT',
            nextDay : '[Kusasa nga] LT',
            nextWeek : 'dddd [nga] LT',
            lastDay : '[Itolo nga] LT',
            lastWeek : 'dddd [leliphelile] [nga] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'nga %s',
            past : 'wenteka nga %s',
            s : 'emizuzwana lomcane',
            m : 'umzuzu',
            mm : '%d emizuzu',
            h : 'lihora',
            hh : '%d emahora',
            d : 'lilanga',
            dd : '%d emalanga',
            M : 'inyanga',
            MM : '%d tinyanga',
            y : 'umnyaka',
            yy : '%d iminyaka'
        },
        meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'ekuseni';
            } else if (hours < 15) {
                return 'emini';
            } else if (hours < 19) {
                return 'entsambama';
            } else {
                return 'ebusuku';
            }
        },
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'ekuseni') {
                return hour;
            } else if (meridiem === 'emini') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
                if (hour === 0) {
                    return 0;
                }
                return hour + 12;
            }
        },
        ordinalParse: /\d{1,2}/,
        ordinal : '%d',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var sv = moment__default.defineLocale('sv', {
        months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),
        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
        weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
        weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
        weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [kl.] HH:mm',
            LLLL : 'dddd D MMMM YYYY [kl.] HH:mm',
            lll : 'D MMM YYYY HH:mm',
            llll : 'ddd D MMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Idag] LT',
            nextDay: '[Imorgon] LT',
            lastDay: '[Igår] LT',
            nextWeek: '[På] dddd LT',
            lastWeek: '[I] dddd[s] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'om %s',
            past : 'för %s sedan',
            s : 'några sekunder',
            m : 'en minut',
            mm : '%d minuter',
            h : 'en timme',
            hh : '%d timmar',
            d : 'en dag',
            dd : '%d dagar',
            M : 'en månad',
            MM : '%d månader',
            y : 'ett år',
            yy : '%d år'
        },
        ordinalParse: /\d{1,2}(e|a)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'e' :
                (b === 1) ? 'a' :
                (b === 2) ? 'a' :
                (b === 3) ? 'e' : 'e';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var sw = moment__default.defineLocale('sw', {
        months : 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),
        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
        weekdays : 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),
        weekdaysShort : 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
        weekdaysMin : 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[leo saa] LT',
            nextDay : '[kesho saa] LT',
            nextWeek : '[wiki ijayo] dddd [saat] LT',
            lastDay : '[jana] LT',
            lastWeek : '[wiki iliyopita] dddd [saat] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s baadaye',
            past : 'tokea %s',
            s : 'hivi punde',
            m : 'dakika moja',
            mm : 'dakika %d',
            h : 'saa limoja',
            hh : 'masaa %d',
            d : 'siku moja',
            dd : 'masiku %d',
            M : 'mwezi mmoja',
            MM : 'miezi %d',
            y : 'mwaka mmoja',
            yy : 'miaka %d'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var ta__symbolMap = {
        '1': '௧',
        '2': '௨',
        '3': '௩',
        '4': '௪',
        '5': '௫',
        '6': '௬',
        '7': '௭',
        '8': '௮',
        '9': '௯',
        '0': '௦'
    }, ta__numberMap = {
        '௧': '1',
        '௨': '2',
        '௩': '3',
        '௪': '4',
        '௫': '5',
        '௬': '6',
        '௭': '7',
        '௮': '8',
        '௯': '9',
        '௦': '0'
    };

    var ta = moment__default.defineLocale('ta', {
        months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
        monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
        weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),
        weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
        weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, HH:mm',
            LLLL : 'dddd, D MMMM YYYY, HH:mm'
        },
        calendar : {
            sameDay : '[இன்று] LT',
            nextDay : '[நாளை] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[நேற்று] LT',
            lastWeek : '[கடந்த வாரம்] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s இல்',
            past : '%s முன்',
            s : 'ஒரு சில விநாடிகள்',
            m : 'ஒரு நிமிடம்',
            mm : '%d நிமிடங்கள்',
            h : 'ஒரு மணி நேரம்',
            hh : '%d மணி நேரம்',
            d : 'ஒரு நாள்',
            dd : '%d நாட்கள்',
            M : 'ஒரு மாதம்',
            MM : '%d மாதங்கள்',
            y : 'ஒரு வருடம்',
            yy : '%d ஆண்டுகள்'
        },
        ordinalParse: /\d{1,2}வது/,
        ordinal : function (number) {
            return number + 'வது';
        },
        preparse: function (string) {
            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
                return ta__numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return ta__symbolMap[match];
            });
        },
        // refer http://ta.wikipedia.org/s/1er1
        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
        meridiem : function (hour, minute, isLower) {
            if (hour < 2) {
                return ' யாமம்';
            } else if (hour < 6) {
                return ' வைகறை';  // வைகறை
            } else if (hour < 10) {
                return ' காலை'; // காலை
            } else if (hour < 14) {
                return ' நண்பகல்'; // நண்பகல்
            } else if (hour < 18) {
                return ' எற்பாடு'; // எற்பாடு
            } else if (hour < 22) {
                return ' மாலை'; // மாலை
            } else {
                return ' யாமம்';
            }
        },
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'யாமம்') {
                return hour < 2 ? hour : hour + 12;
            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
                return hour;
            } else if (meridiem === 'நண்பகல்') {
                return hour >= 10 ? hour : hour + 12;
            } else {
                return hour + 12;
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var te = moment__default.defineLocale('te', {
        months : 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),
        monthsShort : 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),
        monthsParseExact : true,
        weekdays : 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),
        weekdaysShort : 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
        weekdaysMin : 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
        longDateFormat : {
            LT : 'A h:mm',
            LTS : 'A h:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm',
            LLLL : 'dddd, D MMMM YYYY, A h:mm'
        },
        calendar : {
            sameDay : '[నేడు] LT',
            nextDay : '[రేపు] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[నిన్న] LT',
            lastWeek : '[గత] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s లో',
            past : '%s క్రితం',
            s : 'కొన్ని క్షణాలు',
            m : 'ఒక నిమిషం',
            mm : '%d నిమిషాలు',
            h : 'ఒక గంట',
            hh : '%d గంటలు',
            d : 'ఒక రోజు',
            dd : '%d రోజులు',
            M : 'ఒక నెల',
            MM : '%d నెలలు',
            y : 'ఒక సంవత్సరం',
            yy : '%d సంవత్సరాలు'
        },
        ordinalParse : /\d{1,2}వ/,
        ordinal : '%dవ',
        meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'రాత్రి') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ఉదయం') {
                return hour;
            } else if (meridiem === 'మధ్యాహ్నం') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'సాయంత్రం') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'రాత్రి';
            } else if (hour < 10) {
                return 'ఉదయం';
            } else if (hour < 17) {
                return 'మధ్యాహ్నం';
            } else if (hour < 20) {
                return 'సాయంత్రం';
            } else {
                return 'రాత్రి';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var th = moment__default.defineLocale('th', {
        months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),
        monthsShort : 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),
        monthsParseExact: true,
        weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
        weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
        weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY เวลา H:mm',
            LLLL : 'วันddddที่ D MMMM YYYY เวลา H:mm'
        },
        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
        isPM: function (input) {
            return input === 'หลังเที่ยง';
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ก่อนเที่ยง';
            } else {
                return 'หลังเที่ยง';
            }
        },
        calendar : {
            sameDay : '[วันนี้ เวลา] LT',
            nextDay : '[พรุ่งนี้ เวลา] LT',
            nextWeek : 'dddd[หน้า เวลา] LT',
            lastDay : '[เมื่อวานนี้ เวลา] LT',
            lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'อีก %s',
            past : '%sที่แล้ว',
            s : 'ไม่กี่วินาที',
            m : '1 นาที',
            mm : '%d นาที',
            h : '1 ชั่วโมง',
            hh : '%d ชั่วโมง',
            d : '1 วัน',
            dd : '%d วัน',
            M : '1 เดือน',
            MM : '%d เดือน',
            y : '1 ปี',
            yy : '%d ปี'
        }
    });


    var tl_ph = moment__default.defineLocale('tl-ph', {
        months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
        monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
        weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
        weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
        weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'MM/D/YYYY',
            LL : 'MMMM D, YYYY',
            LLL : 'MMMM D, YYYY HH:mm',
            LLLL : 'dddd, MMMM DD, YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Ngayon sa] LT',
            nextDay: '[Bukas sa] LT',
            nextWeek: 'dddd [sa] LT',
            lastDay: '[Kahapon sa] LT',
            lastWeek: 'dddd [huling linggo] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'sa loob ng %s',
            past : '%s ang nakalipas',
            s : 'ilang segundo',
            m : 'isang minuto',
            mm : '%d minuto',
            h : 'isang oras',
            hh : '%d oras',
            d : 'isang araw',
            dd : '%d araw',
            M : 'isang buwan',
            MM : '%d buwan',
            y : 'isang taon',
            yy : '%d taon'
        },
        ordinalParse: /\d{1,2}/,
        ordinal : function (number) {
            return number;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');

    function translateFuture(output) {
        var time = output;
        time = (output.indexOf('jaj') !== -1) ?
        time.slice(0, -3) + 'leS' :
        (output.indexOf('jar') !== -1) ?
        time.slice(0, -3) + 'waQ' :
        (output.indexOf('DIS') !== -1) ?
        time.slice(0, -3) + 'nem' :
        time + ' pIq';
        return time;
    }

    function translatePast(output) {
        var time = output;
        time = (output.indexOf('jaj') !== -1) ?
        time.slice(0, -3) + 'Hu’' :
        (output.indexOf('jar') !== -1) ?
        time.slice(0, -3) + 'wen' :
        (output.indexOf('DIS') !== -1) ?
        time.slice(0, -3) + 'ben' :
        time + ' ret';
        return time;
    }

    function tlh__translate(number, withoutSuffix, string, isFuture) {
        var numberNoun = numberAsNoun(number);
        switch (string) {
            case 'mm':
                return numberNoun + ' tup';
            case 'hh':
                return numberNoun + ' rep';
            case 'dd':
                return numberNoun + ' jaj';
            case 'MM':
                return numberNoun + ' jar';
            case 'yy':
                return numberNoun + ' DIS';
        }
    }

    function numberAsNoun(number) {
        var hundred = Math.floor((number % 1000) / 100),
        ten = Math.floor((number % 100) / 10),
        one = number % 10,
        word = '';
        if (hundred > 0) {
            word += numbersNouns[hundred] + 'vatlh';
        }
        if (ten > 0) {
            word += ((word !== '') ? ' ' : '') + numbersNouns[ten] + 'maH';
        }
        if (one > 0) {
            word += ((word !== '') ? ' ' : '') + numbersNouns[one];
        }
        return (word === '') ? 'pagh' : word;
    }

    var tlh = moment__default.defineLocale('tlh', {
        months : 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),
        monthsShort : 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),
        monthsParseExact : true,
        weekdays : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
        weekdaysShort : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
        weekdaysMin : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[DaHjaj] LT',
            nextDay: '[wa’leS] LT',
            nextWeek: 'LLL',
            lastDay: '[wa’Hu’] LT',
            lastWeek: 'LLL',
            sameElse: 'L'
        },
        relativeTime : {
            future : translateFuture,
            past : translatePast,
            s : 'puS lup',
            m : 'wa’ tup',
            mm : tlh__translate,
            h : 'wa’ rep',
            hh : tlh__translate,
            d : 'wa’ jaj',
            dd : tlh__translate,
            M : 'wa’ jar',
            MM : tlh__translate,
            y : 'wa’ DIS',
            yy : tlh__translate
        },
        ordinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var tr__suffixes = {
        1: '\'inci',
        5: '\'inci',
        8: '\'inci',
        70: '\'inci',
        80: '\'inci',
        2: '\'nci',
        7: '\'nci',
        20: '\'nci',
        50: '\'nci',
        3: '\'üncü',
        4: '\'üncü',
        100: '\'üncü',
        6: '\'ncı',
        9: '\'uncu',
        10: '\'uncu',
        30: '\'uncu',
        60: '\'ıncı',
        90: '\'ıncı'
    };

    var tr = moment__default.defineLocale('tr', {
        months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),
        monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
        weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),
        weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
        weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[bugün saat] LT',
            nextDay : '[yarın saat] LT',
            nextWeek : '[haftaya] dddd [saat] LT',
            lastDay : '[dün] LT',
            lastWeek : '[geçen hafta] dddd [saat] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s sonra',
            past : '%s önce',
            s : 'birkaç saniye',
            m : 'bir dakika',
            mm : '%d dakika',
            h : 'bir saat',
            hh : '%d saat',
            d : 'bir gün',
            dd : '%d gün',
            M : 'bir ay',
            MM : '%d ay',
            y : 'bir yıl',
            yy : '%d yıl'
        },
        ordinalParse: /\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,
        ordinal : function (number) {
            if (number === 0) {  // special case for zero
                return number + '\'ıncı';
            }
            var a = number % 10,
                b = number % 100 - a,
                c = number >= 100 ? 100 : null;
            return number + (tr__suffixes[a] || tr__suffixes[b] || tr__suffixes[c]);
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });


    // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
    // This is currently too difficult (maybe even impossible) to add.
    var tzl = moment__default.defineLocale('tzl', {
        months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),
        monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
        weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
        weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
        weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM [dallas] YYYY',
            LLL : 'D. MMMM [dallas] YYYY HH.mm',
            LLLL : 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'
        },
        meridiemParse: /d\'o|d\'a/i,
        isPM : function (input) {
            return 'd\'o' === input.toLowerCase();
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'd\'o' : 'D\'O';
            } else {
                return isLower ? 'd\'a' : 'D\'A';
            }
        },
        calendar : {
            sameDay : '[oxhi à] LT',
            nextDay : '[demà à] LT',
            nextWeek : 'dddd [à] LT',
            lastDay : '[ieiri à] LT',
            lastWeek : '[sür el] dddd [lasteu à] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'osprei %s',
            past : 'ja%s',
            s : tzl__processRelativeTime,
            m : tzl__processRelativeTime,
            mm : tzl__processRelativeTime,
            h : tzl__processRelativeTime,
            hh : tzl__processRelativeTime,
            d : tzl__processRelativeTime,
            dd : tzl__processRelativeTime,
            M : tzl__processRelativeTime,
            MM : tzl__processRelativeTime,
            y : tzl__processRelativeTime,
            yy : tzl__processRelativeTime
        },
        ordinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    function tzl__processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            's': ['viensas secunds', '\'iensas secunds'],
            'm': ['\'n míut', '\'iens míut'],
            'mm': [number + ' míuts', '' + number + ' míuts'],
            'h': ['\'n þora', '\'iensa þora'],
            'hh': [number + ' þoras', '' + number + ' þoras'],
            'd': ['\'n ziua', '\'iensa ziua'],
            'dd': [number + ' ziuas', '' + number + ' ziuas'],
            'M': ['\'n mes', '\'iens mes'],
            'MM': [number + ' mesen', '' + number + ' mesen'],
            'y': ['\'n ar', '\'iens ar'],
            'yy': [number + ' ars', '' + number + ' ars']
        };
        return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1]);
    }


    var tzm_latn = moment__default.defineLocale('tzm-latn', {
        months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
        monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
        weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[asdkh g] LT',
            nextDay: '[aska g] LT',
            nextWeek: 'dddd [g] LT',
            lastDay: '[assant g] LT',
            lastWeek: 'dddd [g] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'dadkh s yan %s',
            past : 'yan %s',
            s : 'imik',
            m : 'minuḍ',
            mm : '%d minuḍ',
            h : 'saɛa',
            hh : '%d tassaɛin',
            d : 'ass',
            dd : '%d ossan',
            M : 'ayowr',
            MM : '%d iyyirn',
            y : 'asgas',
            yy : '%d isgasn'
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var tzm = moment__default.defineLocale('tzm', {
        months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
        monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
        weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS: 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
            nextWeek: 'dddd [ⴴ] LT',
            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
            lastWeek: 'dddd [ⴴ] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
            past : 'ⵢⴰⵏ %s',
            s : 'ⵉⵎⵉⴽ',
            m : 'ⵎⵉⵏⵓⴺ',
            mm : '%d ⵎⵉⵏⵓⴺ',
            h : 'ⵙⴰⵄⴰ',
            hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
            d : 'ⴰⵙⵙ',
            dd : '%d oⵙⵙⴰⵏ',
            M : 'ⴰⵢoⵓⵔ',
            MM : '%d ⵉⵢⵢⵉⵔⵏ',
            y : 'ⴰⵙⴳⴰⵙ',
            yy : '%d ⵉⵙⴳⴰⵙⵏ'
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 1st is the first week of the year.
        }
    });


    function uk__plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
    }
    function uk__relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
            'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
            'dd': 'день_дні_днів',
            'MM': 'місяць_місяці_місяців',
            'yy': 'рік_роки_років'
        };
        if (key === 'm') {
            return withoutSuffix ? 'хвилина' : 'хвилину';
        }
        else if (key === 'h') {
            return withoutSuffix ? 'година' : 'годину';
        }
        else {
            return number + ' ' + uk__plural(format[key], +number);
        }
    }
    function weekdaysCaseReplace(m, format) {
        var weekdays = {
            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
        },
        nounCase = (/(\[[ВвУу]\]) ?dddd/).test(format) ?
            'accusative' :
            ((/\[?(?:минулої|наступної)? ?\] ?dddd/).test(format) ?
                'genitive' :
                'nominative');
        return weekdays[nounCase][m.day()];
    }
    function processHoursFunction(str) {
        return function () {
            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
        };
    }

    var uk = moment__default.defineLocale('uk', {
        months : {
            'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),
            'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')
        },
        monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),
        weekdays : weekdaysCaseReplace,
        weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY р.',
            LLL : 'D MMMM YYYY р., HH:mm',
            LLLL : 'dddd, D MMMM YYYY р., HH:mm'
        },
        calendar : {
            sameDay: processHoursFunction('[Сьогодні '),
            nextDay: processHoursFunction('[Завтра '),
            lastDay: processHoursFunction('[Вчора '),
            nextWeek: processHoursFunction('[У] dddd ['),
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 5:
                    case 6:
                        return processHoursFunction('[Минулої] dddd [').call(this);
                    case 1:
                    case 2:
                    case 4:
                        return processHoursFunction('[Минулого] dddd [').call(this);
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'за %s',
            past : '%s тому',
            s : 'декілька секунд',
            m : uk__relativeTimeWithPlural,
            mm : uk__relativeTimeWithPlural,
            h : 'годину',
            hh : uk__relativeTimeWithPlural,
            d : 'день',
            dd : uk__relativeTimeWithPlural,
            M : 'місяць',
            MM : uk__relativeTimeWithPlural,
            y : 'рік',
            yy : uk__relativeTimeWithPlural
        },
        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
        meridiemParse: /ночі|ранку|дня|вечора/,
        isPM: function (input) {
            return /^(дня|вечора)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ночі';
            } else if (hour < 12) {
                return 'ранку';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечора';
            }
        },
        ordinalParse: /\d{1,2}-(й|го)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                case 'w':
                case 'W':
                    return number + '-й';
                case 'D':
                    return number + '-го';
                default:
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });


    var uz = moment__default.defineLocale('uz', {
        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
        weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
        weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
        weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'D MMMM YYYY, dddd HH:mm'
        },
        calendar : {
            sameDay : '[Бугун соат] LT [да]',
            nextDay : '[Эртага] LT [да]',
            nextWeek : 'dddd [куни соат] LT [да]',
            lastDay : '[Кеча соат] LT [да]',
            lastWeek : '[Утган] dddd [куни соат] LT [да]',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'Якин %s ичида',
            past : 'Бир неча %s олдин',
            s : 'фурсат',
            m : 'бир дакика',
            mm : '%d дакика',
            h : 'бир соат',
            hh : '%d соат',
            d : 'бир кун',
            dd : '%d кун',
            M : 'бир ой',
            MM : '%d ой',
            y : 'бир йил',
            yy : '%d йил'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var vi = moment__default.defineLocale('vi', {
        months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),
        monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),
        monthsParseExact : true,
        weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),
        weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
        weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
        weekdaysParseExact : true,
        meridiemParse: /sa|ch/i,
        isPM : function (input) {
            return /^ch$/i.test(input);
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower ? 'sa' : 'SA';
            } else {
                return isLower ? 'ch' : 'CH';
            }
        },
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM [năm] YYYY',
            LLL : 'D MMMM [năm] YYYY HH:mm',
            LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',
            l : 'DD/M/YYYY',
            ll : 'D MMM YYYY',
            lll : 'D MMM YYYY HH:mm',
            llll : 'ddd, D MMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Hôm nay lúc] LT',
            nextDay: '[Ngày mai lúc] LT',
            nextWeek: 'dddd [tuần tới lúc] LT',
            lastDay: '[Hôm qua lúc] LT',
            lastWeek: 'dddd [tuần rồi lúc] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : '%s tới',
            past : '%s trước',
            s : 'vài giây',
            m : 'một phút',
            mm : '%d phút',
            h : 'một giờ',
            hh : '%d giờ',
            d : 'một ngày',
            dd : '%d ngày',
            M : 'một tháng',
            MM : '%d tháng',
            y : 'một năm',
            yy : '%d năm'
        },
        ordinalParse: /\d{1,2}/,
        ordinal : function (number) {
            return number;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var x_pseudo = moment__default.defineLocale('x-pseudo', {
        months : 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),
        monthsShort : 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),
        monthsParseExact : true,
        weekdays : 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),
        weekdaysShort : 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
        weekdaysMin : 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[T~ódá~ý át] LT',
            nextDay : '[T~ómó~rró~w át] LT',
            nextWeek : 'dddd [át] LT',
            lastDay : '[Ý~ést~érdá~ý át] LT',
            lastWeek : '[L~ást] dddd [át] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'í~ñ %s',
            past : '%s á~gó',
            s : 'á ~féw ~sécó~ñds',
            m : 'á ~míñ~úté',
            mm : '%d m~íñú~tés',
            h : 'á~ñ hó~úr',
            hh : '%d h~óúrs',
            d : 'á ~dáý',
            dd : '%d d~áýs',
            M : 'á ~móñ~th',
            MM : '%d m~óñt~hs',
            y : 'á ~ýéár',
            yy : '%d ý~éárs'
        },
        ordinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var zh_cn = moment__default.defineLocale('zh-cn', {
        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),
        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
        longDateFormat : {
            LT : 'Ah点mm分',
            LTS : 'Ah点m分s秒',
            L : 'YYYY-MM-DD',
            LL : 'YYYY年MMMD日',
            LLL : 'YYYY年MMMD日Ah点mm分',
            LLLL : 'YYYY年MMMD日ddddAh点mm分',
            l : 'YYYY-MM-DD',
            ll : 'YYYY年MMMD日',
            lll : 'YYYY年MMMD日Ah点mm分',
            llll : 'YYYY年MMMD日ddddAh点mm分'
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' ||
                    meridiem === '上午') {
                return hour;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            } else {
                // '中午'
                return hour >= 11 ? hour : hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar : {
            sameDay : function () {
                return this.minutes() === 0 ? '[今天]Ah[点整]' : '[今天]LT';
            },
            nextDay : function () {
                return this.minutes() === 0 ? '[明天]Ah[点整]' : '[明天]LT';
            },
            lastDay : function () {
                return this.minutes() === 0 ? '[昨天]Ah[点整]' : '[昨天]LT';
            },
            nextWeek : function () {
                var startOfWeek, prefix;
                startOfWeek = moment__default().startOf('week');
                prefix = this.diff(startOfWeek, 'days') >= 7 ? '[下]' : '[本]';
                return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';
            },
            lastWeek : function () {
                var startOfWeek, prefix;
                startOfWeek = moment__default().startOf('week');
                prefix = this.unix() < startOfWeek.unix()  ? '[上]' : '[本]';
                return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';
            },
            sameElse : 'LL'
        },
        ordinalParse: /\d{1,2}(日|月|周)/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '日';
                case 'M':
                    return number + '月';
                case 'w':
                case 'W':
                    return number + '周';
                default:
                    return number;
            }
        },
        relativeTime : {
            future : '%s内',
            past : '%s前',
            s : '几秒',
            m : '1 分钟',
            mm : '%d 分钟',
            h : '1 小时',
            hh : '%d 小时',
            d : '1 天',
            dd : '%d 天',
            M : '1 个月',
            MM : '%d 个月',
            y : '1 年',
            yy : '%d 年'
        },
        week : {
            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });


    var zh_hk = moment__default.defineLocale('zh-hk', {
        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
        longDateFormat : {
            LT : 'Ah點mm分',
            LTS : 'Ah點m分s秒',
            L : 'YYYY年MMMD日',
            LL : 'YYYY年MMMD日',
            LLL : 'YYYY年MMMD日Ah點mm分',
            LLLL : 'YYYY年MMMD日ddddAh點mm分',
            l : 'YYYY年MMMD日',
            ll : 'YYYY年MMMD日',
            lll : 'YYYY年MMMD日Ah點mm分',
            llll : 'YYYY年MMMD日ddddAh點mm分'
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
                return hour;
            } else if (meridiem === '中午') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar : {
            sameDay : '[今天]LT',
            nextDay : '[明天]LT',
            nextWeek : '[下]ddddLT',
            lastDay : '[昨天]LT',
            lastWeek : '[上]ddddLT',
            sameElse : 'L'
        },
        ordinalParse: /\d{1,2}(日|月|週)/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd' :
                case 'D' :
                case 'DDD' :
                    return number + '日';
                case 'M' :
                    return number + '月';
                case 'w' :
                case 'W' :
                    return number + '週';
                default :
                    return number;
            }
        },
        relativeTime : {
            future : '%s內',
            past : '%s前',
            s : '幾秒',
            m : '1 分鐘',
            mm : '%d 分鐘',
            h : '1 小時',
            hh : '%d 小時',
            d : '1 天',
            dd : '%d 天',
            M : '1 個月',
            MM : '%d 個月',
            y : '1 年',
            yy : '%d 年'
        }
    });


    var zh_tw = moment__default.defineLocale('zh-tw', {
        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
        longDateFormat : {
            LT : 'Ah點mm分',
            LTS : 'Ah點m分s秒',
            L : 'YYYY年MMMD日',
            LL : 'YYYY年MMMD日',
            LLL : 'YYYY年MMMD日Ah點mm分',
            LLLL : 'YYYY年MMMD日ddddAh點mm分',
            l : 'YYYY年MMMD日',
            ll : 'YYYY年MMMD日',
            lll : 'YYYY年MMMD日Ah點mm分',
            llll : 'YYYY年MMMD日ddddAh點mm分'
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
                return hour;
            } else if (meridiem === '中午') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar : {
            sameDay : '[今天]LT',
            nextDay : '[明天]LT',
            nextWeek : '[下]ddddLT',
            lastDay : '[昨天]LT',
            lastWeek : '[上]ddddLT',
            sameElse : 'L'
        },
        ordinalParse: /\d{1,2}(日|月|週)/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd' :
                case 'D' :
                case 'DDD' :
                    return number + '日';
                case 'M' :
                    return number + '月';
                case 'w' :
                case 'W' :
                    return number + '週';
                default :
                    return number;
            }
        },
        relativeTime : {
            future : '%s內',
            past : '%s前',
            s : '幾秒',
            m : '1 分鐘',
            mm : '%d 分鐘',
            h : '1 小時',
            hh : '%d 小時',
            d : '1 天',
            dd : '%d 天',
            M : '1 個月',
            MM : '%d 個月',
            y : '1 年',
            yy : '%d 年'
        }
    });

    var moment_with_locales = moment__default;
    moment_with_locales.locale('en');

    return moment_with_locales;

}));
});
define('libs/polyfill.js', function(module, exports) {
Promise = undefined;

(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){
  (function (global){
    "use strict";

    _dereq_(295);

    _dereq_(296);

    _dereq_(2);

    if (global._babelPolyfill) {
      throw new Error("only one instance of babel-polyfill is allowed");
    }
    global._babelPolyfill = true;

    var DEFINE_PROPERTY = "defineProperty";
    function polyfill_define(O, key, value) {
      O[key] || Object[DEFINE_PROPERTY](O, key, {
        writable: true,
        configurable: true,
        value: value
      });
    }

    polyfill_define(String.prototype, "padLeft", "".padStart);
    polyfill_define(String.prototype, "padRight", "".padEnd);

    "pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach(function (key) {
      [][key] && polyfill_define(Array, key, Function.call.bind([][key]));
    });
  }).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"2":2,"295":295,"296":296}],2:[function(_dereq_,module,exports){
  _dereq_(119);
  module.exports = _dereq_(23).RegExp.escape;
},{"119":119,"23":23}],3:[function(_dereq_,module,exports){
  module.exports = function(it){
    if(typeof it != 'function')throw TypeError(it + ' is not a function!');
    return it;
  };
},{}],4:[function(_dereq_,module,exports){
  var cof = _dereq_(18);
  module.exports = function(it, msg){
    if(typeof it != 'number' && cof(it) != 'Number')throw TypeError(msg);
    return +it;
  };
},{"18":18}],5:[function(_dereq_,module,exports){
// 22.1.3.31 Array.prototype[@@unscopables]
  var UNSCOPABLES = _dereq_(117)('unscopables')
      , ArrayProto  = Array.prototype;
  if(ArrayProto[UNSCOPABLES] == undefined)_dereq_(40)(ArrayProto, UNSCOPABLES, {});
  module.exports = function(key){
    ArrayProto[UNSCOPABLES][key] = true;
  };
},{"117":117,"40":40}],6:[function(_dereq_,module,exports){
  module.exports = function(it, Constructor, name, forbiddenField){
    if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){
      throw TypeError(name + ': incorrect invocation!');
    } return it;
  };
},{}],7:[function(_dereq_,module,exports){
  var isObject = _dereq_(49);
  module.exports = function(it){
    if(!isObject(it))throw TypeError(it + ' is not an object!');
    return it;
  };
},{"49":49}],8:[function(_dereq_,module,exports){
// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
  'use strict';
  var toObject = _dereq_(109)
      , toIndex  = _dereq_(105)
      , toLength = _dereq_(108);

  module.exports = [].copyWithin || function copyWithin(target/*= 0*/, start/*= 0, end = @length*/){
        var O     = toObject(this)
            , len   = toLength(O.length)
            , to    = toIndex(target, len)
            , from  = toIndex(start, len)
            , end   = arguments.length > 2 ? arguments[2] : undefined
            , count = Math.min((end === undefined ? len : toIndex(end, len)) - from, len - to)
            , inc   = 1;
        if(from < to && to < from + count){
          inc  = -1;
          from += count - 1;
          to   += count - 1;
        }
        while(count-- > 0){
          if(from in O)O[to] = O[from];
          else delete O[to];
          to   += inc;
          from += inc;
        } return O;
      };
},{"105":105,"108":108,"109":109}],9:[function(_dereq_,module,exports){
// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
  'use strict';
  var toObject = _dereq_(109)
      , toIndex  = _dereq_(105)
      , toLength = _dereq_(108);
  module.exports = function fill(value /*, start = 0, end = @length */){
    var O      = toObject(this)
        , length = toLength(O.length)
        , aLen   = arguments.length
        , index  = toIndex(aLen > 1 ? arguments[1] : undefined, length)
        , end    = aLen > 2 ? arguments[2] : undefined
        , endPos = end === undefined ? length : toIndex(end, length);
    while(endPos > index)O[index++] = value;
    return O;
  };
},{"105":105,"108":108,"109":109}],10:[function(_dereq_,module,exports){
  var forOf = _dereq_(37);

  module.exports = function(iter, ITERATOR){
    var result = [];
    forOf(iter, false, result.push, result, ITERATOR);
    return result;
  };

},{"37":37}],11:[function(_dereq_,module,exports){
// false -> Array#indexOf
// true  -> Array#includes
  var toIObject = _dereq_(107)
      , toLength  = _dereq_(108)
      , toIndex   = _dereq_(105);
  module.exports = function(IS_INCLUDES){
    return function($this, el, fromIndex){
      var O      = toIObject($this)
          , length = toLength(O.length)
          , index  = toIndex(fromIndex, length)
          , value;
      // Array#includes uses SameValueZero equality algorithm
      if(IS_INCLUDES && el != el)while(length > index){
        value = O[index++];
        if(value != value)return true;
        // Array#toIndex ignores holes, Array#includes - not
      } else for(;length > index; index++)if(IS_INCLUDES || index in O){
        if(O[index] === el)return IS_INCLUDES || index || 0;
      } return !IS_INCLUDES && -1;
    };
  };
},{"105":105,"107":107,"108":108}],12:[function(_dereq_,module,exports){
// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
  var ctx      = _dereq_(25)
      , IObject  = _dereq_(45)
      , toObject = _dereq_(109)
      , toLength = _dereq_(108)
      , asc      = _dereq_(15);
  module.exports = function(TYPE, $create){
    var IS_MAP        = TYPE == 1
        , IS_FILTER     = TYPE == 2
        , IS_SOME       = TYPE == 3
        , IS_EVERY      = TYPE == 4
        , IS_FIND_INDEX = TYPE == 6
        , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX
        , create        = $create || asc;
    return function($this, callbackfn, that){
      var O      = toObject($this)
          , self   = IObject(O)
          , f      = ctx(callbackfn, that, 3)
          , length = toLength(self.length)
          , index  = 0
          , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined
          , val, res;
      for(;length > index; index++)if(NO_HOLES || index in self){
        val = self[index];
        res = f(val, index, O);
        if(TYPE){
          if(IS_MAP)result[index] = res;            // map
          else if(res)switch(TYPE){
            case 3: return true;                    // some
            case 5: return val;                     // find
            case 6: return index;                   // findIndex
            case 2: result.push(val);               // filter
          } else if(IS_EVERY)return false;          // every
        }
      }
      return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
    };
  };
},{"108":108,"109":109,"15":15,"25":25,"45":45}],13:[function(_dereq_,module,exports){
  var aFunction = _dereq_(3)
      , toObject  = _dereq_(109)
      , IObject   = _dereq_(45)
      , toLength  = _dereq_(108);

  module.exports = function(that, callbackfn, aLen, memo, isRight){
    aFunction(callbackfn);
    var O      = toObject(that)
        , self   = IObject(O)
        , length = toLength(O.length)
        , index  = isRight ? length - 1 : 0
        , i      = isRight ? -1 : 1;
    if(aLen < 2)for(;;){
      if(index in self){
        memo = self[index];
        index += i;
        break;
      }
      index += i;
      if(isRight ? index < 0 : length <= index){
        throw TypeError('Reduce of empty array with no initial value');
      }
    }
    for(;isRight ? index >= 0 : length > index; index += i)if(index in self){
      memo = callbackfn(memo, self[index], index, O);
    }
    return memo;
  };
},{"108":108,"109":109,"3":3,"45":45}],14:[function(_dereq_,module,exports){
  var isObject = _dereq_(49)
      , isArray  = _dereq_(47)
      , SPECIES  = _dereq_(117)('species');

  module.exports = function(original){
    var C;
    if(isArray(original)){
      C = original.constructor;
      // cross-realm fallback
      if(typeof C == 'function' && (C === Array || isArray(C.prototype)))C = undefined;
      if(isObject(C)){
        C = C[SPECIES];
        if(C === null)C = undefined;
      }
    } return C === undefined ? Array : C;
  };
},{"117":117,"47":47,"49":49}],15:[function(_dereq_,module,exports){
// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
  var speciesConstructor = _dereq_(14);

  module.exports = function(original, length){
    return new (speciesConstructor(original))(length);
  };
},{"14":14}],16:[function(_dereq_,module,exports){
  'use strict';
  var aFunction  = _dereq_(3)
      , isObject   = _dereq_(49)
      , invoke     = _dereq_(44)
      , arraySlice = [].slice
      , factories  = {};

  var construct = function(F, len, args){
    if(!(len in factories)){
      for(var n = [], i = 0; i < len; i++)n[i] = 'a[' + i + ']';
      factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
    } return factories[len](F, args);
  };

  module.exports = Function.bind || function bind(that /*, args... */){
        var fn       = aFunction(this)
            , partArgs = arraySlice.call(arguments, 1);
        var bound = function(/* args... */){
          var args = partArgs.concat(arraySlice.call(arguments));
          return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
        };
        if(isObject(fn.prototype))bound.prototype = fn.prototype;
        return bound;
      };
},{"3":3,"44":44,"49":49}],17:[function(_dereq_,module,exports){
// getting tag from 19.1.3.6 Object.prototype.toString()
  var cof = _dereq_(18)
      , TAG = _dereq_(117)('toStringTag')
      // ES3 wrong here
      , ARG = cof(function(){ return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
  var tryGet = function(it, key){
    try {
      return it[key];
    } catch(e){ /* empty */ }
  };

  module.exports = function(it){
    var O, T, B;
    return it === undefined ? 'Undefined' : it === null ? 'Null'
        // @@toStringTag case
        : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
        // builtinTag case
        : ARG ? cof(O)
        // ES3 arguments fallback
        : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
  };
},{"117":117,"18":18}],18:[function(_dereq_,module,exports){
  var toString = {}.toString;

  module.exports = function(it){
    return toString.call(it).slice(8, -1);
  };
},{}],19:[function(_dereq_,module,exports){
  'use strict';
  var dP          = _dereq_(67).f
      , create      = _dereq_(66)
      , redefineAll = _dereq_(86)
      , ctx         = _dereq_(25)
      , anInstance  = _dereq_(6)
      , defined     = _dereq_(27)
      , forOf       = _dereq_(37)
      , $iterDefine = _dereq_(53)
      , step        = _dereq_(55)
      , setSpecies  = _dereq_(91)
      , DESCRIPTORS = _dereq_(28)
      , fastKey     = _dereq_(62).fastKey
      , SIZE        = DESCRIPTORS ? '_s' : 'size';

  var getEntry = function(that, key){
    // fast case
    var index = fastKey(key), entry;
    if(index !== 'F')return that._i[index];
    // frozen object case
    for(entry = that._f; entry; entry = entry.n){
      if(entry.k == key)return entry;
    }
  };

  module.exports = {
    getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
      var C = wrapper(function(that, iterable){
        anInstance(that, C, NAME, '_i');
        that._i = create(null); // index
        that._f = undefined;    // first entry
        that._l = undefined;    // last entry
        that[SIZE] = 0;         // size
        if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
      });
      redefineAll(C.prototype, {
        // 23.1.3.1 Map.prototype.clear()
        // 23.2.3.2 Set.prototype.clear()
        clear: function clear(){
          for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){
            entry.r = true;
            if(entry.p)entry.p = entry.p.n = undefined;
            delete data[entry.i];
          }
          that._f = that._l = undefined;
          that[SIZE] = 0;
        },
        // 23.1.3.3 Map.prototype.delete(key)
        // 23.2.3.4 Set.prototype.delete(value)
        'delete': function(key){
          var that  = this
              , entry = getEntry(that, key);
          if(entry){
            var next = entry.n
                , prev = entry.p;
            delete that._i[entry.i];
            entry.r = true;
            if(prev)prev.n = next;
            if(next)next.p = prev;
            if(that._f == entry)that._f = next;
            if(that._l == entry)that._l = prev;
            that[SIZE]--;
          } return !!entry;
        },
        // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
        // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
        forEach: function forEach(callbackfn /*, that = undefined */){
          anInstance(this, C, 'forEach');
          var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)
              , entry;
          while(entry = entry ? entry.n : this._f){
            f(entry.v, entry.k, this);
            // revert to the last existing entry
            while(entry && entry.r)entry = entry.p;
          }
        },
        // 23.1.3.7 Map.prototype.has(key)
        // 23.2.3.7 Set.prototype.has(value)
        has: function has(key){
          return !!getEntry(this, key);
        }
      });
      if(DESCRIPTORS)dP(C.prototype, 'size', {
        get: function(){
          return defined(this[SIZE]);
        }
      });
      return C;
    },
    def: function(that, key, value){
      var entry = getEntry(that, key)
          , prev, index;
      // change existing entry
      if(entry){
        entry.v = value;
        // create new entry
      } else {
        that._l = entry = {
          i: index = fastKey(key, true), // <- index
          k: key,                        // <- key
          v: value,                      // <- value
          p: prev = that._l,             // <- previous entry
          n: undefined,                  // <- next entry
          r: false                       // <- removed
        };
        if(!that._f)that._f = entry;
        if(prev)prev.n = entry;
        that[SIZE]++;
        // add to index
        if(index !== 'F')that._i[index] = entry;
      } return that;
    },
    getEntry: getEntry,
    setStrong: function(C, NAME, IS_MAP){
      // add .keys, .values, .entries, [@@iterator]
      // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
      $iterDefine(C, NAME, function(iterated, kind){
        this._t = iterated;  // target
        this._k = kind;      // kind
        this._l = undefined; // previous
      }, function(){
        var that  = this
            , kind  = that._k
            , entry = that._l;
        // revert to the last existing entry
        while(entry && entry.r)entry = entry.p;
        // get next entry
        if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){
          // or finish the iteration
          that._t = undefined;
          return step(1);
        }
        // return step by kind
        if(kind == 'keys'  )return step(0, entry.k);
        if(kind == 'values')return step(0, entry.v);
        return step(0, [entry.k, entry.v]);
      }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);

      // add [@@species], 23.1.2.2, 23.2.2.2
      setSpecies(NAME);
    }
  };
},{"25":25,"27":27,"28":28,"37":37,"53":53,"55":55,"6":6,"62":62,"66":66,"67":67,"86":86,"91":91}],20:[function(_dereq_,module,exports){
// https://github.com/DavidBruant/Map-Set.prototype.toJSON
  var classof = _dereq_(17)
      , from    = _dereq_(10);
  module.exports = function(NAME){
    return function toJSON(){
      if(classof(this) != NAME)throw TypeError(NAME + "#toJSON isn't generic");
      return from(this);
    };
  };
},{"10":10,"17":17}],21:[function(_dereq_,module,exports){
  'use strict';
  var redefineAll       = _dereq_(86)
      , getWeak           = _dereq_(62).getWeak
      , anObject          = _dereq_(7)
      , isObject          = _dereq_(49)
      , anInstance        = _dereq_(6)
      , forOf             = _dereq_(37)
      , createArrayMethod = _dereq_(12)
      , $has              = _dereq_(39)
      , arrayFind         = createArrayMethod(5)
      , arrayFindIndex    = createArrayMethod(6)
      , id                = 0;

// fallback for uncaught frozen keys
  var uncaughtFrozenStore = function(that){
    return that._l || (that._l = new UncaughtFrozenStore);
  };
  var UncaughtFrozenStore = function(){
    this.a = [];
  };
  var findUncaughtFrozen = function(store, key){
    return arrayFind(store.a, function(it){
      return it[0] === key;
    });
  };
  UncaughtFrozenStore.prototype = {
    get: function(key){
      var entry = findUncaughtFrozen(this, key);
      if(entry)return entry[1];
    },
    has: function(key){
      return !!findUncaughtFrozen(this, key);
    },
    set: function(key, value){
      var entry = findUncaughtFrozen(this, key);
      if(entry)entry[1] = value;
      else this.a.push([key, value]);
    },
    'delete': function(key){
      var index = arrayFindIndex(this.a, function(it){
        return it[0] === key;
      });
      if(~index)this.a.splice(index, 1);
      return !!~index;
    }
  };

  module.exports = {
    getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
      var C = wrapper(function(that, iterable){
        anInstance(that, C, NAME, '_i');
        that._i = id++;      // collection id
        that._l = undefined; // leak store for uncaught frozen objects
        if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
      });
      redefineAll(C.prototype, {
        // 23.3.3.2 WeakMap.prototype.delete(key)
        // 23.4.3.3 WeakSet.prototype.delete(value)
        'delete': function(key){
          if(!isObject(key))return false;
          var data = getWeak(key);
          if(data === true)return uncaughtFrozenStore(this)['delete'](key);
          return data && $has(data, this._i) && delete data[this._i];
        },
        // 23.3.3.4 WeakMap.prototype.has(key)
        // 23.4.3.4 WeakSet.prototype.has(value)
        has: function has(key){
          if(!isObject(key))return false;
          var data = getWeak(key);
          if(data === true)return uncaughtFrozenStore(this).has(key);
          return data && $has(data, this._i);
        }
      });
      return C;
    },
    def: function(that, key, value){
      var data = getWeak(anObject(key), true);
      if(data === true)uncaughtFrozenStore(that).set(key, value);
      else data[that._i] = value;
      return that;
    },
    ufstore: uncaughtFrozenStore
  };
},{"12":12,"37":37,"39":39,"49":49,"6":6,"62":62,"7":7,"86":86}],22:[function(_dereq_,module,exports){
  'use strict';
  var global            = _dereq_(38)
      , $export           = _dereq_(32)
      , redefine          = _dereq_(87)
      , redefineAll       = _dereq_(86)
      , meta              = _dereq_(62)
      , forOf             = _dereq_(37)
      , anInstance        = _dereq_(6)
      , isObject          = _dereq_(49)
      , fails             = _dereq_(34)
      , $iterDetect       = _dereq_(54)
      , setToStringTag    = _dereq_(92)
      , inheritIfRequired = _dereq_(43);

  module.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){
    var Base  = global[NAME]
        , C     = Base
        , ADDER = IS_MAP ? 'set' : 'add'
        , proto = C && C.prototype
        , O     = {};
    var fixMethod = function(KEY){
      var fn = proto[KEY];
      redefine(proto, KEY,
          KEY == 'delete' ? function(a){
            return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
          } : KEY == 'has' ? function has(a){
            return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
          } : KEY == 'get' ? function get(a){
            return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
          } : KEY == 'add' ? function add(a){ fn.call(this, a === 0 ? 0 : a); return this; }
              : function set(a, b){ fn.call(this, a === 0 ? 0 : a, b); return this; }
      );
    };
    if(typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){
          new C().entries().next();
        }))){
      // create collection constructor
      C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
      redefineAll(C.prototype, methods);
      meta.NEED = true;
    } else {
      var instance             = new C
          // early implementations not supports chaining
          , HASNT_CHAINING       = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance
          // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
          , THROWS_ON_PRIMITIVES = fails(function(){ instance.has(1); })
          // most early implementations doesn't supports iterables, most modern - not close it correctly
          , ACCEPT_ITERABLES     = $iterDetect(function(iter){ new C(iter); }) // eslint-disable-line no-new
          // for early implementations -0 and +0 not the same
          , BUGGY_ZERO = !IS_WEAK && fails(function(){
                // V8 ~ Chromium 42- fails only with 5+ elements
                var $instance = new C()
                    , index     = 5;
                while(index--)$instance[ADDER](index, index);
                return !$instance.has(-0);
              });
      if(!ACCEPT_ITERABLES){
        C = wrapper(function(target, iterable){
          anInstance(target, C, NAME);
          var that = inheritIfRequired(new Base, target, C);
          if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
          return that;
        });
        C.prototype = proto;
        proto.constructor = C;
      }
      if(THROWS_ON_PRIMITIVES || BUGGY_ZERO){
        fixMethod('delete');
        fixMethod('has');
        IS_MAP && fixMethod('get');
      }
      if(BUGGY_ZERO || HASNT_CHAINING)fixMethod(ADDER);
      // weak collections should not contains .clear method
      if(IS_WEAK && proto.clear)delete proto.clear;
    }

    setToStringTag(C, NAME);

    O[NAME] = C;
    $export($export.G + $export.W + $export.F * (C != Base), O);

    if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);

    return C;
  };
},{"32":32,"34":34,"37":37,"38":38,"43":43,"49":49,"54":54,"6":6,"62":62,"86":86,"87":87,"92":92}],23:[function(_dereq_,module,exports){
  var core = module.exports = {version: '2.4.0'};
  if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef
},{}],24:[function(_dereq_,module,exports){
  'use strict';
  var $defineProperty = _dereq_(67)
      , createDesc      = _dereq_(85);

  module.exports = function(object, index, value){
    if(index in object)$defineProperty.f(object, index, createDesc(0, value));
    else object[index] = value;
  };
},{"67":67,"85":85}],25:[function(_dereq_,module,exports){
// optional / simple context binding
  var aFunction = _dereq_(3);
  module.exports = function(fn, that, length){
    aFunction(fn);
    if(that === undefined)return fn;
    switch(length){
      case 1: return function(a){
        return fn.call(that, a);
      };
      case 2: return function(a, b){
        return fn.call(that, a, b);
      };
      case 3: return function(a, b, c){
        return fn.call(that, a, b, c);
      };
    }
    return function(/* ...args */){
      return fn.apply(that, arguments);
    };
  };
},{"3":3}],26:[function(_dereq_,module,exports){
  'use strict';
  var anObject    = _dereq_(7)
      , toPrimitive = _dereq_(110)
      , NUMBER      = 'number';

  module.exports = function(hint){
    if(hint !== 'string' && hint !== NUMBER && hint !== 'default')throw TypeError('Incorrect hint');
    return toPrimitive(anObject(this), hint != NUMBER);
  };
},{"110":110,"7":7}],27:[function(_dereq_,module,exports){
// 7.2.1 RequireObjectCoercible(argument)
  module.exports = function(it){
    if(it == undefined)throw TypeError("Can't call method on  " + it);
    return it;
  };
},{}],28:[function(_dereq_,module,exports){
// Thank's IE8 for his funny defineProperty
  module.exports = !_dereq_(34)(function(){
    return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
  });
},{"34":34}],29:[function(_dereq_,module,exports){
  var isObject = _dereq_(49)
      , document = _dereq_(38).document
      // in old IE typeof document.createElement is 'object'
      , is = isObject(document) && isObject(document.createElement);
  module.exports = function(it){
    return is ? document.createElement(it) : {};
  };
},{"38":38,"49":49}],30:[function(_dereq_,module,exports){
// IE 8- don't enum bug keys
  module.exports = (
      'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
  ).split(',');
},{}],31:[function(_dereq_,module,exports){
// all enumerable object keys, includes symbols
  var getKeys = _dereq_(76)
      , gOPS    = _dereq_(73)
      , pIE     = _dereq_(77);
  module.exports = function(it){
    var result     = getKeys(it)
        , getSymbols = gOPS.f;
    if(getSymbols){
      var symbols = getSymbols(it)
          , isEnum  = pIE.f
          , i       = 0
          , key;
      while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
    } return result;
  };
},{"73":73,"76":76,"77":77}],32:[function(_dereq_,module,exports){
  var global    = _dereq_(38)
      , core      = _dereq_(23)
      , hide      = _dereq_(40)
      , redefine  = _dereq_(87)
      , ctx       = _dereq_(25)
      , PROTOTYPE = 'prototype';

  var $export = function(type, name, source){
    var IS_FORCED = type & $export.F
        , IS_GLOBAL = type & $export.G
        , IS_STATIC = type & $export.S
        , IS_PROTO  = type & $export.P
        , IS_BIND   = type & $export.B
        , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE]
        , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
        , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})
        , key, own, out, exp;
    if(IS_GLOBAL)source = name;
    for(key in source){
      // contains in native
      own = !IS_FORCED && target && target[key] !== undefined;
      // export native or passed
      out = (own ? target : source)[key];
      // bind timers to global for call from export context
      exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
      // extend global
      if(target)redefine(target, key, out, type & $export.U);
      // export
      if(exports[key] != out)hide(exports, key, exp);
      if(IS_PROTO && expProto[key] != out)expProto[key] = out;
    }
  };
  global.core = core;
// type bitmap
  $export.F = 1;   // forced
  $export.G = 2;   // global
  $export.S = 4;   // static
  $export.P = 8;   // proto
  $export.B = 16;  // bind
  $export.W = 32;  // wrap
  $export.U = 64;  // safe
  $export.R = 128; // real proto method for `library`
  module.exports = $export;
},{"23":23,"25":25,"38":38,"40":40,"87":87}],33:[function(_dereq_,module,exports){
  var MATCH = _dereq_(117)('match');
  module.exports = function(KEY){
    var re = /./;
    try {
      '/./'[KEY](re);
    } catch(e){
      try {
        re[MATCH] = false;
        return !'/./'[KEY](re);
      } catch(f){ /* empty */ }
    } return true;
  };
},{"117":117}],34:[function(_dereq_,module,exports){
  module.exports = function(exec){
    try {
      return !!exec();
    } catch(e){
      return true;
    }
  };
},{}],35:[function(_dereq_,module,exports){
  'use strict';
  var hide     = _dereq_(40)
      , redefine = _dereq_(87)
      , fails    = _dereq_(34)
      , defined  = _dereq_(27)
      , wks      = _dereq_(117);

  module.exports = function(KEY, length, exec){
    var SYMBOL   = wks(KEY)
        , fns      = exec(defined, SYMBOL, ''[KEY])
        , strfn    = fns[0]
        , rxfn     = fns[1];
    if(fails(function(){
          var O = {};
          O[SYMBOL] = function(){ return 7; };
          return ''[KEY](O) != 7;
        })){
      redefine(String.prototype, KEY, strfn);
      hide(RegExp.prototype, SYMBOL, length == 2
          // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
          // 21.2.5.11 RegExp.prototype[@@split](string, limit)
          ? function(string, arg){ return rxfn.call(string, this, arg); }
          // 21.2.5.6 RegExp.prototype[@@match](string)
          // 21.2.5.9 RegExp.prototype[@@search](string)
          : function(string){ return rxfn.call(string, this); }
      );
    }
  };
},{"117":117,"27":27,"34":34,"40":40,"87":87}],36:[function(_dereq_,module,exports){
  'use strict';
// 21.2.5.3 get RegExp.prototype.flags
  var anObject = _dereq_(7);
  module.exports = function(){
    var that   = anObject(this)
        , result = '';
    if(that.global)     result += 'g';
    if(that.ignoreCase) result += 'i';
    if(that.multiline)  result += 'm';
    if(that.unicode)    result += 'u';
    if(that.sticky)     result += 'y';
    return result;
  };
},{"7":7}],37:[function(_dereq_,module,exports){
  var ctx         = _dereq_(25)
      , call        = _dereq_(51)
      , isArrayIter = _dereq_(46)
      , anObject    = _dereq_(7)
      , toLength    = _dereq_(108)
      , getIterFn   = _dereq_(118)
      , BREAK       = {}
      , RETURN      = {};
  var exports = module.exports = function(iterable, entries, fn, that, ITERATOR){
    var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)
        , f      = ctx(fn, that, entries ? 2 : 1)
        , index  = 0
        , length, step, iterator, result;
    if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');
    // fast case for arrays with default iterator
    if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){
      result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
      if(result === BREAK || result === RETURN)return result;
    } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){
      result = call(iterator, f, step.value, entries);
      if(result === BREAK || result === RETURN)return result;
    }
  };
  exports.BREAK  = BREAK;
  exports.RETURN = RETURN;
},{"108":108,"118":118,"25":25,"46":46,"51":51,"7":7}],38:[function(_dereq_,module,exports){
// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
  var global = module.exports = typeof window != 'undefined' && window.Math == Math
      ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
  if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef
},{}],39:[function(_dereq_,module,exports){
  var hasOwnProperty = {}.hasOwnProperty;
  module.exports = function(it, key){
    return hasOwnProperty.call(it, key);
  };
},{}],40:[function(_dereq_,module,exports){
  var dP         = _dereq_(67)
      , createDesc = _dereq_(85);
  module.exports = _dereq_(28) ? function(object, key, value){
    return dP.f(object, key, createDesc(1, value));
  } : function(object, key, value){
    object[key] = value;
    return object;
  };
},{"28":28,"67":67,"85":85}],41:[function(_dereq_,module,exports){
  module.exports = _dereq_(38).document && document.documentElement;
},{"38":38}],42:[function(_dereq_,module,exports){
  module.exports = !_dereq_(28) && !_dereq_(34)(function(){
        return Object.defineProperty(_dereq_(29)('div'), 'a', {get: function(){ return 7; }}).a != 7;
      });
},{"28":28,"29":29,"34":34}],43:[function(_dereq_,module,exports){
  var isObject       = _dereq_(49)
      , setPrototypeOf = _dereq_(90).set;
  module.exports = function(that, target, C){
    var P, S = target.constructor;
    if(S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf){
      setPrototypeOf(that, P);
    } return that;
  };
},{"49":49,"90":90}],44:[function(_dereq_,module,exports){
// fast apply, http://jsperf.lnkit.com/fast-apply/5
  module.exports = function(fn, args, that){
    var un = that === undefined;
    switch(args.length){
      case 0: return un ? fn()
          : fn.call(that);
      case 1: return un ? fn(args[0])
          : fn.call(that, args[0]);
      case 2: return un ? fn(args[0], args[1])
          : fn.call(that, args[0], args[1]);
      case 3: return un ? fn(args[0], args[1], args[2])
          : fn.call(that, args[0], args[1], args[2]);
      case 4: return un ? fn(args[0], args[1], args[2], args[3])
          : fn.call(that, args[0], args[1], args[2], args[3]);
    } return              fn.apply(that, args);
  };
},{}],45:[function(_dereq_,module,exports){
// fallback for non-array-like ES3 and non-enumerable old V8 strings
  var cof = _dereq_(18);
  module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
    return cof(it) == 'String' ? it.split('') : Object(it);
  };
},{"18":18}],46:[function(_dereq_,module,exports){
// check on default Array iterator
  var Iterators  = _dereq_(56)
      , ITERATOR   = _dereq_(117)('iterator')
      , ArrayProto = Array.prototype;

  module.exports = function(it){
    return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
  };
},{"117":117,"56":56}],47:[function(_dereq_,module,exports){
// 7.2.2 IsArray(argument)
  var cof = _dereq_(18);
  module.exports = Array.isArray || function isArray(arg){
        return cof(arg) == 'Array';
      };
},{"18":18}],48:[function(_dereq_,module,exports){
// 20.1.2.3 Number.isInteger(number)
  var isObject = _dereq_(49)
      , floor    = Math.floor;
  module.exports = function isInteger(it){
    return !isObject(it) && isFinite(it) && floor(it) === it;
  };
},{"49":49}],49:[function(_dereq_,module,exports){
  module.exports = function(it){
    return typeof it === 'object' ? it !== null : typeof it === 'function';
  };
},{}],50:[function(_dereq_,module,exports){
// 7.2.8 IsRegExp(argument)
  var isObject = _dereq_(49)
      , cof      = _dereq_(18)
      , MATCH    = _dereq_(117)('match');
  module.exports = function(it){
    var isRegExp;
    return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
  };
},{"117":117,"18":18,"49":49}],51:[function(_dereq_,module,exports){
// call something on iterator step with safe closing on error
  var anObject = _dereq_(7);
  module.exports = function(iterator, fn, value, entries){
    try {
      return entries ? fn(anObject(value)[0], value[1]) : fn(value);
      // 7.4.6 IteratorClose(iterator, completion)
    } catch(e){
      var ret = iterator['return'];
      if(ret !== undefined)anObject(ret.call(iterator));
      throw e;
    }
  };
},{"7":7}],52:[function(_dereq_,module,exports){
  'use strict';
  var create         = _dereq_(66)
      , descriptor     = _dereq_(85)
      , setToStringTag = _dereq_(92)
      , IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
  _dereq_(40)(IteratorPrototype, _dereq_(117)('iterator'), function(){ return this; });

  module.exports = function(Constructor, NAME, next){
    Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
    setToStringTag(Constructor, NAME + ' Iterator');
  };
},{"117":117,"40":40,"66":66,"85":85,"92":92}],53:[function(_dereq_,module,exports){
  'use strict';
  var LIBRARY        = _dereq_(58)
      , $export        = _dereq_(32)
      , redefine       = _dereq_(87)
      , hide           = _dereq_(40)
      , has            = _dereq_(39)
      , Iterators      = _dereq_(56)
      , $iterCreate    = _dereq_(52)
      , setToStringTag = _dereq_(92)
      , getPrototypeOf = _dereq_(74)
      , ITERATOR       = _dereq_(117)('iterator')
      , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
      , FF_ITERATOR    = '@@iterator'
      , KEYS           = 'keys'
      , VALUES         = 'values';

  var returnThis = function(){ return this; };

  module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
    $iterCreate(Constructor, NAME, next);
    var getMethod = function(kind){
      if(!BUGGY && kind in proto)return proto[kind];
      switch(kind){
        case KEYS: return function keys(){ return new Constructor(this, kind); };
        case VALUES: return function values(){ return new Constructor(this, kind); };
      } return function entries(){ return new Constructor(this, kind); };
    };
    var TAG        = NAME + ' Iterator'
        , DEF_VALUES = DEFAULT == VALUES
        , VALUES_BUG = false
        , proto      = Base.prototype
        , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
        , $default   = $native || getMethod(DEFAULT)
        , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
        , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
        , methods, key, IteratorPrototype;
    // Fix native
    if($anyNative){
      IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
      if(IteratorPrototype !== Object.prototype){
        // Set @@toStringTag to native iterators
        setToStringTag(IteratorPrototype, TAG, true);
        // fix for some old engines
        if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
      }
    }
    // fix Array#{values, @@iterator}.name in V8 / FF
    if(DEF_VALUES && $native && $native.name !== VALUES){
      VALUES_BUG = true;
      $default = function values(){ return $native.call(this); };
    }
    // Define iterator
    if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
      hide(proto, ITERATOR, $default);
    }
    // Plug for library
    Iterators[NAME] = $default;
    Iterators[TAG]  = returnThis;
    if(DEFAULT){
      methods = {
        values:  DEF_VALUES ? $default : getMethod(VALUES),
        keys:    IS_SET     ? $default : getMethod(KEYS),
        entries: $entries
      };
      if(FORCED)for(key in methods){
        if(!(key in proto))redefine(proto, key, methods[key]);
      } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
    }
    return methods;
  };
},{"117":117,"32":32,"39":39,"40":40,"52":52,"56":56,"58":58,"74":74,"87":87,"92":92}],54:[function(_dereq_,module,exports){
  var ITERATOR     = _dereq_(117)('iterator')
      , SAFE_CLOSING = false;

  try {
    var riter = [7][ITERATOR]();
    riter['return'] = function(){ SAFE_CLOSING = true; };
    Array.from(riter, function(){ throw 2; });
  } catch(e){ /* empty */ }

  module.exports = function(exec, skipClosing){
    if(!skipClosing && !SAFE_CLOSING)return false;
    var safe = false;
    try {
      var arr  = [7]
          , iter = arr[ITERATOR]();
      iter.next = function(){ return {done: safe = true}; };
      arr[ITERATOR] = function(){ return iter; };
      exec(arr);
    } catch(e){ /* empty */ }
    return safe;
  };
},{"117":117}],55:[function(_dereq_,module,exports){
  module.exports = function(done, value){
    return {value: value, done: !!done};
  };
},{}],56:[function(_dereq_,module,exports){
  module.exports = {};
},{}],57:[function(_dereq_,module,exports){
  var getKeys   = _dereq_(76)
      , toIObject = _dereq_(107);
  module.exports = function(object, el){
    var O      = toIObject(object)
        , keys   = getKeys(O)
        , length = keys.length
        , index  = 0
        , key;
    while(length > index)if(O[key = keys[index++]] === el)return key;
  };
},{"107":107,"76":76}],58:[function(_dereq_,module,exports){
  module.exports = false;
},{}],59:[function(_dereq_,module,exports){
// 20.2.2.14 Math.expm1(x)
  var $expm1 = Math.expm1;
  module.exports = (!$expm1
      // Old FF bug
      || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
      // Tor Browser bug
      || $expm1(-2e-17) != -2e-17
  ) ? function expm1(x){
    return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
  } : $expm1;
},{}],60:[function(_dereq_,module,exports){
// 20.2.2.20 Math.log1p(x)
  module.exports = Math.log1p || function log1p(x){
        return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
      };
},{}],61:[function(_dereq_,module,exports){
// 20.2.2.28 Math.sign(x)
  module.exports = Math.sign || function sign(x){
        return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
      };
},{}],62:[function(_dereq_,module,exports){
  var META     = _dereq_(114)('meta')
      , isObject = _dereq_(49)
      , has      = _dereq_(39)
      , setDesc  = _dereq_(67).f
      , id       = 0;
  var isExtensible = Object.isExtensible || function(){
        return true;
      };
  var FREEZE = !_dereq_(34)(function(){
    return isExtensible(Object.preventExtensions({}));
  });
  var setMeta = function(it){
    setDesc(it, META, {value: {
      i: 'O' + ++id, // object ID
      w: {}          // weak collections IDs
    }});
  };
  var fastKey = function(it, create){
    // return primitive with prefix
    if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
    if(!has(it, META)){
      // can't set metadata to uncaught frozen object
      if(!isExtensible(it))return 'F';
      // not necessary to add metadata
      if(!create)return 'E';
      // add missing metadata
      setMeta(it);
      // return object ID
    } return it[META].i;
  };
  var getWeak = function(it, create){
    if(!has(it, META)){
      // can't set metadata to uncaught frozen object
      if(!isExtensible(it))return true;
      // not necessary to add metadata
      if(!create)return false;
      // add missing metadata
      setMeta(it);
      // return hash weak collections IDs
    } return it[META].w;
  };
// add metadata on freeze-family methods calling
  var onFreeze = function(it){
    if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
    return it;
  };
  var meta = module.exports = {
    KEY:      META,
    NEED:     false,
    fastKey:  fastKey,
    getWeak:  getWeak,
    onFreeze: onFreeze
  };
},{"114":114,"34":34,"39":39,"49":49,"67":67}],63:[function(_dereq_,module,exports){
  var Map     = _dereq_(149)
      , $export = _dereq_(32)
      , shared  = _dereq_(94)('metadata')
      , store   = shared.store || (shared.store = new (_dereq_(255)));

  var getOrCreateMetadataMap = function(target, targetKey, create){
    var targetMetadata = store.get(target);
    if(!targetMetadata){
      if(!create)return undefined;
      store.set(target, targetMetadata = new Map);
    }
    var keyMetadata = targetMetadata.get(targetKey);
    if(!keyMetadata){
      if(!create)return undefined;
      targetMetadata.set(targetKey, keyMetadata = new Map);
    } return keyMetadata;
  };
  var ordinaryHasOwnMetadata = function(MetadataKey, O, P){
    var metadataMap = getOrCreateMetadataMap(O, P, false);
    return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
  };
  var ordinaryGetOwnMetadata = function(MetadataKey, O, P){
    var metadataMap = getOrCreateMetadataMap(O, P, false);
    return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);
  };
  var ordinaryDefineOwnMetadata = function(MetadataKey, MetadataValue, O, P){
    getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
  };
  var ordinaryOwnMetadataKeys = function(target, targetKey){
    var metadataMap = getOrCreateMetadataMap(target, targetKey, false)
        , keys        = [];
    if(metadataMap)metadataMap.forEach(function(_, key){ keys.push(key); });
    return keys;
  };
  var toMetaKey = function(it){
    return it === undefined || typeof it == 'symbol' ? it : String(it);
  };
  var exp = function(O){
    $export($export.S, 'Reflect', O);
  };

  module.exports = {
    store: store,
    map: getOrCreateMetadataMap,
    has: ordinaryHasOwnMetadata,
    get: ordinaryGetOwnMetadata,
    set: ordinaryDefineOwnMetadata,
    keys: ordinaryOwnMetadataKeys,
    key: toMetaKey,
    exp: exp
  };
},{"149":149,"255":255,"32":32,"94":94}],64:[function(_dereq_,module,exports){
  var global    = _dereq_(38)
      , macrotask = _dereq_(104).set
      , Observer  = global.MutationObserver || global.WebKitMutationObserver
      , process   = global.process
      , Promise   = global.Promise
      , isNode    = _dereq_(18)(process) == 'process';

  module.exports = function(){
    var head, last, notify;

    var flush = function(){
      var parent, fn;
      if(isNode && (parent = process.domain))parent.exit();
      while(head){
        fn   = head.fn;
        head = head.next;
        try {
          fn();
        } catch(e){
          if(head)notify();
          else last = undefined;
          throw e;
        }
      } last = undefined;
      if(parent)parent.enter();
    };

    // Node.js
    if(isNode){
      notify = function(){
        process.nextTick(flush);
      };
      // browsers with MutationObserver
    } else if(Observer){
      var toggle = true
          , node   = document.createTextNode('');
      new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new
      notify = function(){
        node.data = toggle = !toggle;
      };
      // environments with maybe non-completely correct, but existent Promise
    } else if(Promise && Promise.resolve){
      var promise = Promise.resolve();
      notify = function(){
        promise.then(flush);
      };
      // for other environments - macrotask based on:
      // - setImmediate
      // - MessageChannel
      // - window.postMessag
      // - onreadystatechange
      // - setTimeout
    } else {
      notify = function(){
        // strange IE + webpack dev server bug - use .call(global)
        macrotask.call(global, flush);
      };
    }

    return function(fn){
      var task = {fn: fn, next: undefined};
      if(last)last.next = task;
      if(!head){
        head = task;
        notify();
      } last = task;
    };
  };
},{"104":104,"18":18,"38":38}],65:[function(_dereq_,module,exports){
  'use strict';
// 19.1.2.1 Object.assign(target, source, ...)
  var getKeys  = _dereq_(76)
      , gOPS     = _dereq_(73)
      , pIE      = _dereq_(77)
      , toObject = _dereq_(109)
      , IObject  = _dereq_(45)
      , $assign  = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
  module.exports = !$assign || _dereq_(34)(function(){
    var A = {}
        , B = {}
        , S = Symbol()
        , K = 'abcdefghijklmnopqrst';
    A[S] = 7;
    K.split('').forEach(function(k){ B[k] = k; });
    return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
  }) ? function assign(target, source){ // eslint-disable-line no-unused-vars
    var T     = toObject(target)
        , aLen  = arguments.length
        , index = 1
        , getSymbols = gOPS.f
        , isEnum     = pIE.f;
    while(aLen > index){
      var S      = IObject(arguments[index++])
          , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
          , length = keys.length
          , j      = 0
          , key;
      while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
    } return T;
  } : $assign;
},{"109":109,"34":34,"45":45,"73":73,"76":76,"77":77}],66:[function(_dereq_,module,exports){
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
  var anObject    = _dereq_(7)
      , dPs         = _dereq_(68)
      , enumBugKeys = _dereq_(30)
      , IE_PROTO    = _dereq_(93)('IE_PROTO')
      , Empty       = function(){ /* empty */ }
      , PROTOTYPE   = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
  var createDict = function(){
    // Thrash, waste and sodomy: IE GC bug
    var iframe = _dereq_(29)('iframe')
        , i      = enumBugKeys.length
        , lt     = '<'
        , gt     = '>'
        , iframeDocument;
    iframe.style.display = 'none';
    _dereq_(41).appendChild(iframe);
    iframe.src = 'javascript:'; // eslint-disable-line no-script-url
    // createDict = iframe.contentWindow.Object;
    // html.removeChild(iframe);
    iframeDocument = iframe.contentWindow.document;
    iframeDocument.open();
    iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
    iframeDocument.close();
    createDict = iframeDocument.F;
    while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
    return createDict();
  };

  module.exports = Object.create || function create(O, Properties){
        var result;
        if(O !== null){
          Empty[PROTOTYPE] = anObject(O);
          result = new Empty;
          Empty[PROTOTYPE] = null;
          // add "__proto__" for Object.getPrototypeOf polyfill
          result[IE_PROTO] = O;
        } else result = createDict();
        return Properties === undefined ? result : dPs(result, Properties);
      };

},{"29":29,"30":30,"41":41,"68":68,"7":7,"93":93}],67:[function(_dereq_,module,exports){
  var anObject       = _dereq_(7)
      , IE8_DOM_DEFINE = _dereq_(42)
      , toPrimitive    = _dereq_(110)
      , dP             = Object.defineProperty;

  exports.f = _dereq_(28) ? Object.defineProperty : function defineProperty(O, P, Attributes){
    anObject(O);
    P = toPrimitive(P, true);
    anObject(Attributes);
    if(IE8_DOM_DEFINE)try {
      return dP(O, P, Attributes);
    } catch(e){ /* empty */ }
    if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
    if('value' in Attributes)O[P] = Attributes.value;
    return O;
  };
},{"110":110,"28":28,"42":42,"7":7}],68:[function(_dereq_,module,exports){
  var dP       = _dereq_(67)
      , anObject = _dereq_(7)
      , getKeys  = _dereq_(76);

  module.exports = _dereq_(28) ? Object.defineProperties : function defineProperties(O, Properties){
    anObject(O);
    var keys   = getKeys(Properties)
        , length = keys.length
        , i = 0
        , P;
    while(length > i)dP.f(O, P = keys[i++], Properties[P]);
    return O;
  };
},{"28":28,"67":67,"7":7,"76":76}],69:[function(_dereq_,module,exports){
// Forced replacement prototype accessors methods
  module.exports = _dereq_(58)|| !_dereq_(34)(function(){
        var K = Math.random();
        // In FF throws only define methods
        __defineSetter__.call(null, K, function(){ /* empty */});
        delete _dereq_(38)[K];
      });
},{"34":34,"38":38,"58":58}],70:[function(_dereq_,module,exports){
  var pIE            = _dereq_(77)
      , createDesc     = _dereq_(85)
      , toIObject      = _dereq_(107)
      , toPrimitive    = _dereq_(110)
      , has            = _dereq_(39)
      , IE8_DOM_DEFINE = _dereq_(42)
      , gOPD           = Object.getOwnPropertyDescriptor;

  exports.f = _dereq_(28) ? gOPD : function getOwnPropertyDescriptor(O, P){
    O = toIObject(O);
    P = toPrimitive(P, true);
    if(IE8_DOM_DEFINE)try {
      return gOPD(O, P);
    } catch(e){ /* empty */ }
    if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
  };
},{"107":107,"110":110,"28":28,"39":39,"42":42,"77":77,"85":85}],71:[function(_dereq_,module,exports){
// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
  var toIObject = _dereq_(107)
      , gOPN      = _dereq_(72).f
      , toString  = {}.toString;

  var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
      ? Object.getOwnPropertyNames(window) : [];

  var getWindowNames = function(it){
    try {
      return gOPN(it);
    } catch(e){
      return windowNames.slice();
    }
  };

  module.exports.f = function getOwnPropertyNames(it){
    return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
  };

},{"107":107,"72":72}],72:[function(_dereq_,module,exports){
// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
  var $keys      = _dereq_(75)
      , hiddenKeys = _dereq_(30).concat('length', 'prototype');

  exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
        return $keys(O, hiddenKeys);
      };
},{"30":30,"75":75}],73:[function(_dereq_,module,exports){
  exports.f = Object.getOwnPropertySymbols;
},{}],74:[function(_dereq_,module,exports){
// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
  var has         = _dereq_(39)
      , toObject    = _dereq_(109)
      , IE_PROTO    = _dereq_(93)('IE_PROTO')
      , ObjectProto = Object.prototype;

  module.exports = Object.getPrototypeOf || function(O){
        O = toObject(O);
        if(has(O, IE_PROTO))return O[IE_PROTO];
        if(typeof O.constructor == 'function' && O instanceof O.constructor){
          return O.constructor.prototype;
        } return O instanceof Object ? ObjectProto : null;
      };
},{"109":109,"39":39,"93":93}],75:[function(_dereq_,module,exports){
  var has          = _dereq_(39)
      , toIObject    = _dereq_(107)
      , arrayIndexOf = _dereq_(11)(false)
      , IE_PROTO     = _dereq_(93)('IE_PROTO');

  module.exports = function(object, names){
    var O      = toIObject(object)
        , i      = 0
        , result = []
        , key;
    for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
    // Don't enum bug & hidden keys
    while(names.length > i)if(has(O, key = names[i++])){
      ~arrayIndexOf(result, key) || result.push(key);
    }
    return result;
  };
},{"107":107,"11":11,"39":39,"93":93}],76:[function(_dereq_,module,exports){
// 19.1.2.14 / 15.2.3.14 Object.keys(O)
  var $keys       = _dereq_(75)
      , enumBugKeys = _dereq_(30);

  module.exports = Object.keys || function keys(O){
        return $keys(O, enumBugKeys);
      };
},{"30":30,"75":75}],77:[function(_dereq_,module,exports){
  exports.f = {}.propertyIsEnumerable;
},{}],78:[function(_dereq_,module,exports){
// most Object methods by ES6 should accept primitives
  var $export = _dereq_(32)
      , core    = _dereq_(23)
      , fails   = _dereq_(34);
  module.exports = function(KEY, exec){
    var fn  = (core.Object || {})[KEY] || Object[KEY]
        , exp = {};
    exp[KEY] = exec(fn);
    $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
  };
},{"23":23,"32":32,"34":34}],79:[function(_dereq_,module,exports){
  var getKeys   = _dereq_(76)
      , toIObject = _dereq_(107)
      , isEnum    = _dereq_(77).f;
  module.exports = function(isEntries){
    return function(it){
      var O      = toIObject(it)
          , keys   = getKeys(O)
          , length = keys.length
          , i      = 0
          , result = []
          , key;
      while(length > i)if(isEnum.call(O, key = keys[i++])){
        result.push(isEntries ? [key, O[key]] : O[key]);
      } return result;
    };
  };
},{"107":107,"76":76,"77":77}],80:[function(_dereq_,module,exports){
// all object keys, includes non-enumerable and symbols
  var gOPN     = _dereq_(72)
      , gOPS     = _dereq_(73)
      , anObject = _dereq_(7)
      , Reflect  = _dereq_(38).Reflect;
  module.exports = Reflect && Reflect.ownKeys || function ownKeys(it){
        var keys       = gOPN.f(anObject(it))
            , getSymbols = gOPS.f;
        return getSymbols ? keys.concat(getSymbols(it)) : keys;
      };
},{"38":38,"7":7,"72":72,"73":73}],81:[function(_dereq_,module,exports){
  var $parseFloat = _dereq_(38).parseFloat
      , $trim       = _dereq_(102).trim;

  module.exports = 1 / $parseFloat(_dereq_(103) + '-0') !== -Infinity ? function parseFloat(str){
    var string = $trim(String(str), 3)
        , result = $parseFloat(string);
    return result === 0 && string.charAt(0) == '-' ? -0 : result;
  } : $parseFloat;
},{"102":102,"103":103,"38":38}],82:[function(_dereq_,module,exports){
  var $parseInt = _dereq_(38).parseInt
      , $trim     = _dereq_(102).trim
      , ws        = _dereq_(103)
      , hex       = /^[\-+]?0[xX]/;

  module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix){
    var string = $trim(String(str), 3);
    return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
  } : $parseInt;
},{"102":102,"103":103,"38":38}],83:[function(_dereq_,module,exports){
  'use strict';
  var path      = _dereq_(84)
      , invoke    = _dereq_(44)
      , aFunction = _dereq_(3);
  module.exports = function(/* ...pargs */){
    var fn     = aFunction(this)
        , length = arguments.length
        , pargs  = Array(length)
        , i      = 0
        , _      = path._
        , holder = false;
    while(length > i)if((pargs[i] = arguments[i++]) === _)holder = true;
    return function(/* ...args */){
      var that = this
          , aLen = arguments.length
          , j = 0, k = 0, args;
      if(!holder && !aLen)return invoke(fn, pargs, that);
      args = pargs.slice();
      if(holder)for(;length > j; j++)if(args[j] === _)args[j] = arguments[k++];
      while(aLen > k)args.push(arguments[k++]);
      return invoke(fn, args, that);
    };
  };
},{"3":3,"44":44,"84":84}],84:[function(_dereq_,module,exports){
  module.exports = _dereq_(38);
},{"38":38}],85:[function(_dereq_,module,exports){
  module.exports = function(bitmap, value){
    return {
      enumerable  : !(bitmap & 1),
      configurable: !(bitmap & 2),
      writable    : !(bitmap & 4),
      value       : value
    };
  };
},{}],86:[function(_dereq_,module,exports){
  var redefine = _dereq_(87);
  module.exports = function(target, src, safe){
    for(var key in src)redefine(target, key, src[key], safe);
    return target;
  };
},{"87":87}],87:[function(_dereq_,module,exports){
  var global    = _dereq_(38)
      , hide      = _dereq_(40)
      , has       = _dereq_(39)
      , SRC       = _dereq_(114)('src')
      , TO_STRING = 'toString'
      , $toString = Function[TO_STRING]
      , TPL       = ('' + $toString).split(TO_STRING);

  _dereq_(23).inspectSource = function(it){
    return $toString.call(it);
  };

  (module.exports = function(O, key, val, safe){
    var isFunction = typeof val == 'function';
    if(isFunction)has(val, 'name') || hide(val, 'name', key);
    if(O[key] === val)return;
    if(isFunction)has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
    if(O === global){
      O[key] = val;
    } else {
      if(!safe){
        delete O[key];
        hide(O, key, val);
      } else {
        if(O[key])O[key] = val;
        else hide(O, key, val);
      }
    }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
  })(Function.prototype, TO_STRING, function toString(){
    return typeof this == 'function' && this[SRC] || $toString.call(this);
  });
},{"114":114,"23":23,"38":38,"39":39,"40":40}],88:[function(_dereq_,module,exports){
  module.exports = function(regExp, replace){
    var replacer = replace === Object(replace) ? function(part){
      return replace[part];
    } : replace;
    return function(it){
      return String(it).replace(regExp, replacer);
    };
  };
},{}],89:[function(_dereq_,module,exports){
// 7.2.9 SameValue(x, y)
  module.exports = Object.is || function is(x, y){
        return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
      };
},{}],90:[function(_dereq_,module,exports){
// Works with __proto__ only. Old v8 can't work with null proto objects.
  /* eslint-disable no-proto */
  var isObject = _dereq_(49)
      , anObject = _dereq_(7);
  var check = function(O, proto){
    anObject(O);
    if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
  };
  module.exports = {
    set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
        function(test, buggy, set){
          try {
            set = _dereq_(25)(Function.call, _dereq_(70).f(Object.prototype, '__proto__').set, 2);
            set(test, []);
            buggy = !(test instanceof Array);
          } catch(e){ buggy = true; }
          return function setPrototypeOf(O, proto){
            check(O, proto);
            if(buggy)O.__proto__ = proto;
            else set(O, proto);
            return O;
          };
        }({}, false) : undefined),
    check: check
  };
},{"25":25,"49":49,"7":7,"70":70}],91:[function(_dereq_,module,exports){
  'use strict';
  var global      = _dereq_(38)
      , dP          = _dereq_(67)
      , DESCRIPTORS = _dereq_(28)
      , SPECIES     = _dereq_(117)('species');

  module.exports = function(KEY){
    var C = global[KEY];
    if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {
      configurable: true,
      get: function(){ return this; }
    });
  };
},{"117":117,"28":28,"38":38,"67":67}],92:[function(_dereq_,module,exports){
  var def = _dereq_(67).f
      , has = _dereq_(39)
      , TAG = _dereq_(117)('toStringTag');

  module.exports = function(it, tag, stat){
    if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
  };
},{"117":117,"39":39,"67":67}],93:[function(_dereq_,module,exports){
  var shared = _dereq_(94)('keys')
      , uid    = _dereq_(114);
  module.exports = function(key){
    return shared[key] || (shared[key] = uid(key));
  };
},{"114":114,"94":94}],94:[function(_dereq_,module,exports){
  var global = _dereq_(38)
      , SHARED = '__core-js_shared__'
      , store  = global[SHARED] || (global[SHARED] = {});
  module.exports = function(key){
    return store[key] || (store[key] = {});
  };
},{"38":38}],95:[function(_dereq_,module,exports){
// 7.3.20 SpeciesConstructor(O, defaultConstructor)
  var anObject  = _dereq_(7)
      , aFunction = _dereq_(3)
      , SPECIES   = _dereq_(117)('species');
  module.exports = function(O, D){
    var C = anObject(O).constructor, S;
    return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
  };
},{"117":117,"3":3,"7":7}],96:[function(_dereq_,module,exports){
  var fails = _dereq_(34);

  module.exports = function(method, arg){
    return !!method && fails(function(){
          arg ? method.call(null, function(){}, 1) : method.call(null);
        });
  };
},{"34":34}],97:[function(_dereq_,module,exports){
  var toInteger = _dereq_(106)
      , defined   = _dereq_(27);
// true  -> String#at
// false -> String#codePointAt
  module.exports = function(TO_STRING){
    return function(that, pos){
      var s = String(defined(that))
          , i = toInteger(pos)
          , l = s.length
          , a, b;
      if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
      a = s.charCodeAt(i);
      return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
          ? TO_STRING ? s.charAt(i) : a
          : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
    };
  };
},{"106":106,"27":27}],98:[function(_dereq_,module,exports){
// helper for String#{startsWith, endsWith, includes}
  var isRegExp = _dereq_(50)
      , defined  = _dereq_(27);

  module.exports = function(that, searchString, NAME){
    if(isRegExp(searchString))throw TypeError('String#' + NAME + " doesn't accept regex!");
    return String(defined(that));
  };
},{"27":27,"50":50}],99:[function(_dereq_,module,exports){
  var $export = _dereq_(32)
      , fails   = _dereq_(34)
      , defined = _dereq_(27)
      , quot    = /"/g;
// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
  var createHTML = function(string, tag, attribute, value) {
    var S  = String(defined(string))
        , p1 = '<' + tag;
    if(attribute !== '')p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
    return p1 + '>' + S + '</' + tag + '>';
  };
  module.exports = function(NAME, exec){
    var O = {};
    O[NAME] = exec(createHTML);
    $export($export.P + $export.F * fails(function(){
          var test = ''[NAME]('"');
          return test !== test.toLowerCase() || test.split('"').length > 3;
        }), 'String', O);
  };
},{"27":27,"32":32,"34":34}],100:[function(_dereq_,module,exports){
// https://github.com/tc39/proposal-string-pad-start-end
  var toLength = _dereq_(108)
      , repeat   = _dereq_(101)
      , defined  = _dereq_(27);

  module.exports = function(that, maxLength, fillString, left){
    var S            = String(defined(that))
        , stringLength = S.length
        , fillStr      = fillString === undefined ? ' ' : String(fillString)
        , intMaxLength = toLength(maxLength);
    if(intMaxLength <= stringLength || fillStr == '')return S;
    var fillLen = intMaxLength - stringLength
        , stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
    if(stringFiller.length > fillLen)stringFiller = stringFiller.slice(0, fillLen);
    return left ? stringFiller + S : S + stringFiller;
  };

},{"101":101,"108":108,"27":27}],101:[function(_dereq_,module,exports){
  'use strict';
  var toInteger = _dereq_(106)
      , defined   = _dereq_(27);

  module.exports = function repeat(count){
    var str = String(defined(this))
        , res = ''
        , n   = toInteger(count);
    if(n < 0 || n == Infinity)throw RangeError("Count can't be negative");
    for(;n > 0; (n >>>= 1) && (str += str))if(n & 1)res += str;
    return res;
  };
},{"106":106,"27":27}],102:[function(_dereq_,module,exports){
  var $export = _dereq_(32)
      , defined = _dereq_(27)
      , fails   = _dereq_(34)
      , spaces  = _dereq_(103)
      , space   = '[' + spaces + ']'
      , non     = '\u200b\u0085'
      , ltrim   = RegExp('^' + space + space + '*')
      , rtrim   = RegExp(space + space + '*$');

  var exporter = function(KEY, exec, ALIAS){
    var exp   = {};
    var FORCE = fails(function(){
      return !!spaces[KEY]() || non[KEY]() != non;
    });
    var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
    if(ALIAS)exp[ALIAS] = fn;
    $export($export.P + $export.F * FORCE, 'String', exp);
  };

// 1 -> String#trimLeft
// 2 -> String#trimRight
// 3 -> String#trim
  var trim = exporter.trim = function(string, TYPE){
    string = String(defined(string));
    if(TYPE & 1)string = string.replace(ltrim, '');
    if(TYPE & 2)string = string.replace(rtrim, '');
    return string;
  };

  module.exports = exporter;
},{"103":103,"27":27,"32":32,"34":34}],103:[function(_dereq_,module,exports){
  module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
      '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';
},{}],104:[function(_dereq_,module,exports){
  var ctx                = _dereq_(25)
      , invoke             = _dereq_(44)
      , html               = _dereq_(41)
      , cel                = _dereq_(29)
      , global             = _dereq_(38)
      , process            = global.process
      , setTask            = global.setImmediate
      , clearTask          = global.clearImmediate
      , MessageChannel     = global.MessageChannel
      , counter            = 0
      , queue              = {}
      , ONREADYSTATECHANGE = 'onreadystatechange'
      , defer, channel, port;
  var run = function(){
    var id = +this;
    if(queue.hasOwnProperty(id)){
      var fn = queue[id];
      delete queue[id];
      fn();
    }
  };
  var listener = function(event){
    run.call(event.data);
  };
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
  if(!setTask || !clearTask){
    setTask = function setImmediate(fn){
      var args = [], i = 1;
      while(arguments.length > i)args.push(arguments[i++]);
      queue[++counter] = function(){
        invoke(typeof fn == 'function' ? fn : Function(fn), args);
      };
      defer(counter);
      return counter;
    };
    clearTask = function clearImmediate(id){
      delete queue[id];
    };
    // Node.js 0.8-
    if(_dereq_(18)(process) == 'process'){
      defer = function(id){
        process.nextTick(ctx(run, id, 1));
      };
      // Browsers with MessageChannel, includes WebWorkers
    } else if(MessageChannel){
      channel = new MessageChannel;
      port    = channel.port2;
      channel.port1.onmessage = listener;
      defer = ctx(port.postMessage, port, 1);
      // Browsers with postMessage, skip WebWorkers
      // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
    } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){
      defer = function(id){
        global.postMessage(id + '', '*');
      };
      global.addEventListener('message', listener, false);
      // IE8-
    } else if(ONREADYSTATECHANGE in cel('script')){
      defer = function(id){
        html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){
          html.removeChild(this);
          run.call(id);
        };
      };
      // Rest old browsers
    } else {
      defer = function(id){
        setTimeout(ctx(run, id, 1), 0);
      };
    }
  }
  module.exports = {
    set:   setTask,
    clear: clearTask
  };
},{"18":18,"25":25,"29":29,"38":38,"41":41,"44":44}],105:[function(_dereq_,module,exports){
  var toInteger = _dereq_(106)
      , max       = Math.max
      , min       = Math.min;
  module.exports = function(index, length){
    index = toInteger(index);
    return index < 0 ? max(index + length, 0) : min(index, length);
  };
},{"106":106}],106:[function(_dereq_,module,exports){
// 7.1.4 ToInteger
  var ceil  = Math.ceil
      , floor = Math.floor;
  module.exports = function(it){
    return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
  };
},{}],107:[function(_dereq_,module,exports){
// to indexed object, toObject with fallback for non-array-like ES3 strings
  var IObject = _dereq_(45)
      , defined = _dereq_(27);
  module.exports = function(it){
    return IObject(defined(it));
  };
},{"27":27,"45":45}],108:[function(_dereq_,module,exports){
// 7.1.15 ToLength
  var toInteger = _dereq_(106)
      , min       = Math.min;
  module.exports = function(it){
    return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
  };
},{"106":106}],109:[function(_dereq_,module,exports){
// 7.1.13 ToObject(argument)
  var defined = _dereq_(27);
  module.exports = function(it){
    return Object(defined(it));
  };
},{"27":27}],110:[function(_dereq_,module,exports){
// 7.1.1 ToPrimitive(input [, PreferredType])
  var isObject = _dereq_(49);
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
  module.exports = function(it, S){
    if(!isObject(it))return it;
    var fn, val;
    if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
    if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
    if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
    throw TypeError("Can't convert object to primitive value");
  };
},{"49":49}],111:[function(_dereq_,module,exports){
  'use strict';
  if(_dereq_(28)){
    var LIBRARY             = _dereq_(58)
        , global              = _dereq_(38)
        , fails               = _dereq_(34)
        , $export             = _dereq_(32)
        , $typed              = _dereq_(113)
        , $buffer             = _dereq_(112)
        , ctx                 = _dereq_(25)
        , anInstance          = _dereq_(6)
        , propertyDesc        = _dereq_(85)
        , hide                = _dereq_(40)
        , redefineAll         = _dereq_(86)
        , toInteger           = _dereq_(106)
        , toLength            = _dereq_(108)
        , toIndex             = _dereq_(105)
        , toPrimitive         = _dereq_(110)
        , has                 = _dereq_(39)
        , same                = _dereq_(89)
        , classof             = _dereq_(17)
        , isObject            = _dereq_(49)
        , toObject            = _dereq_(109)
        , isArrayIter         = _dereq_(46)
        , create              = _dereq_(66)
        , getPrototypeOf      = _dereq_(74)
        , gOPN                = _dereq_(72).f
        , getIterFn           = _dereq_(118)
        , uid                 = _dereq_(114)
        , wks                 = _dereq_(117)
        , createArrayMethod   = _dereq_(12)
        , createArrayIncludes = _dereq_(11)
        , speciesConstructor  = _dereq_(95)
        , ArrayIterators      = _dereq_(130)
        , Iterators           = _dereq_(56)
        , $iterDetect         = _dereq_(54)
        , setSpecies          = _dereq_(91)
        , arrayFill           = _dereq_(9)
        , arrayCopyWithin     = _dereq_(8)
        , $DP                 = _dereq_(67)
        , $GOPD               = _dereq_(70)
        , dP                  = $DP.f
        , gOPD                = $GOPD.f
        , RangeError          = global.RangeError
        , TypeError           = global.TypeError
        , Uint8Array          = global.Uint8Array
        , ARRAY_BUFFER        = 'ArrayBuffer'
        , SHARED_BUFFER       = 'Shared' + ARRAY_BUFFER
        , BYTES_PER_ELEMENT   = 'BYTES_PER_ELEMENT'
        , PROTOTYPE           = 'prototype'
        , ArrayProto          = Array[PROTOTYPE]
        , $ArrayBuffer        = $buffer.ArrayBuffer
        , $DataView           = $buffer.DataView
        , arrayForEach        = createArrayMethod(0)
        , arrayFilter         = createArrayMethod(2)
        , arraySome           = createArrayMethod(3)
        , arrayEvery          = createArrayMethod(4)
        , arrayFind           = createArrayMethod(5)
        , arrayFindIndex      = createArrayMethod(6)
        , arrayIncludes       = createArrayIncludes(true)
        , arrayIndexOf        = createArrayIncludes(false)
        , arrayValues         = ArrayIterators.values
        , arrayKeys           = ArrayIterators.keys
        , arrayEntries        = ArrayIterators.entries
        , arrayLastIndexOf    = ArrayProto.lastIndexOf
        , arrayReduce         = ArrayProto.reduce
        , arrayReduceRight    = ArrayProto.reduceRight
        , arrayJoin           = ArrayProto.join
        , arraySort           = ArrayProto.sort
        , arraySlice          = ArrayProto.slice
        , arrayToString       = ArrayProto.toString
        , arrayToLocaleString = ArrayProto.toLocaleString
        , ITERATOR            = wks('iterator')
        , TAG                 = wks('toStringTag')
        , TYPED_CONSTRUCTOR   = uid('typed_constructor')
        , DEF_CONSTRUCTOR     = uid('def_constructor')
        , ALL_CONSTRUCTORS    = $typed.CONSTR
        , TYPED_ARRAY         = $typed.TYPED
        , VIEW                = $typed.VIEW
        , WRONG_LENGTH        = 'Wrong length!';

    var $map = createArrayMethod(1, function(O, length){
      return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
    });

    var LITTLE_ENDIAN = fails(function(){
      return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
    });

    var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function(){
          new Uint8Array(1).set({});
        });

    var strictToLength = function(it, SAME){
      if(it === undefined)throw TypeError(WRONG_LENGTH);
      var number = +it
          , length = toLength(it);
      if(SAME && !same(number, length))throw RangeError(WRONG_LENGTH);
      return length;
    };

    var toOffset = function(it, BYTES){
      var offset = toInteger(it);
      if(offset < 0 || offset % BYTES)throw RangeError('Wrong offset!');
      return offset;
    };

    var validate = function(it){
      if(isObject(it) && TYPED_ARRAY in it)return it;
      throw TypeError(it + ' is not a typed array!');
    };

    var allocate = function(C, length){
      if(!(isObject(C) && TYPED_CONSTRUCTOR in C)){
        throw TypeError('It is not a typed array constructor!');
      } return new C(length);
    };

    var speciesFromList = function(O, list){
      return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
    };

    var fromList = function(C, list){
      var index  = 0
          , length = list.length
          , result = allocate(C, length);
      while(length > index)result[index] = list[index++];
      return result;
    };

    var addGetter = function(it, key, internal){
      dP(it, key, {get: function(){ return this._d[internal]; }});
    };

    var $from = function from(source /*, mapfn, thisArg */){
      var O       = toObject(source)
          , aLen    = arguments.length
          , mapfn   = aLen > 1 ? arguments[1] : undefined
          , mapping = mapfn !== undefined
          , iterFn  = getIterFn(O)
          , i, length, values, result, step, iterator;
      if(iterFn != undefined && !isArrayIter(iterFn)){
        for(iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++){
          values.push(step.value);
        } O = values;
      }
      if(mapping && aLen > 2)mapfn = ctx(mapfn, arguments[2], 2);
      for(i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++){
        result[i] = mapping ? mapfn(O[i], i) : O[i];
      }
      return result;
    };

    var $of = function of(/*...items*/){
      var index  = 0
          , length = arguments.length
          , result = allocate(this, length);
      while(length > index)result[index] = arguments[index++];
      return result;
    };

    // iOS Safari 6.x fails here
    var TO_LOCALE_BUG = !!Uint8Array && fails(function(){ arrayToLocaleString.call(new Uint8Array(1)); });

    var $toLocaleString = function toLocaleString(){
      return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
    };

    var proto = {
      copyWithin: function copyWithin(target, start /*, end */){
        return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
      },
      every: function every(callbackfn /*, thisArg */){
        return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
      },
      fill: function fill(value /*, start, end */){ // eslint-disable-line no-unused-vars
        return arrayFill.apply(validate(this), arguments);
      },
      filter: function filter(callbackfn /*, thisArg */){
        return speciesFromList(this, arrayFilter(validate(this), callbackfn,
            arguments.length > 1 ? arguments[1] : undefined));
      },
      find: function find(predicate /*, thisArg */){
        return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
      },
      findIndex: function findIndex(predicate /*, thisArg */){
        return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
      },
      forEach: function forEach(callbackfn /*, thisArg */){
        arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
      },
      indexOf: function indexOf(searchElement /*, fromIndex */){
        return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
      },
      includes: function includes(searchElement /*, fromIndex */){
        return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
      },
      join: function join(separator){ // eslint-disable-line no-unused-vars
        return arrayJoin.apply(validate(this), arguments);
      },
      lastIndexOf: function lastIndexOf(searchElement /*, fromIndex */){ // eslint-disable-line no-unused-vars
        return arrayLastIndexOf.apply(validate(this), arguments);
      },
      map: function map(mapfn /*, thisArg */){
        return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
      },
      reduce: function reduce(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars
        return arrayReduce.apply(validate(this), arguments);
      },
      reduceRight: function reduceRight(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars
        return arrayReduceRight.apply(validate(this), arguments);
      },
      reverse: function reverse(){
        var that   = this
            , length = validate(that).length
            , middle = Math.floor(length / 2)
            , index  = 0
            , value;
        while(index < middle){
          value         = that[index];
          that[index++] = that[--length];
          that[length]  = value;
        } return that;
      },
      some: function some(callbackfn /*, thisArg */){
        return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
      },
      sort: function sort(comparefn){
        return arraySort.call(validate(this), comparefn);
      },
      subarray: function subarray(begin, end){
        var O      = validate(this)
            , length = O.length
            , $begin = toIndex(begin, length);
        return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
            O.buffer,
            O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
            toLength((end === undefined ? length : toIndex(end, length)) - $begin)
        );
      }
    };

    var $slice = function slice(start, end){
      return speciesFromList(this, arraySlice.call(validate(this), start, end));
    };

    var $set = function set(arrayLike /*, offset */){
      validate(this);
      var offset = toOffset(arguments[1], 1)
          , length = this.length
          , src    = toObject(arrayLike)
          , len    = toLength(src.length)
          , index  = 0;
      if(len + offset > length)throw RangeError(WRONG_LENGTH);
      while(index < len)this[offset + index] = src[index++];
    };

    var $iterators = {
      entries: function entries(){
        return arrayEntries.call(validate(this));
      },
      keys: function keys(){
        return arrayKeys.call(validate(this));
      },
      values: function values(){
        return arrayValues.call(validate(this));
      }
    };

    var isTAIndex = function(target, key){
      return isObject(target)
          && target[TYPED_ARRAY]
          && typeof key != 'symbol'
          && key in target
          && String(+key) == String(key);
    };
    var $getDesc = function getOwnPropertyDescriptor(target, key){
      return isTAIndex(target, key = toPrimitive(key, true))
          ? propertyDesc(2, target[key])
          : gOPD(target, key);
    };
    var $setDesc = function defineProperty(target, key, desc){
      if(isTAIndex(target, key = toPrimitive(key, true))
          && isObject(desc)
          && has(desc, 'value')
          && !has(desc, 'get')
          && !has(desc, 'set')
          // TODO: add validation descriptor w/o calling accessors
          && !desc.configurable
          && (!has(desc, 'writable') || desc.writable)
          && (!has(desc, 'enumerable') || desc.enumerable)
      ){
        target[key] = desc.value;
        return target;
      } else return dP(target, key, desc);
    };

    if(!ALL_CONSTRUCTORS){
      $GOPD.f = $getDesc;
      $DP.f   = $setDesc;
    }

    $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
      getOwnPropertyDescriptor: $getDesc,
      defineProperty:           $setDesc
    });

    if(fails(function(){ arrayToString.call({}); })){
      arrayToString = arrayToLocaleString = function toString(){
        return arrayJoin.call(this);
      }
    }

    var $TypedArrayPrototype$ = redefineAll({}, proto);
    redefineAll($TypedArrayPrototype$, $iterators);
    hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
    redefineAll($TypedArrayPrototype$, {
      slice:          $slice,
      set:            $set,
      constructor:    function(){ /* noop */ },
      toString:       arrayToString,
      toLocaleString: $toLocaleString
    });
    addGetter($TypedArrayPrototype$, 'buffer', 'b');
    addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
    addGetter($TypedArrayPrototype$, 'byteLength', 'l');
    addGetter($TypedArrayPrototype$, 'length', 'e');
    dP($TypedArrayPrototype$, TAG, {
      get: function(){ return this[TYPED_ARRAY]; }
    });

    module.exports = function(KEY, BYTES, wrapper, CLAMPED){
      CLAMPED = !!CLAMPED;
      var NAME       = KEY + (CLAMPED ? 'Clamped' : '') + 'Array'
          , ISNT_UINT8 = NAME != 'Uint8Array'
          , GETTER     = 'get' + KEY
          , SETTER     = 'set' + KEY
          , TypedArray = global[NAME]
          , Base       = TypedArray || {}
          , TAC        = TypedArray && getPrototypeOf(TypedArray)
          , FORCED     = !TypedArray || !$typed.ABV
          , O          = {}
          , TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
      var getter = function(that, index){
        var data = that._d;
        return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
      };
      var setter = function(that, index, value){
        var data = that._d;
        if(CLAMPED)value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
        data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
      };
      var addElement = function(that, index){
        dP(that, index, {
          get: function(){
            return getter(this, index);
          },
          set: function(value){
            return setter(this, index, value);
          },
          enumerable: true
        });
      };
      if(FORCED){
        TypedArray = wrapper(function(that, data, $offset, $length){
          anInstance(that, TypedArray, NAME, '_d');
          var index  = 0
              , offset = 0
              , buffer, byteLength, length, klass;
          if(!isObject(data)){
            length     = strictToLength(data, true)
            byteLength = length * BYTES;
            buffer     = new $ArrayBuffer(byteLength);
          } else if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){
            buffer = data;
            offset = toOffset($offset, BYTES);
            var $len = data.byteLength;
            if($length === undefined){
              if($len % BYTES)throw RangeError(WRONG_LENGTH);
              byteLength = $len - offset;
              if(byteLength < 0)throw RangeError(WRONG_LENGTH);
            } else {
              byteLength = toLength($length) * BYTES;
              if(byteLength + offset > $len)throw RangeError(WRONG_LENGTH);
            }
            length = byteLength / BYTES;
          } else if(TYPED_ARRAY in data){
            return fromList(TypedArray, data);
          } else {
            return $from.call(TypedArray, data);
          }
          hide(that, '_d', {
            b: buffer,
            o: offset,
            l: byteLength,
            e: length,
            v: new $DataView(buffer)
          });
          while(index < length)addElement(that, index++);
        });
        TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
        hide(TypedArrayPrototype, 'constructor', TypedArray);
      } else if(!$iterDetect(function(iter){
            // V8 works with iterators, but fails in many other cases
            // https://code.google.com/p/v8/issues/detail?id=4552
            new TypedArray(null); // eslint-disable-line no-new
            new TypedArray(iter); // eslint-disable-line no-new
          }, true)){
        TypedArray = wrapper(function(that, data, $offset, $length){
          anInstance(that, TypedArray, NAME);
          var klass;
          // `ws` module bug, temporarily remove validation length for Uint8Array
          // https://github.com/websockets/ws/pull/645
          if(!isObject(data))return new Base(strictToLength(data, ISNT_UINT8));
          if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){
            return $length !== undefined
                ? new Base(data, toOffset($offset, BYTES), $length)
                : $offset !== undefined
                ? new Base(data, toOffset($offset, BYTES))
                : new Base(data);
          }
          if(TYPED_ARRAY in data)return fromList(TypedArray, data);
          return $from.call(TypedArray, data);
        });
        arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function(key){
          if(!(key in TypedArray))hide(TypedArray, key, Base[key]);
        });
        TypedArray[PROTOTYPE] = TypedArrayPrototype;
        if(!LIBRARY)TypedArrayPrototype.constructor = TypedArray;
      }
      var $nativeIterator   = TypedArrayPrototype[ITERATOR]
          , CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined)
          , $iterator         = $iterators.values;
      hide(TypedArray, TYPED_CONSTRUCTOR, true);
      hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
      hide(TypedArrayPrototype, VIEW, true);
      hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

      if(CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)){
        dP(TypedArrayPrototype, TAG, {
          get: function(){ return NAME; }
        });
      }

      O[NAME] = TypedArray;

      $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

      $export($export.S, NAME, {
        BYTES_PER_ELEMENT: BYTES,
        from: $from,
        of: $of
      });

      if(!(BYTES_PER_ELEMENT in TypedArrayPrototype))hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

      $export($export.P, NAME, proto);

      setSpecies(NAME);

      $export($export.P + $export.F * FORCED_SET, NAME, {set: $set});

      $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

      $export($export.P + $export.F * (TypedArrayPrototype.toString != arrayToString), NAME, {toString: arrayToString});

      $export($export.P + $export.F * fails(function(){
            new TypedArray(1).slice();
          }), NAME, {slice: $slice});

      $export($export.P + $export.F * (fails(function(){
            return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString()
          }) || !fails(function(){
            TypedArrayPrototype.toLocaleString.call([1, 2]);
          })), NAME, {toLocaleString: $toLocaleString});

      Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
      if(!LIBRARY && !CORRECT_ITER_NAME)hide(TypedArrayPrototype, ITERATOR, $iterator);
    };
  } else module.exports = function(){ /* empty */ };
},{"105":105,"106":106,"108":108,"109":109,"11":11,"110":110,"112":112,"113":113,"114":114,"117":117,"118":118,"12":12,"130":130,"17":17,"25":25,"28":28,"32":32,"34":34,"38":38,"39":39,"40":40,"46":46,"49":49,"54":54,"56":56,"58":58,"6":6,"66":66,"67":67,"70":70,"72":72,"74":74,"8":8,"85":85,"86":86,"89":89,"9":9,"91":91,"95":95}],112:[function(_dereq_,module,exports){
  'use strict';
  var global         = _dereq_(38)
      , DESCRIPTORS    = _dereq_(28)
      , LIBRARY        = _dereq_(58)
      , $typed         = _dereq_(113)
      , hide           = _dereq_(40)
      , redefineAll    = _dereq_(86)
      , fails          = _dereq_(34)
      , anInstance     = _dereq_(6)
      , toInteger      = _dereq_(106)
      , toLength       = _dereq_(108)
      , gOPN           = _dereq_(72).f
      , dP             = _dereq_(67).f
      , arrayFill      = _dereq_(9)
      , setToStringTag = _dereq_(92)
      , ARRAY_BUFFER   = 'ArrayBuffer'
      , DATA_VIEW      = 'DataView'
      , PROTOTYPE      = 'prototype'
      , WRONG_LENGTH   = 'Wrong length!'
      , WRONG_INDEX    = 'Wrong index!'
      , $ArrayBuffer   = global[ARRAY_BUFFER]
      , $DataView      = global[DATA_VIEW]
      , Math           = global.Math
      , RangeError     = global.RangeError
      , Infinity       = global.Infinity
      , BaseBuffer     = $ArrayBuffer
      , abs            = Math.abs
      , pow            = Math.pow
      , floor          = Math.floor
      , log            = Math.log
      , LN2            = Math.LN2
      , BUFFER         = 'buffer'
      , BYTE_LENGTH    = 'byteLength'
      , BYTE_OFFSET    = 'byteOffset'
      , $BUFFER        = DESCRIPTORS ? '_b' : BUFFER
      , $LENGTH        = DESCRIPTORS ? '_l' : BYTE_LENGTH
      , $OFFSET        = DESCRIPTORS ? '_o' : BYTE_OFFSET;

// IEEE754 conversions based on https://github.com/feross/ieee754
  var packIEEE754 = function(value, mLen, nBytes){
    var buffer = Array(nBytes)
        , eLen   = nBytes * 8 - mLen - 1
        , eMax   = (1 << eLen) - 1
        , eBias  = eMax >> 1
        , rt     = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0
        , i      = 0
        , s      = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0
        , e, m, c;
    value = abs(value)
    if(value != value || value === Infinity){
      m = value != value ? 1 : 0;
      e = eMax;
    } else {
      e = floor(log(value) / LN2);
      if(value * (c = pow(2, -e)) < 1){
        e--;
        c *= 2;
      }
      if(e + eBias >= 1){
        value += rt / c;
      } else {
        value += rt * pow(2, 1 - eBias);
      }
      if(value * c >= 2){
        e++;
        c /= 2;
      }
      if(e + eBias >= eMax){
        m = 0;
        e = eMax;
      } else if(e + eBias >= 1){
        m = (value * c - 1) * pow(2, mLen);
        e = e + eBias;
      } else {
        m = value * pow(2, eBias - 1) * pow(2, mLen);
        e = 0;
      }
    }
    for(; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
    e = e << mLen | m;
    eLen += mLen;
    for(; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
    buffer[--i] |= s * 128;
    return buffer;
  };
  var unpackIEEE754 = function(buffer, mLen, nBytes){
    var eLen  = nBytes * 8 - mLen - 1
        , eMax  = (1 << eLen) - 1
        , eBias = eMax >> 1
        , nBits = eLen - 7
        , i     = nBytes - 1
        , s     = buffer[i--]
        , e     = s & 127
        , m;
    s >>= 7;
    for(; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
    m = e & (1 << -nBits) - 1;
    e >>= -nBits;
    nBits += mLen;
    for(; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
    if(e === 0){
      e = 1 - eBias;
    } else if(e === eMax){
      return m ? NaN : s ? -Infinity : Infinity;
    } else {
      m = m + pow(2, mLen);
      e = e - eBias;
    } return (s ? -1 : 1) * m * pow(2, e - mLen);
  };

  var unpackI32 = function(bytes){
    return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
  };
  var packI8 = function(it){
    return [it & 0xff];
  };
  var packI16 = function(it){
    return [it & 0xff, it >> 8 & 0xff];
  };
  var packI32 = function(it){
    return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
  };
  var packF64 = function(it){
    return packIEEE754(it, 52, 8);
  };
  var packF32 = function(it){
    return packIEEE754(it, 23, 4);
  };

  var addGetter = function(C, key, internal){
    dP(C[PROTOTYPE], key, {get: function(){ return this[internal]; }});
  };

  var get = function(view, bytes, index, isLittleEndian){
    var numIndex = +index
        , intIndex = toInteger(numIndex);
    if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);
    var store = view[$BUFFER]._b
        , start = intIndex + view[$OFFSET]
        , pack  = store.slice(start, start + bytes);
    return isLittleEndian ? pack : pack.reverse();
  };
  var set = function(view, bytes, index, conversion, value, isLittleEndian){
    var numIndex = +index
        , intIndex = toInteger(numIndex);
    if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);
    var store = view[$BUFFER]._b
        , start = intIndex + view[$OFFSET]
        , pack  = conversion(+value);
    for(var i = 0; i < bytes; i++)store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
  };

  var validateArrayBufferArguments = function(that, length){
    anInstance(that, $ArrayBuffer, ARRAY_BUFFER);
    var numberLength = +length
        , byteLength   = toLength(numberLength);
    if(numberLength != byteLength)throw RangeError(WRONG_LENGTH);
    return byteLength;
  };

  if(!$typed.ABV){
    $ArrayBuffer = function ArrayBuffer(length){
      var byteLength = validateArrayBufferArguments(this, length);
      this._b       = arrayFill.call(Array(byteLength), 0);
      this[$LENGTH] = byteLength;
    };

    $DataView = function DataView(buffer, byteOffset, byteLength){
      anInstance(this, $DataView, DATA_VIEW);
      anInstance(buffer, $ArrayBuffer, DATA_VIEW);
      var bufferLength = buffer[$LENGTH]
          , offset       = toInteger(byteOffset);
      if(offset < 0 || offset > bufferLength)throw RangeError('Wrong offset!');
      byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
      if(offset + byteLength > bufferLength)throw RangeError(WRONG_LENGTH);
      this[$BUFFER] = buffer;
      this[$OFFSET] = offset;
      this[$LENGTH] = byteLength;
    };

    if(DESCRIPTORS){
      addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
      addGetter($DataView, BUFFER, '_b');
      addGetter($DataView, BYTE_LENGTH, '_l');
      addGetter($DataView, BYTE_OFFSET, '_o');
    }

    redefineAll($DataView[PROTOTYPE], {
      getInt8: function getInt8(byteOffset){
        return get(this, 1, byteOffset)[0] << 24 >> 24;
      },
      getUint8: function getUint8(byteOffset){
        return get(this, 1, byteOffset)[0];
      },
      getInt16: function getInt16(byteOffset /*, littleEndian */){
        var bytes = get(this, 2, byteOffset, arguments[1]);
        return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
      },
      getUint16: function getUint16(byteOffset /*, littleEndian */){
        var bytes = get(this, 2, byteOffset, arguments[1]);
        return bytes[1] << 8 | bytes[0];
      },
      getInt32: function getInt32(byteOffset /*, littleEndian */){
        return unpackI32(get(this, 4, byteOffset, arguments[1]));
      },
      getUint32: function getUint32(byteOffset /*, littleEndian */){
        return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
      },
      getFloat32: function getFloat32(byteOffset /*, littleEndian */){
        return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
      },
      getFloat64: function getFloat64(byteOffset /*, littleEndian */){
        return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
      },
      setInt8: function setInt8(byteOffset, value){
        set(this, 1, byteOffset, packI8, value);
      },
      setUint8: function setUint8(byteOffset, value){
        set(this, 1, byteOffset, packI8, value);
      },
      setInt16: function setInt16(byteOffset, value /*, littleEndian */){
        set(this, 2, byteOffset, packI16, value, arguments[2]);
      },
      setUint16: function setUint16(byteOffset, value /*, littleEndian */){
        set(this, 2, byteOffset, packI16, value, arguments[2]);
      },
      setInt32: function setInt32(byteOffset, value /*, littleEndian */){
        set(this, 4, byteOffset, packI32, value, arguments[2]);
      },
      setUint32: function setUint32(byteOffset, value /*, littleEndian */){
        set(this, 4, byteOffset, packI32, value, arguments[2]);
      },
      setFloat32: function setFloat32(byteOffset, value /*, littleEndian */){
        set(this, 4, byteOffset, packF32, value, arguments[2]);
      },
      setFloat64: function setFloat64(byteOffset, value /*, littleEndian */){
        set(this, 8, byteOffset, packF64, value, arguments[2]);
      }
    });
  } else {
    if(!fails(function(){
          new $ArrayBuffer;     // eslint-disable-line no-new
        }) || !fails(function(){
          new $ArrayBuffer(.5); // eslint-disable-line no-new
        })){
      $ArrayBuffer = function ArrayBuffer(length){
        return new BaseBuffer(validateArrayBufferArguments(this, length));
      };
      var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
      for(var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j; ){
        if(!((key = keys[j++]) in $ArrayBuffer))hide($ArrayBuffer, key, BaseBuffer[key]);
      };
      if(!LIBRARY)ArrayBufferProto.constructor = $ArrayBuffer;
    }
    // iOS Safari 7.x bug
    var view = new $DataView(new $ArrayBuffer(2))
        , $setInt8 = $DataView[PROTOTYPE].setInt8;
    view.setInt8(0, 2147483648);
    view.setInt8(1, 2147483649);
    if(view.getInt8(0) || !view.getInt8(1))redefineAll($DataView[PROTOTYPE], {
      setInt8: function setInt8(byteOffset, value){
        $setInt8.call(this, byteOffset, value << 24 >> 24);
      },
      setUint8: function setUint8(byteOffset, value){
        $setInt8.call(this, byteOffset, value << 24 >> 24);
      }
    }, true);
  }
  setToStringTag($ArrayBuffer, ARRAY_BUFFER);
  setToStringTag($DataView, DATA_VIEW);
  hide($DataView[PROTOTYPE], $typed.VIEW, true);
  exports[ARRAY_BUFFER] = $ArrayBuffer;
  exports[DATA_VIEW] = $DataView;
},{"106":106,"108":108,"113":113,"28":28,"34":34,"38":38,"40":40,"58":58,"6":6,"67":67,"72":72,"86":86,"9":9,"92":92}],113:[function(_dereq_,module,exports){
  var global = _dereq_(38)
      , hide   = _dereq_(40)
      , uid    = _dereq_(114)
      , TYPED  = uid('typed_array')
      , VIEW   = uid('view')
      , ABV    = !!(global.ArrayBuffer && global.DataView)
      , CONSTR = ABV
      , i = 0, l = 9, Typed;

  var TypedArrayConstructors = (
      'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
  ).split(',');

  while(i < l){
    if(Typed = global[TypedArrayConstructors[i++]]){
      hide(Typed.prototype, TYPED, true);
      hide(Typed.prototype, VIEW, true);
    } else CONSTR = false;
  }

  module.exports = {
    ABV:    ABV,
    CONSTR: CONSTR,
    TYPED:  TYPED,
    VIEW:   VIEW
  };
},{"114":114,"38":38,"40":40}],114:[function(_dereq_,module,exports){
  var id = 0
      , px = Math.random();
  module.exports = function(key){
    return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
  };
},{}],115:[function(_dereq_,module,exports){
  var global         = _dereq_(38)
      , core           = _dereq_(23)
      , LIBRARY        = _dereq_(58)
      , wksExt         = _dereq_(116)
      , defineProperty = _dereq_(67).f;
  module.exports = function(name){
    var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
    if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});
  };
},{"116":116,"23":23,"38":38,"58":58,"67":67}],116:[function(_dereq_,module,exports){
  exports.f = _dereq_(117);
},{"117":117}],117:[function(_dereq_,module,exports){
  var store      = _dereq_(94)('wks')
      , uid        = _dereq_(114)
      , Symbol     = _dereq_(38).Symbol
      , USE_SYMBOL = typeof Symbol == 'function';

  var $exports = module.exports = function(name){
    return store[name] || (store[name] =
            USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
  };

  $exports.store = store;
},{"114":114,"38":38,"94":94}],118:[function(_dereq_,module,exports){
  var classof   = _dereq_(17)
      , ITERATOR  = _dereq_(117)('iterator')
      , Iterators = _dereq_(56);
  module.exports = _dereq_(23).getIteratorMethod = function(it){
    if(it != undefined)return it[ITERATOR]
        || it['@@iterator']
        || Iterators[classof(it)];
  };
},{"117":117,"17":17,"23":23,"56":56}],119:[function(_dereq_,module,exports){
// https://github.com/benjamingr/RexExp.escape
  var $export = _dereq_(32)
      , $re     = _dereq_(88)(/[\\^$*+?.()|[\]{}]/g, '\\$&');

  $export($export.S, 'RegExp', {escape: function escape(it){ return $re(it); }});

},{"32":32,"88":88}],120:[function(_dereq_,module,exports){
// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
  var $export = _dereq_(32);

  $export($export.P, 'Array', {copyWithin: _dereq_(8)});

  _dereq_(5)('copyWithin');
},{"32":32,"5":5,"8":8}],121:[function(_dereq_,module,exports){
  'use strict';
  var $export = _dereq_(32)
      , $every  = _dereq_(12)(4);

  $export($export.P + $export.F * !_dereq_(96)([].every, true), 'Array', {
    // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
    every: function every(callbackfn /* , thisArg */){
      return $every(this, callbackfn, arguments[1]);
    }
  });
},{"12":12,"32":32,"96":96}],122:[function(_dereq_,module,exports){
// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
  var $export = _dereq_(32);

  $export($export.P, 'Array', {fill: _dereq_(9)});

  _dereq_(5)('fill');
},{"32":32,"5":5,"9":9}],123:[function(_dereq_,module,exports){
  'use strict';
  var $export = _dereq_(32)
      , $filter = _dereq_(12)(2);

  $export($export.P + $export.F * !_dereq_(96)([].filter, true), 'Array', {
    // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
    filter: function filter(callbackfn /* , thisArg */){
      return $filter(this, callbackfn, arguments[1]);
    }
  });
},{"12":12,"32":32,"96":96}],124:[function(_dereq_,module,exports){
  'use strict';
// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
  var $export = _dereq_(32)
      , $find   = _dereq_(12)(6)
      , KEY     = 'findIndex'
      , forced  = true;
// Shouldn't skip holes
  if(KEY in [])Array(1)[KEY](function(){ forced = false; });
  $export($export.P + $export.F * forced, 'Array', {
    findIndex: function findIndex(callbackfn/*, that = undefined */){
      return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    }
  });
  _dereq_(5)(KEY);
},{"12":12,"32":32,"5":5}],125:[function(_dereq_,module,exports){
  'use strict';
// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
  var $export = _dereq_(32)
      , $find   = _dereq_(12)(5)
      , KEY     = 'find'
      , forced  = true;
// Shouldn't skip holes
  if(KEY in [])Array(1)[KEY](function(){ forced = false; });
  $export($export.P + $export.F * forced, 'Array', {
    find: function find(callbackfn/*, that = undefined */){
      return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    }
  });
  _dereq_(5)(KEY);
},{"12":12,"32":32,"5":5}],126:[function(_dereq_,module,exports){
  'use strict';
  var $export  = _dereq_(32)
      , $forEach = _dereq_(12)(0)
      , STRICT   = _dereq_(96)([].forEach, true);

  $export($export.P + $export.F * !STRICT, 'Array', {
    // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
    forEach: function forEach(callbackfn /* , thisArg */){
      return $forEach(this, callbackfn, arguments[1]);
    }
  });
},{"12":12,"32":32,"96":96}],127:[function(_dereq_,module,exports){
  'use strict';
  var ctx            = _dereq_(25)
      , $export        = _dereq_(32)
      , toObject       = _dereq_(109)
      , call           = _dereq_(51)
      , isArrayIter    = _dereq_(46)
      , toLength       = _dereq_(108)
      , createProperty = _dereq_(24)
      , getIterFn      = _dereq_(118);

  $export($export.S + $export.F * !_dereq_(54)(function(iter){ Array.from(iter); }), 'Array', {
    // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
    from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){
      var O       = toObject(arrayLike)
          , C       = typeof this == 'function' ? this : Array
          , aLen    = arguments.length
          , mapfn   = aLen > 1 ? arguments[1] : undefined
          , mapping = mapfn !== undefined
          , index   = 0
          , iterFn  = getIterFn(O)
          , length, result, step, iterator;
      if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
      // if object isn't iterable or it's array with default iterator - use simple case
      if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){
        for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){
          createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
        }
      } else {
        length = toLength(O.length);
        for(result = new C(length); length > index; index++){
          createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
        }
      }
      result.length = index;
      return result;
    }
  });

},{"108":108,"109":109,"118":118,"24":24,"25":25,"32":32,"46":46,"51":51,"54":54}],128:[function(_dereq_,module,exports){
  'use strict';
  var $export       = _dereq_(32)
      , $indexOf      = _dereq_(11)(false)
      , $native       = [].indexOf
      , NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;

  $export($export.P + $export.F * (NEGATIVE_ZERO || !_dereq_(96)($native)), 'Array', {
    // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
    indexOf: function indexOf(searchElement /*, fromIndex = 0 */){
      return NEGATIVE_ZERO
          // convert -0 to +0
          ? $native.apply(this, arguments) || 0
          : $indexOf(this, searchElement, arguments[1]);
    }
  });
},{"11":11,"32":32,"96":96}],129:[function(_dereq_,module,exports){
// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
  var $export = _dereq_(32);

  $export($export.S, 'Array', {isArray: _dereq_(47)});
},{"32":32,"47":47}],130:[function(_dereq_,module,exports){
  'use strict';
  var addToUnscopables = _dereq_(5)
      , step             = _dereq_(55)
      , Iterators        = _dereq_(56)
      , toIObject        = _dereq_(107);

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
  module.exports = _dereq_(53)(Array, 'Array', function(iterated, kind){
    this._t = toIObject(iterated); // target
    this._i = 0;                   // next index
    this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
  }, function(){
    var O     = this._t
        , kind  = this._k
        , index = this._i++;
    if(!O || index >= O.length){
      this._t = undefined;
      return step(1);
    }
    if(kind == 'keys'  )return step(0, index);
    if(kind == 'values')return step(0, O[index]);
    return step(0, [index, O[index]]);
  }, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
  Iterators.Arguments = Iterators.Array;

  addToUnscopables('keys');
  addToUnscopables('values');
  addToUnscopables('entries');
},{"107":107,"5":5,"53":53,"55":55,"56":56}],131:[function(_dereq_,module,exports){
  'use strict';
// 22.1.3.13 Array.prototype.join(separator)
  var $export   = _dereq_(32)
      , toIObject = _dereq_(107)
      , arrayJoin = [].join;

// fallback for not array-like strings
  $export($export.P + $export.F * (_dereq_(45) != Object || !_dereq_(96)(arrayJoin)), 'Array', {
    join: function join(separator){
      return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
    }
  });
},{"107":107,"32":32,"45":45,"96":96}],132:[function(_dereq_,module,exports){
  'use strict';
  var $export       = _dereq_(32)
      , toIObject     = _dereq_(107)
      , toInteger     = _dereq_(106)
      , toLength      = _dereq_(108)
      , $native       = [].lastIndexOf
      , NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;

  $export($export.P + $export.F * (NEGATIVE_ZERO || !_dereq_(96)($native)), 'Array', {
    // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
    lastIndexOf: function lastIndexOf(searchElement /*, fromIndex = @[*-1] */){
      // convert -0 to +0
      if(NEGATIVE_ZERO)return $native.apply(this, arguments) || 0;
      var O      = toIObject(this)
          , length = toLength(O.length)
          , index  = length - 1;
      if(arguments.length > 1)index = Math.min(index, toInteger(arguments[1]));
      if(index < 0)index = length + index;
      for(;index >= 0; index--)if(index in O)if(O[index] === searchElement)return index || 0;
      return -1;
    }
  });
},{"106":106,"107":107,"108":108,"32":32,"96":96}],133:[function(_dereq_,module,exports){
  'use strict';
  var $export = _dereq_(32)
      , $map    = _dereq_(12)(1);

  $export($export.P + $export.F * !_dereq_(96)([].map, true), 'Array', {
    // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
    map: function map(callbackfn /* , thisArg */){
      return $map(this, callbackfn, arguments[1]);
    }
  });
},{"12":12,"32":32,"96":96}],134:[function(_dereq_,module,exports){
  'use strict';
  var $export        = _dereq_(32)
      , createProperty = _dereq_(24);

// WebKit Array.of isn't generic
  $export($export.S + $export.F * _dereq_(34)(function(){
        function F(){}
        return !(Array.of.call(F) instanceof F);
      }), 'Array', {
    // 22.1.2.3 Array.of( ...items)
    of: function of(/* ...args */){
      var index  = 0
          , aLen   = arguments.length
          , result = new (typeof this == 'function' ? this : Array)(aLen);
      while(aLen > index)createProperty(result, index, arguments[index++]);
      result.length = aLen;
      return result;
    }
  });
},{"24":24,"32":32,"34":34}],135:[function(_dereq_,module,exports){
  'use strict';
  var $export = _dereq_(32)
      , $reduce = _dereq_(13);

  $export($export.P + $export.F * !_dereq_(96)([].reduceRight, true), 'Array', {
    // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
    reduceRight: function reduceRight(callbackfn /* , initialValue */){
      return $reduce(this, callbackfn, arguments.length, arguments[1], true);
    }
  });
},{"13":13,"32":32,"96":96}],136:[function(_dereq_,module,exports){
  'use strict';
  var $export = _dereq_(32)
      , $reduce = _dereq_(13);

  $export($export.P + $export.F * !_dereq_(96)([].reduce, true), 'Array', {
    // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
    reduce: function reduce(callbackfn /* , initialValue */){
      return $reduce(this, callbackfn, arguments.length, arguments[1], false);
    }
  });
},{"13":13,"32":32,"96":96}],137:[function(_dereq_,module,exports){
  'use strict';
  var $export    = _dereq_(32)
      , html       = _dereq_(41)
      , cof        = _dereq_(18)
      , toIndex    = _dereq_(105)
      , toLength   = _dereq_(108)
      , arraySlice = [].slice;

// fallback for not array-like ES3 strings and DOM objects
  $export($export.P + $export.F * _dereq_(34)(function(){
        if(html)arraySlice.call(html);
      }), 'Array', {
    slice: function slice(begin, end){
      var len   = toLength(this.length)
          , klass = cof(this);
      end = end === undefined ? len : end;
      if(klass == 'Array')return arraySlice.call(this, begin, end);
      var start  = toIndex(begin, len)
          , upTo   = toIndex(end, len)
          , size   = toLength(upTo - start)
          , cloned = Array(size)
          , i      = 0;
      for(; i < size; i++)cloned[i] = klass == 'String'
          ? this.charAt(start + i)
          : this[start + i];
      return cloned;
    }
  });
},{"105":105,"108":108,"18":18,"32":32,"34":34,"41":41}],138:[function(_dereq_,module,exports){
  'use strict';
  var $export = _dereq_(32)
      , $some   = _dereq_(12)(3);

  $export($export.P + $export.F * !_dereq_(96)([].some, true), 'Array', {
    // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
    some: function some(callbackfn /* , thisArg */){
      return $some(this, callbackfn, arguments[1]);
    }
  });
},{"12":12,"32":32,"96":96}],139:[function(_dereq_,module,exports){
  'use strict';
  var $export   = _dereq_(32)
      , aFunction = _dereq_(3)
      , toObject  = _dereq_(109)
      , fails     = _dereq_(34)
      , $sort     = [].sort
      , test      = [1, 2, 3];

  $export($export.P + $export.F * (fails(function(){
        // IE8-
        test.sort(undefined);
      }) || !fails(function(){
        // V8 bug
        test.sort(null);
        // Old WebKit
      }) || !_dereq_(96)($sort)), 'Array', {
    // 22.1.3.25 Array.prototype.sort(comparefn)
    sort: function sort(comparefn){
      return comparefn === undefined
          ? $sort.call(toObject(this))
          : $sort.call(toObject(this), aFunction(comparefn));
    }
  });
},{"109":109,"3":3,"32":32,"34":34,"96":96}],140:[function(_dereq_,module,exports){
  _dereq_(91)('Array');
},{"91":91}],141:[function(_dereq_,module,exports){
// 20.3.3.1 / 15.9.4.4 Date.now()
  var $export = _dereq_(32);

  $export($export.S, 'Date', {now: function(){ return new Date().getTime(); }});
},{"32":32}],142:[function(_dereq_,module,exports){
  'use strict';
// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
  var $export = _dereq_(32)
      , fails   = _dereq_(34)
      , getTime = Date.prototype.getTime;

  var lz = function(num){
    return num > 9 ? num : '0' + num;
  };

// PhantomJS / old WebKit has a broken implementations
  $export($export.P + $export.F * (fails(function(){
        return new Date(-5e13 - 1).toISOString() != '0385-07-25T07:06:39.999Z';
      }) || !fails(function(){
        new Date(NaN).toISOString();
      })), 'Date', {
    toISOString: function toISOString(){
      if(!isFinite(getTime.call(this)))throw RangeError('Invalid time value');
      var d = this
          , y = d.getUTCFullYear()
          , m = d.getUTCMilliseconds()
          , s = y < 0 ? '-' : y > 9999 ? '+' : '';
      return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
          '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +
          'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +
          ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
    }
  });
},{"32":32,"34":34}],143:[function(_dereq_,module,exports){
  'use strict';
  var $export     = _dereq_(32)
      , toObject    = _dereq_(109)
      , toPrimitive = _dereq_(110);

  $export($export.P + $export.F * _dereq_(34)(function(){
        return new Date(NaN).toJSON() !== null || Date.prototype.toJSON.call({toISOString: function(){ return 1; }}) !== 1;
      }), 'Date', {
    toJSON: function toJSON(key){
      var O  = toObject(this)
          , pv = toPrimitive(O);
      return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
    }
  });
},{"109":109,"110":110,"32":32,"34":34}],144:[function(_dereq_,module,exports){
  var TO_PRIMITIVE = _dereq_(117)('toPrimitive')
      , proto        = Date.prototype;

  if(!(TO_PRIMITIVE in proto))_dereq_(40)(proto, TO_PRIMITIVE, _dereq_(26));
},{"117":117,"26":26,"40":40}],145:[function(_dereq_,module,exports){
  var DateProto    = Date.prototype
      , INVALID_DATE = 'Invalid Date'
      , TO_STRING    = 'toString'
      , $toString    = DateProto[TO_STRING]
      , getTime      = DateProto.getTime;
  if(new Date(NaN) + '' != INVALID_DATE){
    _dereq_(87)(DateProto, TO_STRING, function toString(){
      var value = getTime.call(this);
      return value === value ? $toString.call(this) : INVALID_DATE;
    });
  }
},{"87":87}],146:[function(_dereq_,module,exports){
// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
  var $export = _dereq_(32);

  $export($export.P, 'Function', {bind: _dereq_(16)});
},{"16":16,"32":32}],147:[function(_dereq_,module,exports){
  'use strict';
  var isObject       = _dereq_(49)
      , getPrototypeOf = _dereq_(74)
      , HAS_INSTANCE   = _dereq_(117)('hasInstance')
      , FunctionProto  = Function.prototype;
// 19.2.3.6 Function.prototype[@@hasInstance](V)
  if(!(HAS_INSTANCE in FunctionProto))_dereq_(67).f(FunctionProto, HAS_INSTANCE, {value: function(O){
    if(typeof this != 'function' || !isObject(O))return false;
    if(!isObject(this.prototype))return O instanceof this;
    // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
    while(O = getPrototypeOf(O))if(this.prototype === O)return true;
    return false;
  }});
},{"117":117,"49":49,"67":67,"74":74}],148:[function(_dereq_,module,exports){
  var dP         = _dereq_(67).f
      , createDesc = _dereq_(85)
      , has        = _dereq_(39)
      , FProto     = Function.prototype
      , nameRE     = /^\s*function ([^ (]*)/
      , NAME       = 'name';

  var isExtensible = Object.isExtensible || function(){
        return true;
      };

// 19.2.4.2 name
  NAME in FProto || _dereq_(28) && dP(FProto, NAME, {
    configurable: true,
    get: function(){
      try {
        var that = this
            , name = ('' + that).match(nameRE)[1];
        has(that, NAME) || !isExtensible(that) || dP(that, NAME, createDesc(5, name));
        return name;
      } catch(e){
        return '';
      }
    }
  });
},{"28":28,"39":39,"67":67,"85":85}],149:[function(_dereq_,module,exports){
  'use strict';
  var strong = _dereq_(19);

// 23.1 Map Objects
  module.exports = _dereq_(22)('Map', function(get){
    return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
  }, {
    // 23.1.3.6 Map.prototype.get(key)
    get: function get(key){
      var entry = strong.getEntry(this, key);
      return entry && entry.v;
    },
    // 23.1.3.9 Map.prototype.set(key, value)
    set: function set(key, value){
      return strong.def(this, key === 0 ? 0 : key, value);
    }
  }, strong, true);
},{"19":19,"22":22}],150:[function(_dereq_,module,exports){
// 20.2.2.3 Math.acosh(x)
  var $export = _dereq_(32)
      , log1p   = _dereq_(60)
      , sqrt    = Math.sqrt
      , $acosh  = Math.acosh;

  $export($export.S + $export.F * !($acosh
          // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
          && Math.floor($acosh(Number.MAX_VALUE)) == 710
          // Tor Browser bug: Math.acosh(Infinity) -> NaN
          && $acosh(Infinity) == Infinity
      ), 'Math', {
    acosh: function acosh(x){
      return (x = +x) < 1 ? NaN : x > 94906265.62425156
          ? Math.log(x) + Math.LN2
          : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
    }
  });
},{"32":32,"60":60}],151:[function(_dereq_,module,exports){
// 20.2.2.5 Math.asinh(x)
  var $export = _dereq_(32)
      , $asinh  = Math.asinh;

  function asinh(x){
    return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
  }

// Tor Browser bug: Math.asinh(0) -> -0
  $export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', {asinh: asinh});
},{"32":32}],152:[function(_dereq_,module,exports){
// 20.2.2.7 Math.atanh(x)
  var $export = _dereq_(32)
      , $atanh  = Math.atanh;

// Tor Browser bug: Math.atanh(-0) -> 0
  $export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
    atanh: function atanh(x){
      return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
    }
  });
},{"32":32}],153:[function(_dereq_,module,exports){
// 20.2.2.9 Math.cbrt(x)
  var $export = _dereq_(32)
      , sign    = _dereq_(61);

  $export($export.S, 'Math', {
    cbrt: function cbrt(x){
      return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
    }
  });
},{"32":32,"61":61}],154:[function(_dereq_,module,exports){
// 20.2.2.11 Math.clz32(x)
  var $export = _dereq_(32);

  $export($export.S, 'Math', {
    clz32: function clz32(x){
      return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
    }
  });
},{"32":32}],155:[function(_dereq_,module,exports){
// 20.2.2.12 Math.cosh(x)
  var $export = _dereq_(32)
      , exp     = Math.exp;

  $export($export.S, 'Math', {
    cosh: function cosh(x){
      return (exp(x = +x) + exp(-x)) / 2;
    }
  });
},{"32":32}],156:[function(_dereq_,module,exports){
// 20.2.2.14 Math.expm1(x)
  var $export = _dereq_(32)
      , $expm1  = _dereq_(59);

  $export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', {expm1: $expm1});
},{"32":32,"59":59}],157:[function(_dereq_,module,exports){
// 20.2.2.16 Math.fround(x)
  var $export   = _dereq_(32)
      , sign      = _dereq_(61)
      , pow       = Math.pow
      , EPSILON   = pow(2, -52)
      , EPSILON32 = pow(2, -23)
      , MAX32     = pow(2, 127) * (2 - EPSILON32)
      , MIN32     = pow(2, -126);

  var roundTiesToEven = function(n){
    return n + 1 / EPSILON - 1 / EPSILON;
  };


  $export($export.S, 'Math', {
    fround: function fround(x){
      var $abs  = Math.abs(x)
          , $sign = sign(x)
          , a, result;
      if($abs < MIN32)return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
      a = (1 + EPSILON32 / EPSILON) * $abs;
      result = a - (a - $abs);
      if(result > MAX32 || result != result)return $sign * Infinity;
      return $sign * result;
    }
  });
},{"32":32,"61":61}],158:[function(_dereq_,module,exports){
// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
  var $export = _dereq_(32)
      , abs     = Math.abs;

  $export($export.S, 'Math', {
    hypot: function hypot(value1, value2){ // eslint-disable-line no-unused-vars
      var sum  = 0
          , i    = 0
          , aLen = arguments.length
          , larg = 0
          , arg, div;
      while(i < aLen){
        arg = abs(arguments[i++]);
        if(larg < arg){
          div  = larg / arg;
          sum  = sum * div * div + 1;
          larg = arg;
        } else if(arg > 0){
          div  = arg / larg;
          sum += div * div;
        } else sum += arg;
      }
      return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
    }
  });
},{"32":32}],159:[function(_dereq_,module,exports){
// 20.2.2.18 Math.imul(x, y)
  var $export = _dereq_(32)
      , $imul   = Math.imul;

// some WebKit versions fails with big numbers, some has wrong arity
  $export($export.S + $export.F * _dereq_(34)(function(){
        return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
      }), 'Math', {
    imul: function imul(x, y){
      var UINT16 = 0xffff
          , xn = +x
          , yn = +y
          , xl = UINT16 & xn
          , yl = UINT16 & yn;
      return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
    }
  });
},{"32":32,"34":34}],160:[function(_dereq_,module,exports){
// 20.2.2.21 Math.log10(x)
  var $export = _dereq_(32);

  $export($export.S, 'Math', {
    log10: function log10(x){
      return Math.log(x) / Math.LN10;
    }
  });
},{"32":32}],161:[function(_dereq_,module,exports){
// 20.2.2.20 Math.log1p(x)
  var $export = _dereq_(32);

  $export($export.S, 'Math', {log1p: _dereq_(60)});
},{"32":32,"60":60}],162:[function(_dereq_,module,exports){
// 20.2.2.22 Math.log2(x)
  var $export = _dereq_(32);

  $export($export.S, 'Math', {
    log2: function log2(x){
      return Math.log(x) / Math.LN2;
    }
  });
},{"32":32}],163:[function(_dereq_,module,exports){
// 20.2.2.28 Math.sign(x)
  var $export = _dereq_(32);

  $export($export.S, 'Math', {sign: _dereq_(61)});
},{"32":32,"61":61}],164:[function(_dereq_,module,exports){
// 20.2.2.30 Math.sinh(x)
  var $export = _dereq_(32)
      , expm1   = _dereq_(59)
      , exp     = Math.exp;

// V8 near Chromium 38 has a problem with very small numbers
  $export($export.S + $export.F * _dereq_(34)(function(){
        return !Math.sinh(-2e-17) != -2e-17;
      }), 'Math', {
    sinh: function sinh(x){
      return Math.abs(x = +x) < 1
          ? (expm1(x) - expm1(-x)) / 2
          : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
    }
  });
},{"32":32,"34":34,"59":59}],165:[function(_dereq_,module,exports){
// 20.2.2.33 Math.tanh(x)
  var $export = _dereq_(32)
      , expm1   = _dereq_(59)
      , exp     = Math.exp;

  $export($export.S, 'Math', {
    tanh: function tanh(x){
      var a = expm1(x = +x)
          , b = expm1(-x);
      return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
    }
  });
},{"32":32,"59":59}],166:[function(_dereq_,module,exports){
// 20.2.2.34 Math.trunc(x)
  var $export = _dereq_(32);

  $export($export.S, 'Math', {
    trunc: function trunc(it){
      return (it > 0 ? Math.floor : Math.ceil)(it);
    }
  });
},{"32":32}],167:[function(_dereq_,module,exports){
  'use strict';
  var global            = _dereq_(38)
      , has               = _dereq_(39)
      , cof               = _dereq_(18)
      , inheritIfRequired = _dereq_(43)
      , toPrimitive       = _dereq_(110)
      , fails             = _dereq_(34)
      , gOPN              = _dereq_(72).f
      , gOPD              = _dereq_(70).f
      , dP                = _dereq_(67).f
      , $trim             = _dereq_(102).trim
      , NUMBER            = 'Number'
      , $Number           = global[NUMBER]
      , Base              = $Number
      , proto             = $Number.prototype
      // Opera ~12 has broken Object#toString
      , BROKEN_COF        = cof(_dereq_(66)(proto)) == NUMBER
      , TRIM              = 'trim' in String.prototype;

// 7.1.3 ToNumber(argument)
  var toNumber = function(argument){
    var it = toPrimitive(argument, false);
    if(typeof it == 'string' && it.length > 2){
      it = TRIM ? it.trim() : $trim(it, 3);
      var first = it.charCodeAt(0)
          , third, radix, maxCode;
      if(first === 43 || first === 45){
        third = it.charCodeAt(2);
        if(third === 88 || third === 120)return NaN; // Number('+0x1') should be NaN, old V8 fix
      } else if(first === 48){
        switch(it.charCodeAt(1)){
          case 66 : case 98  : radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
          case 79 : case 111 : radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
          default : return +it;
        }
        for(var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++){
          code = digits.charCodeAt(i);
          // parseInt parses a string to a first unavailable symbol
          // but ToNumber should return NaN if a string contains unavailable symbols
          if(code < 48 || code > maxCode)return NaN;
        } return parseInt(digits, radix);
      }
    } return +it;
  };

  if(!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')){
    $Number = function Number(value){
      var it = arguments.length < 1 ? 0 : value
          , that = this;
      return that instanceof $Number
      // check on 1..constructor(foo) case
      && (BROKEN_COF ? fails(function(){ proto.valueOf.call(that); }) : cof(that) != NUMBER)
          ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
    };
    for(var keys = _dereq_(28) ? gOPN(Base) : (
        // ES3:
        'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
        // ES6 (in case, if modules with ES6 Number statics required before):
        'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
        'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
    ).split(','), j = 0, key; keys.length > j; j++){
      if(has(Base, key = keys[j]) && !has($Number, key)){
        dP($Number, key, gOPD(Base, key));
      }
    }
    $Number.prototype = proto;
    proto.constructor = $Number;
    _dereq_(87)(global, NUMBER, $Number);
  }
},{"102":102,"110":110,"18":18,"28":28,"34":34,"38":38,"39":39,"43":43,"66":66,"67":67,"70":70,"72":72,"87":87}],168:[function(_dereq_,module,exports){
// 20.1.2.1 Number.EPSILON
  var $export = _dereq_(32);

  $export($export.S, 'Number', {EPSILON: Math.pow(2, -52)});
},{"32":32}],169:[function(_dereq_,module,exports){
// 20.1.2.2 Number.isFinite(number)
  var $export   = _dereq_(32)
      , _isFinite = _dereq_(38).isFinite;

  $export($export.S, 'Number', {
    isFinite: function isFinite(it){
      return typeof it == 'number' && _isFinite(it);
    }
  });
},{"32":32,"38":38}],170:[function(_dereq_,module,exports){
// 20.1.2.3 Number.isInteger(number)
  var $export = _dereq_(32);

  $export($export.S, 'Number', {isInteger: _dereq_(48)});
},{"32":32,"48":48}],171:[function(_dereq_,module,exports){
// 20.1.2.4 Number.isNaN(number)
  var $export = _dereq_(32);

  $export($export.S, 'Number', {
    isNaN: function isNaN(number){
      return number != number;
    }
  });
},{"32":32}],172:[function(_dereq_,module,exports){
// 20.1.2.5 Number.isSafeInteger(number)
  var $export   = _dereq_(32)
      , isInteger = _dereq_(48)
      , abs       = Math.abs;

  $export($export.S, 'Number', {
    isSafeInteger: function isSafeInteger(number){
      return isInteger(number) && abs(number) <= 0x1fffffffffffff;
    }
  });
},{"32":32,"48":48}],173:[function(_dereq_,module,exports){
// 20.1.2.6 Number.MAX_SAFE_INTEGER
  var $export = _dereq_(32);

  $export($export.S, 'Number', {MAX_SAFE_INTEGER: 0x1fffffffffffff});
},{"32":32}],174:[function(_dereq_,module,exports){
// 20.1.2.10 Number.MIN_SAFE_INTEGER
  var $export = _dereq_(32);

  $export($export.S, 'Number', {MIN_SAFE_INTEGER: -0x1fffffffffffff});
},{"32":32}],175:[function(_dereq_,module,exports){
  var $export     = _dereq_(32)
      , $parseFloat = _dereq_(81);
// 20.1.2.12 Number.parseFloat(string)
  $export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', {parseFloat: $parseFloat});
},{"32":32,"81":81}],176:[function(_dereq_,module,exports){
  var $export   = _dereq_(32)
      , $parseInt = _dereq_(82);
// 20.1.2.13 Number.parseInt(string, radix)
  $export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', {parseInt: $parseInt});
},{"32":32,"82":82}],177:[function(_dereq_,module,exports){
  'use strict';
  var $export      = _dereq_(32)
      , toInteger    = _dereq_(106)
      , aNumberValue = _dereq_(4)
      , repeat       = _dereq_(101)
      , $toFixed     = 1..toFixed
      , floor        = Math.floor
      , data         = [0, 0, 0, 0, 0, 0]
      , ERROR        = 'Number.toFixed: incorrect invocation!'
      , ZERO         = '0';

  var multiply = function(n, c){
    var i  = -1
        , c2 = c;
    while(++i < 6){
      c2 += n * data[i];
      data[i] = c2 % 1e7;
      c2 = floor(c2 / 1e7);
    }
  };
  var divide = function(n){
    var i = 6
        , c = 0;
    while(--i >= 0){
      c += data[i];
      data[i] = floor(c / n);
      c = (c % n) * 1e7;
    }
  };
  var numToString = function(){
    var i = 6
        , s = '';
    while(--i >= 0){
      if(s !== '' || i === 0 || data[i] !== 0){
        var t = String(data[i]);
        s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
      }
    } return s;
  };
  var pow = function(x, n, acc){
    return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
  };
  var log = function(x){
    var n  = 0
        , x2 = x;
    while(x2 >= 4096){
      n += 12;
      x2 /= 4096;
    }
    while(x2 >= 2){
      n  += 1;
      x2 /= 2;
    } return n;
  };

  $export($export.P + $export.F * (!!$toFixed && (
          0.00008.toFixed(3) !== '0.000' ||
          0.9.toFixed(0) !== '1' ||
          1.255.toFixed(2) !== '1.25' ||
          1000000000000000128..toFixed(0) !== '1000000000000000128'
      ) || !_dereq_(34)(function(){
        // V8 ~ Android 4.3-
        $toFixed.call({});
      })), 'Number', {
    toFixed: function toFixed(fractionDigits){
      var x = aNumberValue(this, ERROR)
          , f = toInteger(fractionDigits)
          , s = ''
          , m = ZERO
          , e, z, j, k;
      if(f < 0 || f > 20)throw RangeError(ERROR);
      if(x != x)return 'NaN';
      if(x <= -1e21 || x >= 1e21)return String(x);
      if(x < 0){
        s = '-';
        x = -x;
      }
      if(x > 1e-21){
        e = log(x * pow(2, 69, 1)) - 69;
        z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
        z *= 0x10000000000000;
        e = 52 - e;
        if(e > 0){
          multiply(0, z);
          j = f;
          while(j >= 7){
            multiply(1e7, 0);
            j -= 7;
          }
          multiply(pow(10, j, 1), 0);
          j = e - 1;
          while(j >= 23){
            divide(1 << 23);
            j -= 23;
          }
          divide(1 << j);
          multiply(1, 1);
          divide(2);
          m = numToString();
        } else {
          multiply(0, z);
          multiply(1 << -e, 0);
          m = numToString() + repeat.call(ZERO, f);
        }
      }
      if(f > 0){
        k = m.length;
        m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
      } else {
        m = s + m;
      } return m;
    }
  });
},{"101":101,"106":106,"32":32,"34":34,"4":4}],178:[function(_dereq_,module,exports){
  'use strict';
  var $export      = _dereq_(32)
      , $fails       = _dereq_(34)
      , aNumberValue = _dereq_(4)
      , $toPrecision = 1..toPrecision;

  $export($export.P + $export.F * ($fails(function(){
        // IE7-
        return $toPrecision.call(1, undefined) !== '1';
      }) || !$fails(function(){
        // V8 ~ Android 4.3-
        $toPrecision.call({});
      })), 'Number', {
    toPrecision: function toPrecision(precision){
      var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
      return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision);
    }
  });
},{"32":32,"34":34,"4":4}],179:[function(_dereq_,module,exports){
// 19.1.3.1 Object.assign(target, source)
  var $export = _dereq_(32);

  $export($export.S + $export.F, 'Object', {assign: _dereq_(65)});
},{"32":32,"65":65}],180:[function(_dereq_,module,exports){
  var $export = _dereq_(32)
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
  $export($export.S, 'Object', {create: _dereq_(66)});
},{"32":32,"66":66}],181:[function(_dereq_,module,exports){
  var $export = _dereq_(32);
// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
  $export($export.S + $export.F * !_dereq_(28), 'Object', {defineProperties: _dereq_(68)});
},{"28":28,"32":32,"68":68}],182:[function(_dereq_,module,exports){
  var $export = _dereq_(32);
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
  $export($export.S + $export.F * !_dereq_(28), 'Object', {defineProperty: _dereq_(67).f});
},{"28":28,"32":32,"67":67}],183:[function(_dereq_,module,exports){
// 19.1.2.5 Object.freeze(O)
  var isObject = _dereq_(49)
      , meta     = _dereq_(62).onFreeze;

  _dereq_(78)('freeze', function($freeze){
    return function freeze(it){
      return $freeze && isObject(it) ? $freeze(meta(it)) : it;
    };
  });
},{"49":49,"62":62,"78":78}],184:[function(_dereq_,module,exports){
// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  var toIObject                 = _dereq_(107)
      , $getOwnPropertyDescriptor = _dereq_(70).f;

  _dereq_(78)('getOwnPropertyDescriptor', function(){
    return function getOwnPropertyDescriptor(it, key){
      return $getOwnPropertyDescriptor(toIObject(it), key);
    };
  });
},{"107":107,"70":70,"78":78}],185:[function(_dereq_,module,exports){
// 19.1.2.7 Object.getOwnPropertyNames(O)
  _dereq_(78)('getOwnPropertyNames', function(){
    return _dereq_(71).f;
  });
},{"71":71,"78":78}],186:[function(_dereq_,module,exports){
// 19.1.2.9 Object.getPrototypeOf(O)
  var toObject        = _dereq_(109)
      , $getPrototypeOf = _dereq_(74);

  _dereq_(78)('getPrototypeOf', function(){
    return function getPrototypeOf(it){
      return $getPrototypeOf(toObject(it));
    };
  });
},{"109":109,"74":74,"78":78}],187:[function(_dereq_,module,exports){
// 19.1.2.11 Object.isExtensible(O)
  var isObject = _dereq_(49);

  _dereq_(78)('isExtensible', function($isExtensible){
    return function isExtensible(it){
      return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
    };
  });
},{"49":49,"78":78}],188:[function(_dereq_,module,exports){
// 19.1.2.12 Object.isFrozen(O)
  var isObject = _dereq_(49);

  _dereq_(78)('isFrozen', function($isFrozen){
    return function isFrozen(it){
      return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
    };
  });
},{"49":49,"78":78}],189:[function(_dereq_,module,exports){
// 19.1.2.13 Object.isSealed(O)
  var isObject = _dereq_(49);

  _dereq_(78)('isSealed', function($isSealed){
    return function isSealed(it){
      return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
    };
  });
},{"49":49,"78":78}],190:[function(_dereq_,module,exports){
// 19.1.3.10 Object.is(value1, value2)
  var $export = _dereq_(32);
  $export($export.S, 'Object', {is: _dereq_(89)});
},{"32":32,"89":89}],191:[function(_dereq_,module,exports){
// 19.1.2.14 Object.keys(O)
  var toObject = _dereq_(109)
      , $keys    = _dereq_(76);

  _dereq_(78)('keys', function(){
    return function keys(it){
      return $keys(toObject(it));
    };
  });
},{"109":109,"76":76,"78":78}],192:[function(_dereq_,module,exports){
// 19.1.2.15 Object.preventExtensions(O)
  var isObject = _dereq_(49)
      , meta     = _dereq_(62).onFreeze;

  _dereq_(78)('preventExtensions', function($preventExtensions){
    return function preventExtensions(it){
      return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
    };
  });
},{"49":49,"62":62,"78":78}],193:[function(_dereq_,module,exports){
// 19.1.2.17 Object.seal(O)
  var isObject = _dereq_(49)
      , meta     = _dereq_(62).onFreeze;

  _dereq_(78)('seal', function($seal){
    return function seal(it){
      return $seal && isObject(it) ? $seal(meta(it)) : it;
    };
  });
},{"49":49,"62":62,"78":78}],194:[function(_dereq_,module,exports){
// 19.1.3.19 Object.setPrototypeOf(O, proto)
  var $export = _dereq_(32);
  $export($export.S, 'Object', {setPrototypeOf: _dereq_(90).set});
},{"32":32,"90":90}],195:[function(_dereq_,module,exports){
  'use strict';
// 19.1.3.6 Object.prototype.toString()
  var classof = _dereq_(17)
      , test    = {};
  test[_dereq_(117)('toStringTag')] = 'z';
  if(test + '' != '[object z]'){
    _dereq_(87)(Object.prototype, 'toString', function toString(){
      return '[object ' + classof(this) + ']';
    }, true);
  }
},{"117":117,"17":17,"87":87}],196:[function(_dereq_,module,exports){
  var $export     = _dereq_(32)
      , $parseFloat = _dereq_(81);
// 18.2.4 parseFloat(string)
  $export($export.G + $export.F * (parseFloat != $parseFloat), {parseFloat: $parseFloat});
},{"32":32,"81":81}],197:[function(_dereq_,module,exports){
  var $export   = _dereq_(32)
      , $parseInt = _dereq_(82);
// 18.2.5 parseInt(string, radix)
  $export($export.G + $export.F * (parseInt != $parseInt), {parseInt: $parseInt});
},{"32":32,"82":82}],198:[function(_dereq_,module,exports){
  'use strict';
  var LIBRARY            = _dereq_(58)
      , global             = _dereq_(38)
      , ctx                = _dereq_(25)
      , classof            = _dereq_(17)
      , $export            = _dereq_(32)
      , isObject           = _dereq_(49)
      , aFunction          = _dereq_(3)
      , anInstance         = _dereq_(6)
      , forOf              = _dereq_(37)
      , speciesConstructor = _dereq_(95)
      , task               = _dereq_(104).set
      , microtask          = _dereq_(64)()
      , PROMISE            = 'Promise'
      , TypeError          = global.TypeError
      , process            = global.process
      , $Promise           = global[PROMISE]
      , process            = global.process
      , isNode             = classof(process) == 'process'
      , empty              = function(){ /* empty */ }
      , Internal, GenericPromiseCapability, Wrapper;

  var USE_NATIVE = !!function(){
    try {
      // correct subclassing with @@species support
      var promise     = $Promise.resolve(1)
          , FakePromise = (promise.constructor = {})[_dereq_(117)('species')] = function(exec){ exec(empty, empty); };
      // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
      return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
    } catch(e){ /* empty */ }
  }();

// helpers
  var sameConstructor = function(a, b){
    // with library wrapper special case
    return a === b || a === $Promise && b === Wrapper;
  };
  var isThenable = function(it){
    var then;
    return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
  };
  var newPromiseCapability = function(C){
    return sameConstructor($Promise, C)
        ? new PromiseCapability(C)
        : new GenericPromiseCapability(C);
  };
  var PromiseCapability = GenericPromiseCapability = function(C){
    var resolve, reject;
    this.promise = new C(function($$resolve, $$reject){
      if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');
      resolve = $$resolve;
      reject  = $$reject;
    });
    this.resolve = aFunction(resolve);
    this.reject  = aFunction(reject);
  };
  var perform = function(exec){
    try {
      exec();
    } catch(e){
      return {error: e};
    }
  };
  var notify = function(promise, isReject){
    if(promise._n)return;
    promise._n = true;
    var chain = promise._c;
    microtask(function(){
      var value = promise._v
          , ok    = promise._s == 1
          , i     = 0;
      var run = function(reaction){
        var handler = ok ? reaction.ok : reaction.fail
            , resolve = reaction.resolve
            , reject  = reaction.reject
            , domain  = reaction.domain
            , result, then;
        try {
          if(handler){
            if(!ok){
              if(promise._h == 2)onHandleUnhandled(promise);
              promise._h = 1;
            }
            if(handler === true)result = value;
            else {
              if(domain)domain.enter();
              result = handler(value);
              if(domain)domain.exit();
            }
            if(result === reaction.promise){
              reject(TypeError('Promise-chain cycle'));
            } else if(then = isThenable(result)){
              then.call(result, resolve, reject);
            } else resolve(result);
          } else reject(value);
        } catch(e){
          reject(e);
        }
      };
      while(chain.length > i)run(chain[i++]); // variable length - can't use forEach
      promise._c = [];
      promise._n = false;
      if(isReject && !promise._h)onUnhandled(promise);
    });
  };
  var onUnhandled = function(promise){
    task.call(global, function(){
      var value = promise._v
          , abrupt, handler, console;
      if(isUnhandled(promise)){
        abrupt = perform(function(){
          if(isNode){
            process.emit('unhandledRejection', value, promise);
          } else if(handler = global.onunhandledrejection){
            handler({promise: promise, reason: value});
          } else if((console = global.console) && console.error){
            console.error('Unhandled promise rejection', value);
          }
        });
        // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
        promise._h = isNode || isUnhandled(promise) ? 2 : 1;
      } promise._a = undefined;
      if(abrupt)throw abrupt.error;
    });
  };
  var isUnhandled = function(promise){
    if(promise._h == 1)return false;
    var chain = promise._a || promise._c
        , i     = 0
        , reaction;
    while(chain.length > i){
      reaction = chain[i++];
      if(reaction.fail || !isUnhandled(reaction.promise))return false;
    } return true;
  };
  var onHandleUnhandled = function(promise){
    task.call(global, function(){
      var handler;
      if(isNode){
        process.emit('rejectionHandled', promise);
      } else if(handler = global.onrejectionhandled){
        handler({promise: promise, reason: promise._v});
      }
    });
  };
  var $reject = function(value){
    var promise = this;
    if(promise._d)return;
    promise._d = true;
    promise = promise._w || promise; // unwrap
    promise._v = value;
    promise._s = 2;
    if(!promise._a)promise._a = promise._c.slice();
    notify(promise, true);
  };
  var $resolve = function(value){
    var promise = this
        , then;
    if(promise._d)return;
    promise._d = true;
    promise = promise._w || promise; // unwrap
    try {
      if(promise === value)throw TypeError("Promise can't be resolved itself");
      if(then = isThenable(value)){
        microtask(function(){
          var wrapper = {_w: promise, _d: false}; // wrap
          try {
            then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
          } catch(e){
            $reject.call(wrapper, e);
          }
        });
      } else {
        promise._v = value;
        promise._s = 1;
        notify(promise, false);
      }
    } catch(e){
      $reject.call({_w: promise, _d: false}, e); // wrap
    }
  };

// constructor polyfill
  if(!USE_NATIVE){
    // 25.4.3.1 Promise(executor)
    $Promise = function Promise(executor){
      anInstance(this, $Promise, PROMISE, '_h');
      aFunction(executor);
      Internal.call(this);
      try {
        executor(ctx($resolve, this, 1), ctx($reject, this, 1));
      } catch(err){
        $reject.call(this, err);
      }
    };
    Internal = function Promise(executor){
      this._c = [];             // <- awaiting reactions
      this._a = undefined;      // <- checked in isUnhandled reactions
      this._s = 0;              // <- state
      this._d = false;          // <- done
      this._v = undefined;      // <- value
      this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
      this._n = false;          // <- notify
    };
    Internal.prototype = _dereq_(86)($Promise.prototype, {
      // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
      then: function then(onFulfilled, onRejected){
        var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));
        reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;
        reaction.fail   = typeof onRejected == 'function' && onRejected;
        reaction.domain = isNode ? process.domain : undefined;
        this._c.push(reaction);
        if(this._a)this._a.push(reaction);
        if(this._s)notify(this, false);
        return reaction.promise;
      },
      // 25.4.5.1 Promise.prototype.catch(onRejected)
      'catch': function(onRejected){
        return this.then(undefined, onRejected);
      }
    });
    PromiseCapability = function(){
      var promise  = new Internal;
      this.promise = promise;
      this.resolve = ctx($resolve, promise, 1);
      this.reject  = ctx($reject, promise, 1);
    };
  }

  $export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});
  _dereq_(92)($Promise, PROMISE);
  _dereq_(91)(PROMISE);
  Wrapper = _dereq_(23)[PROMISE];

// statics
  $export($export.S + $export.F * !USE_NATIVE, PROMISE, {
    // 25.4.4.5 Promise.reject(r)
    reject: function reject(r){
      var capability = newPromiseCapability(this)
          , $$reject   = capability.reject;
      $$reject(r);
      return capability.promise;
    }
  });
  $export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
    // 25.4.4.6 Promise.resolve(x)
    resolve: function resolve(x){
      // instanceof instead of internal slot check because we should fix it without replacement native Promise core
      if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;
      var capability = newPromiseCapability(this)
          , $$resolve  = capability.resolve;
      $$resolve(x);
      return capability.promise;
    }
  });
  $export($export.S + $export.F * !(USE_NATIVE && _dereq_(54)(function(iter){
        $Promise.all(iter)['catch'](empty);
      })), PROMISE, {
    // 25.4.4.1 Promise.all(iterable)
    all: function all(iterable){
      var C          = this
          , capability = newPromiseCapability(C)
          , resolve    = capability.resolve
          , reject     = capability.reject;
      var abrupt = perform(function(){
        var values    = []
            , index     = 0
            , remaining = 1;
        forOf(iterable, false, function(promise){
          var $index        = index++
              , alreadyCalled = false;
          values.push(undefined);
          remaining++;
          C.resolve(promise).then(function(value){
            if(alreadyCalled)return;
            alreadyCalled  = true;
            values[$index] = value;
            --remaining || resolve(values);
          }, reject);
        });
        --remaining || resolve(values);
      });
      if(abrupt)reject(abrupt.error);
      return capability.promise;
    },
    // 25.4.4.4 Promise.race(iterable)
    race: function race(iterable){
      var C          = this
          , capability = newPromiseCapability(C)
          , reject     = capability.reject;
      var abrupt = perform(function(){
        forOf(iterable, false, function(promise){
          C.resolve(promise).then(capability.resolve, reject);
        });
      });
      if(abrupt)reject(abrupt.error);
      return capability.promise;
    }
  });
},{"104":104,"117":117,"17":17,"23":23,"25":25,"3":3,"32":32,"37":37,"38":38,"49":49,"54":54,"58":58,"6":6,"64":64,"86":86,"91":91,"92":92,"95":95}],199:[function(_dereq_,module,exports){
// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
  var $export   = _dereq_(32)
      , aFunction = _dereq_(3)
      , anObject  = _dereq_(7)
      , rApply    = (_dereq_(38).Reflect || {}).apply
      , fApply    = Function.apply;
// MS Edge argumentsList argument is optional
  $export($export.S + $export.F * !_dereq_(34)(function(){
        rApply(function(){});
      }), 'Reflect', {
    apply: function apply(target, thisArgument, argumentsList){
      var T = aFunction(target)
          , L = anObject(argumentsList);
      return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
    }
  });
},{"3":3,"32":32,"34":34,"38":38,"7":7}],200:[function(_dereq_,module,exports){
// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
  var $export    = _dereq_(32)
      , create     = _dereq_(66)
      , aFunction  = _dereq_(3)
      , anObject   = _dereq_(7)
      , isObject   = _dereq_(49)
      , fails      = _dereq_(34)
      , bind       = _dereq_(16)
      , rConstruct = (_dereq_(38).Reflect || {}).construct;

// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
  var NEW_TARGET_BUG = fails(function(){
    function F(){}
    return !(rConstruct(function(){}, [], F) instanceof F);
  });
  var ARGS_BUG = !fails(function(){
    rConstruct(function(){});
  });

  $export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
    construct: function construct(Target, args /*, newTarget*/){
      aFunction(Target);
      anObject(args);
      var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
      if(ARGS_BUG && !NEW_TARGET_BUG)return rConstruct(Target, args, newTarget);
      if(Target == newTarget){
        // w/o altered newTarget, optimization for 0-4 arguments
        switch(args.length){
          case 0: return new Target;
          case 1: return new Target(args[0]);
          case 2: return new Target(args[0], args[1]);
          case 3: return new Target(args[0], args[1], args[2]);
          case 4: return new Target(args[0], args[1], args[2], args[3]);
        }
        // w/o altered newTarget, lot of arguments case
        var $args = [null];
        $args.push.apply($args, args);
        return new (bind.apply(Target, $args));
      }
      // with altered newTarget, not support built-in constructors
      var proto    = newTarget.prototype
          , instance = create(isObject(proto) ? proto : Object.prototype)
          , result   = Function.apply.call(Target, instance, args);
      return isObject(result) ? result : instance;
    }
  });
},{"16":16,"3":3,"32":32,"34":34,"38":38,"49":49,"66":66,"7":7}],201:[function(_dereq_,module,exports){
// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
  var dP          = _dereq_(67)
      , $export     = _dereq_(32)
      , anObject    = _dereq_(7)
      , toPrimitive = _dereq_(110);

// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
  $export($export.S + $export.F * _dereq_(34)(function(){
        Reflect.defineProperty(dP.f({}, 1, {value: 1}), 1, {value: 2});
      }), 'Reflect', {
    defineProperty: function defineProperty(target, propertyKey, attributes){
      anObject(target);
      propertyKey = toPrimitive(propertyKey, true);
      anObject(attributes);
      try {
        dP.f(target, propertyKey, attributes);
        return true;
      } catch(e){
        return false;
      }
    }
  });
},{"110":110,"32":32,"34":34,"67":67,"7":7}],202:[function(_dereq_,module,exports){
// 26.1.4 Reflect.deleteProperty(target, propertyKey)
  var $export  = _dereq_(32)
      , gOPD     = _dereq_(70).f
      , anObject = _dereq_(7);

  $export($export.S, 'Reflect', {
    deleteProperty: function deleteProperty(target, propertyKey){
      var desc = gOPD(anObject(target), propertyKey);
      return desc && !desc.configurable ? false : delete target[propertyKey];
    }
  });
},{"32":32,"7":7,"70":70}],203:[function(_dereq_,module,exports){
  'use strict';
// 26.1.5 Reflect.enumerate(target)
  var $export  = _dereq_(32)
      , anObject = _dereq_(7);
  var Enumerate = function(iterated){
    this._t = anObject(iterated); // target
    this._i = 0;                  // next index
    var keys = this._k = []       // keys
        , key;
    for(key in iterated)keys.push(key);
  };
  _dereq_(52)(Enumerate, 'Object', function(){
    var that = this
        , keys = that._k
        , key;
    do {
      if(that._i >= keys.length)return {value: undefined, done: true};
    } while(!((key = keys[that._i++]) in that._t));
    return {value: key, done: false};
  });

  $export($export.S, 'Reflect', {
    enumerate: function enumerate(target){
      return new Enumerate(target);
    }
  });
},{"32":32,"52":52,"7":7}],204:[function(_dereq_,module,exports){
// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
  var gOPD     = _dereq_(70)
      , $export  = _dereq_(32)
      , anObject = _dereq_(7);

  $export($export.S, 'Reflect', {
    getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey){
      return gOPD.f(anObject(target), propertyKey);
    }
  });
},{"32":32,"7":7,"70":70}],205:[function(_dereq_,module,exports){
// 26.1.8 Reflect.getPrototypeOf(target)
  var $export  = _dereq_(32)
      , getProto = _dereq_(74)
      , anObject = _dereq_(7);

  $export($export.S, 'Reflect', {
    getPrototypeOf: function getPrototypeOf(target){
      return getProto(anObject(target));
    }
  });
},{"32":32,"7":7,"74":74}],206:[function(_dereq_,module,exports){
// 26.1.6 Reflect.get(target, propertyKey [, receiver])
  var gOPD           = _dereq_(70)
      , getPrototypeOf = _dereq_(74)
      , has            = _dereq_(39)
      , $export        = _dereq_(32)
      , isObject       = _dereq_(49)
      , anObject       = _dereq_(7);

  function get(target, propertyKey/*, receiver*/){
    var receiver = arguments.length < 3 ? target : arguments[2]
        , desc, proto;
    if(anObject(target) === receiver)return target[propertyKey];
    if(desc = gOPD.f(target, propertyKey))return has(desc, 'value')
        ? desc.value
        : desc.get !== undefined
        ? desc.get.call(receiver)
        : undefined;
    if(isObject(proto = getPrototypeOf(target)))return get(proto, propertyKey, receiver);
  }

  $export($export.S, 'Reflect', {get: get});
},{"32":32,"39":39,"49":49,"7":7,"70":70,"74":74}],207:[function(_dereq_,module,exports){
// 26.1.9 Reflect.has(target, propertyKey)
  var $export = _dereq_(32);

  $export($export.S, 'Reflect', {
    has: function has(target, propertyKey){
      return propertyKey in target;
    }
  });
},{"32":32}],208:[function(_dereq_,module,exports){
// 26.1.10 Reflect.isExtensible(target)
  var $export       = _dereq_(32)
      , anObject      = _dereq_(7)
      , $isExtensible = Object.isExtensible;

  $export($export.S, 'Reflect', {
    isExtensible: function isExtensible(target){
      anObject(target);
      return $isExtensible ? $isExtensible(target) : true;
    }
  });
},{"32":32,"7":7}],209:[function(_dereq_,module,exports){
// 26.1.11 Reflect.ownKeys(target)
  var $export = _dereq_(32);

  $export($export.S, 'Reflect', {ownKeys: _dereq_(80)});
},{"32":32,"80":80}],210:[function(_dereq_,module,exports){
// 26.1.12 Reflect.preventExtensions(target)
  var $export            = _dereq_(32)
      , anObject           = _dereq_(7)
      , $preventExtensions = Object.preventExtensions;

  $export($export.S, 'Reflect', {
    preventExtensions: function preventExtensions(target){
      anObject(target);
      try {
        if($preventExtensions)$preventExtensions(target);
        return true;
      } catch(e){
        return false;
      }
    }
  });
},{"32":32,"7":7}],211:[function(_dereq_,module,exports){
// 26.1.14 Reflect.setPrototypeOf(target, proto)
  var $export  = _dereq_(32)
      , setProto = _dereq_(90);

  if(setProto)$export($export.S, 'Reflect', {
    setPrototypeOf: function setPrototypeOf(target, proto){
      setProto.check(target, proto);
      try {
        setProto.set(target, proto);
        return true;
      } catch(e){
        return false;
      }
    }
  });
},{"32":32,"90":90}],212:[function(_dereq_,module,exports){
// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
  var dP             = _dereq_(67)
      , gOPD           = _dereq_(70)
      , getPrototypeOf = _dereq_(74)
      , has            = _dereq_(39)
      , $export        = _dereq_(32)
      , createDesc     = _dereq_(85)
      , anObject       = _dereq_(7)
      , isObject       = _dereq_(49);

  function set(target, propertyKey, V/*, receiver*/){
    var receiver = arguments.length < 4 ? target : arguments[3]
        , ownDesc  = gOPD.f(anObject(target), propertyKey)
        , existingDescriptor, proto;
    if(!ownDesc){
      if(isObject(proto = getPrototypeOf(target))){
        return set(proto, propertyKey, V, receiver);
      }
      ownDesc = createDesc(0);
    }
    if(has(ownDesc, 'value')){
      if(ownDesc.writable === false || !isObject(receiver))return false;
      existingDescriptor = gOPD.f(receiver, propertyKey) || createDesc(0);
      existingDescriptor.value = V;
      dP.f(receiver, propertyKey, existingDescriptor);
      return true;
    }
    return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
  }

  $export($export.S, 'Reflect', {set: set});
},{"32":32,"39":39,"49":49,"67":67,"7":7,"70":70,"74":74,"85":85}],213:[function(_dereq_,module,exports){
  var global            = _dereq_(38)
      , inheritIfRequired = _dereq_(43)
      , dP                = _dereq_(67).f
      , gOPN              = _dereq_(72).f
      , isRegExp          = _dereq_(50)
      , $flags            = _dereq_(36)
      , $RegExp           = global.RegExp
      , Base              = $RegExp
      , proto             = $RegExp.prototype
      , re1               = /a/g
      , re2               = /a/g
      // "new" creates a new object, old webkit buggy here
      , CORRECT_NEW       = new $RegExp(re1) !== re1;

  if(_dereq_(28) && (!CORRECT_NEW || _dereq_(34)(function(){
        re2[_dereq_(117)('match')] = false;
        // RegExp constructor can alter flags and IsRegExp works correct with @@match
        return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
      }))){
    $RegExp = function RegExp(p, f){
      var tiRE = this instanceof $RegExp
          , piRE = isRegExp(p)
          , fiU  = f === undefined;
      return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
          : inheritIfRequired(CORRECT_NEW
              ? new Base(piRE && !fiU ? p.source : p, f)
              : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
          , tiRE ? this : proto, $RegExp);
    };
    var proxy = function(key){
      key in $RegExp || dP($RegExp, key, {
        configurable: true,
        get: function(){ return Base[key]; },
        set: function(it){ Base[key] = it; }
      });
    };
    for(var keys = gOPN(Base), i = 0; keys.length > i; )proxy(keys[i++]);
    proto.constructor = $RegExp;
    $RegExp.prototype = proto;
    _dereq_(87)(global, 'RegExp', $RegExp);
  }

  _dereq_(91)('RegExp');
},{"117":117,"28":28,"34":34,"36":36,"38":38,"43":43,"50":50,"67":67,"72":72,"87":87,"91":91}],214:[function(_dereq_,module,exports){
// 21.2.5.3 get RegExp.prototype.flags()
  if(_dereq_(28) && /./g.flags != 'g')_dereq_(67).f(RegExp.prototype, 'flags', {
    configurable: true,
    get: _dereq_(36)
  });
},{"28":28,"36":36,"67":67}],215:[function(_dereq_,module,exports){
// @@match logic
  _dereq_(35)('match', 1, function(defined, MATCH, $match){
    // 21.1.3.11 String.prototype.match(regexp)
    return [function match(regexp){
      'use strict';
      var O  = defined(this)
          , fn = regexp == undefined ? undefined : regexp[MATCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
    }, $match];
  });
},{"35":35}],216:[function(_dereq_,module,exports){
// @@replace logic
  _dereq_(35)('replace', 2, function(defined, REPLACE, $replace){
    // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)
    return [function replace(searchValue, replaceValue){
      'use strict';
      var O  = defined(this)
          , fn = searchValue == undefined ? undefined : searchValue[REPLACE];
      return fn !== undefined
          ? fn.call(searchValue, O, replaceValue)
          : $replace.call(String(O), searchValue, replaceValue);
    }, $replace];
  });
},{"35":35}],217:[function(_dereq_,module,exports){
// @@search logic
  _dereq_(35)('search', 1, function(defined, SEARCH, $search){
    // 21.1.3.15 String.prototype.search(regexp)
    return [function search(regexp){
      'use strict';
      var O  = defined(this)
          , fn = regexp == undefined ? undefined : regexp[SEARCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
    }, $search];
  });
},{"35":35}],218:[function(_dereq_,module,exports){
// @@split logic
  _dereq_(35)('split', 2, function(defined, SPLIT, $split){
    'use strict';
    var isRegExp   = _dereq_(50)
        , _split     = $split
        , $push      = [].push
        , $SPLIT     = 'split'
        , LENGTH     = 'length'
        , LAST_INDEX = 'lastIndex';
    if(
        'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
        'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
        'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
        '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
        '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
        ''[$SPLIT](/.?/)[LENGTH]
    ){
      var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group
      // based on es5-shim implementation, need to rework it
      $split = function(separator, limit){
        var string = String(this);
        if(separator === undefined && limit === 0)return [];
        // If `separator` is not a regex, use native split
        if(!isRegExp(separator))return _split.call(string, separator, limit);
        var output = [];
        var flags = (separator.ignoreCase ? 'i' : '') +
            (separator.multiline ? 'm' : '') +
            (separator.unicode ? 'u' : '') +
            (separator.sticky ? 'y' : '');
        var lastLastIndex = 0;
        var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;
        // Make `global` and avoid `lastIndex` issues by working with a copy
        var separatorCopy = new RegExp(separator.source, flags + 'g');
        var separator2, match, lastIndex, lastLength, i;
        // Doesn't need flags gy, but they don't hurt
        if(!NPCG)separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\s)', flags);
        while(match = separatorCopy.exec(string)){
          // `separatorCopy.lastIndex` is not reliable cross-browser
          lastIndex = match.index + match[0][LENGTH];
          if(lastIndex > lastLastIndex){
            output.push(string.slice(lastLastIndex, match.index));
            // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG
            if(!NPCG && match[LENGTH] > 1)match[0].replace(separator2, function(){
              for(i = 1; i < arguments[LENGTH] - 2; i++)if(arguments[i] === undefined)match[i] = undefined;
            });
            if(match[LENGTH] > 1 && match.index < string[LENGTH])$push.apply(output, match.slice(1));
            lastLength = match[0][LENGTH];
            lastLastIndex = lastIndex;
            if(output[LENGTH] >= splitLimit)break;
          }
          if(separatorCopy[LAST_INDEX] === match.index)separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
        }
        if(lastLastIndex === string[LENGTH]){
          if(lastLength || !separatorCopy.test(''))output.push('');
        } else output.push(string.slice(lastLastIndex));
        return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
      };
      // Chakra, V8
    } else if('0'[$SPLIT](undefined, 0)[LENGTH]){
      $split = function(separator, limit){
        return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);
      };
    }
    // 21.1.3.17 String.prototype.split(separator, limit)
    return [function split(separator, limit){
      var O  = defined(this)
          , fn = separator == undefined ? undefined : separator[SPLIT];
      return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);
    }, $split];
  });
},{"35":35,"50":50}],219:[function(_dereq_,module,exports){
  'use strict';
  _dereq_(214);
  var anObject    = _dereq_(7)
      , $flags      = _dereq_(36)
      , DESCRIPTORS = _dereq_(28)
      , TO_STRING   = 'toString'
      , $toString   = /./[TO_STRING];

  var polyfill_define = function(fn){
    _dereq_(87)(RegExp.prototype, TO_STRING, fn, true);
  };

// 21.2.5.14 RegExp.prototype.toString()
  if(_dereq_(34)(function(){ return $toString.call({source: 'a', flags: 'b'}) != '/a/b'; })){
    polyfill_define(function toString(){
      var R = anObject(this);
      return '/'.concat(R.source, '/',
          'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
    });
// FF44- RegExp#toString has a wrong name
  } else if($toString.name != TO_STRING){
    polyfill_define(function toString(){
      return $toString.call(this);
    });
  }
},{"214":214,"28":28,"34":34,"36":36,"7":7,"87":87}],220:[function(_dereq_,module,exports){
  'use strict';
  var strong = _dereq_(19);

// 23.2 Set Objects
  module.exports = _dereq_(22)('Set', function(get){
    return function Set(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
  }, {
    // 23.2.3.1 Set.prototype.add(value)
    add: function add(value){
      return strong.def(this, value = value === 0 ? 0 : value, value);
    }
  }, strong);
},{"19":19,"22":22}],221:[function(_dereq_,module,exports){
  'use strict';
// B.2.3.2 String.prototype.anchor(name)
  _dereq_(99)('anchor', function(createHTML){
    return function anchor(name){
      return createHTML(this, 'a', 'name', name);
    }
  });
},{"99":99}],222:[function(_dereq_,module,exports){
  'use strict';
// B.2.3.3 String.prototype.big()
  _dereq_(99)('big', function(createHTML){
    return function big(){
      return createHTML(this, 'big', '', '');
    }
  });
},{"99":99}],223:[function(_dereq_,module,exports){
  'use strict';
// B.2.3.4 String.prototype.blink()
  _dereq_(99)('blink', function(createHTML){
    return function blink(){
      return createHTML(this, 'blink', '', '');
    }
  });
},{"99":99}],224:[function(_dereq_,module,exports){
  'use strict';
// B.2.3.5 String.prototype.bold()
  _dereq_(99)('bold', function(createHTML){
    return function bold(){
      return createHTML(this, 'b', '', '');
    }
  });
},{"99":99}],225:[function(_dereq_,module,exports){
  'use strict';
  var $export = _dereq_(32)
      , $at     = _dereq_(97)(false);
  $export($export.P, 'String', {
    // 21.1.3.3 String.prototype.codePointAt(pos)
    codePointAt: function codePointAt(pos){
      return $at(this, pos);
    }
  });
},{"32":32,"97":97}],226:[function(_dereq_,module,exports){
// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])
  'use strict';
  var $export   = _dereq_(32)
      , toLength  = _dereq_(108)
      , context   = _dereq_(98)
      , ENDS_WITH = 'endsWith'
      , $endsWith = ''[ENDS_WITH];

  $export($export.P + $export.F * _dereq_(33)(ENDS_WITH), 'String', {
    endsWith: function endsWith(searchString /*, endPosition = @length */){
      var that = context(this, searchString, ENDS_WITH)
          , endPosition = arguments.length > 1 ? arguments[1] : undefined
          , len    = toLength(that.length)
          , end    = endPosition === undefined ? len : Math.min(toLength(endPosition), len)
          , search = String(searchString);
      return $endsWith
          ? $endsWith.call(that, search, end)
          : that.slice(end - search.length, end) === search;
    }
  });
},{"108":108,"32":32,"33":33,"98":98}],227:[function(_dereq_,module,exports){
  'use strict';
// B.2.3.6 String.prototype.fixed()
  _dereq_(99)('fixed', function(createHTML){
    return function fixed(){
      return createHTML(this, 'tt', '', '');
    }
  });
},{"99":99}],228:[function(_dereq_,module,exports){
  'use strict';
// B.2.3.7 String.prototype.fontcolor(color)
  _dereq_(99)('fontcolor', function(createHTML){
    return function fontcolor(color){
      return createHTML(this, 'font', 'color', color);
    }
  });
},{"99":99}],229:[function(_dereq_,module,exports){
  'use strict';
// B.2.3.8 String.prototype.fontsize(size)
  _dereq_(99)('fontsize', function(createHTML){
    return function fontsize(size){
      return createHTML(this, 'font', 'size', size);
    }
  });
},{"99":99}],230:[function(_dereq_,module,exports){
  var $export        = _dereq_(32)
      , toIndex        = _dereq_(105)
      , fromCharCode   = String.fromCharCode
      , $fromCodePoint = String.fromCodePoint;

// length should be 1, old FF problem
  $export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
    // 21.1.2.2 String.fromCodePoint(...codePoints)
    fromCodePoint: function fromCodePoint(x){ // eslint-disable-line no-unused-vars
      var res  = []
          , aLen = arguments.length
          , i    = 0
          , code;
      while(aLen > i){
        code = +arguments[i++];
        if(toIndex(code, 0x10ffff) !== code)throw RangeError(code + ' is not a valid code point');
        res.push(code < 0x10000
            ? fromCharCode(code)
            : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
        );
      } return res.join('');
    }
  });
},{"105":105,"32":32}],231:[function(_dereq_,module,exports){
// 21.1.3.7 String.prototype.includes(searchString, position = 0)
  'use strict';
  var $export  = _dereq_(32)
      , context  = _dereq_(98)
      , INCLUDES = 'includes';

  $export($export.P + $export.F * _dereq_(33)(INCLUDES), 'String', {
    includes: function includes(searchString /*, position = 0 */){
      return !!~context(this, searchString, INCLUDES)
          .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
    }
  });
},{"32":32,"33":33,"98":98}],232:[function(_dereq_,module,exports){
  'use strict';
// B.2.3.9 String.prototype.italics()
  _dereq_(99)('italics', function(createHTML){
    return function italics(){
      return createHTML(this, 'i', '', '');
    }
  });
},{"99":99}],233:[function(_dereq_,module,exports){
  'use strict';
  var $at  = _dereq_(97)(true);

// 21.1.3.27 String.prototype[@@iterator]()
  _dereq_(53)(String, 'String', function(iterated){
    this._t = String(iterated); // target
    this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
  }, function(){
    var O     = this._t
        , index = this._i
        , point;
    if(index >= O.length)return {value: undefined, done: true};
    point = $at(O, index);
    this._i += point.length;
    return {value: point, done: false};
  });
},{"53":53,"97":97}],234:[function(_dereq_,module,exports){
  'use strict';
// B.2.3.10 String.prototype.link(url)
  _dereq_(99)('link', function(createHTML){
    return function link(url){
      return createHTML(this, 'a', 'href', url);
    }
  });
},{"99":99}],235:[function(_dereq_,module,exports){
  var $export   = _dereq_(32)
      , toIObject = _dereq_(107)
      , toLength  = _dereq_(108);

  $export($export.S, 'String', {
    // 21.1.2.4 String.raw(callSite, ...substitutions)
    raw: function raw(callSite){
      var tpl  = toIObject(callSite.raw)
          , len  = toLength(tpl.length)
          , aLen = arguments.length
          , res  = []
          , i    = 0;
      while(len > i){
        res.push(String(tpl[i++]));
        if(i < aLen)res.push(String(arguments[i]));
      } return res.join('');
    }
  });
},{"107":107,"108":108,"32":32}],236:[function(_dereq_,module,exports){
  var $export = _dereq_(32);

  $export($export.P, 'String', {
    // 21.1.3.13 String.prototype.repeat(count)
    repeat: _dereq_(101)
  });
},{"101":101,"32":32}],237:[function(_dereq_,module,exports){
  'use strict';
// B.2.3.11 String.prototype.small()
  _dereq_(99)('small', function(createHTML){
    return function small(){
      return createHTML(this, 'small', '', '');
    }
  });
},{"99":99}],238:[function(_dereq_,module,exports){
// 21.1.3.18 String.prototype.startsWith(searchString [, position ])
  'use strict';
  var $export     = _dereq_(32)
      , toLength    = _dereq_(108)
      , context     = _dereq_(98)
      , STARTS_WITH = 'startsWith'
      , $startsWith = ''[STARTS_WITH];

  $export($export.P + $export.F * _dereq_(33)(STARTS_WITH), 'String', {
    startsWith: function startsWith(searchString /*, position = 0 */){
      var that   = context(this, searchString, STARTS_WITH)
          , index  = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length))
          , search = String(searchString);
      return $startsWith
          ? $startsWith.call(that, search, index)
          : that.slice(index, index + search.length) === search;
    }
  });
},{"108":108,"32":32,"33":33,"98":98}],239:[function(_dereq_,module,exports){
  'use strict';
// B.2.3.12 String.prototype.strike()
  _dereq_(99)('strike', function(createHTML){
    return function strike(){
      return createHTML(this, 'strike', '', '');
    }
  });
},{"99":99}],240:[function(_dereq_,module,exports){
  'use strict';
// B.2.3.13 String.prototype.sub()
  _dereq_(99)('sub', function(createHTML){
    return function sub(){
      return createHTML(this, 'sub', '', '');
    }
  });
},{"99":99}],241:[function(_dereq_,module,exports){
  'use strict';
// B.2.3.14 String.prototype.sup()
  _dereq_(99)('sup', function(createHTML){
    return function sup(){
      return createHTML(this, 'sup', '', '');
    }
  });
},{"99":99}],242:[function(_dereq_,module,exports){
  'use strict';
// 21.1.3.25 String.prototype.trim()
  _dereq_(102)('trim', function($trim){
    return function trim(){
      return $trim(this, 3);
    };
  });
},{"102":102}],243:[function(_dereq_,module,exports){
  'use strict';
// ECMAScript 6 symbols shim
  var global         = _dereq_(38)
      , has            = _dereq_(39)
      , DESCRIPTORS    = _dereq_(28)
      , $export        = _dereq_(32)
      , redefine       = _dereq_(87)
      , META           = _dereq_(62).KEY
      , $fails         = _dereq_(34)
      , shared         = _dereq_(94)
      , setToStringTag = _dereq_(92)
      , uid            = _dereq_(114)
      , wks            = _dereq_(117)
      , wksExt         = _dereq_(116)
      , wksDefine      = _dereq_(115)
      , keyOf          = _dereq_(57)
      , enumKeys       = _dereq_(31)
      , isArray        = _dereq_(47)
      , anObject       = _dereq_(7)
      , toIObject      = _dereq_(107)
      , toPrimitive    = _dereq_(110)
      , createDesc     = _dereq_(85)
      , _create        = _dereq_(66)
      , gOPNExt        = _dereq_(71)
      , $GOPD          = _dereq_(70)
      , $DP            = _dereq_(67)
      , $keys          = _dereq_(76)
      , gOPD           = $GOPD.f
      , dP             = $DP.f
      , gOPN           = gOPNExt.f
      , $Symbol        = global.Symbol
      , $JSON          = global.JSON
      , _stringify     = $JSON && $JSON.stringify
      , PROTOTYPE      = 'prototype'
      , HIDDEN         = wks('_hidden')
      , TO_PRIMITIVE   = wks('toPrimitive')
      , isEnum         = {}.propertyIsEnumerable
      , SymbolRegistry = shared('symbol-registry')
      , AllSymbols     = shared('symbols')
      , OPSymbols      = shared('op-symbols')
      , ObjectProto    = Object[PROTOTYPE]
      , USE_NATIVE     = typeof $Symbol == 'function'
      , QObject        = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
  var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
  var setSymbolDesc = DESCRIPTORS && $fails(function(){
    return _create(dP({}, 'a', {
          get: function(){ return dP(this, 'a', {value: 7}).a; }
        })).a != 7;
  }) ? function(it, key, D){
    var protoDesc = gOPD(ObjectProto, key);
    if(protoDesc)delete ObjectProto[key];
    dP(it, key, D);
    if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
  } : dP;

  var wrap = function(tag){
    var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
    sym._k = tag;
    return sym;
  };

  var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
    return typeof it == 'symbol';
  } : function(it){
    return it instanceof $Symbol;
  };

  var $defineProperty = function defineProperty(it, key, D){
    if(it === ObjectProto)$defineProperty(OPSymbols, key, D);
    anObject(it);
    key = toPrimitive(key, true);
    anObject(D);
    if(has(AllSymbols, key)){
      if(!D.enumerable){
        if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
        it[HIDDEN][key] = true;
      } else {
        if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
        D = _create(D, {enumerable: createDesc(0, false)});
      } return setSymbolDesc(it, key, D);
    } return dP(it, key, D);
  };
  var $defineProperties = function defineProperties(it, P){
    anObject(it);
    var keys = enumKeys(P = toIObject(P))
        , i    = 0
        , l = keys.length
        , key;
    while(l > i)$defineProperty(it, key = keys[i++], P[key]);
    return it;
  };
  var $create = function create(it, P){
    return P === undefined ? _create(it) : $defineProperties(_create(it), P);
  };
  var $propertyIsEnumerable = function propertyIsEnumerable(key){
    var E = isEnum.call(this, key = toPrimitive(key, true));
    if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;
    return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
  };
  var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
    it  = toIObject(it);
    key = toPrimitive(key, true);
    if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;
    var D = gOPD(it, key);
    if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
    return D;
  };
  var $getOwnPropertyNames = function getOwnPropertyNames(it){
    var names  = gOPN(toIObject(it))
        , result = []
        , i      = 0
        , key;
    while(names.length > i){
      if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
    } return result;
  };
  var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
    var IS_OP  = it === ObjectProto
        , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))
        , result = []
        , i      = 0
        , key;
    while(names.length > i){
      if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);
    } return result;
  };

// 19.4.1.1 Symbol([description])
  if(!USE_NATIVE){
    $Symbol = function Symbol(){
      if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
      var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
      var $set = function(value){
        if(this === ObjectProto)$set.call(OPSymbols, value);
        if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
        setSymbolDesc(this, tag, createDesc(1, value));
      };
      if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
      return wrap(tag);
    };
    redefine($Symbol[PROTOTYPE], 'toString', function toString(){
      return this._k;
    });

    $GOPD.f = $getOwnPropertyDescriptor;
    $DP.f   = $defineProperty;
    _dereq_(72).f = gOPNExt.f = $getOwnPropertyNames;
    _dereq_(77).f  = $propertyIsEnumerable;
    _dereq_(73).f = $getOwnPropertySymbols;

    if(DESCRIPTORS && !_dereq_(58)){
      redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
    }

    wksExt.f = function(name){
      return wrap(wks(name));
    }
  }

  $export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});

  for(var symbols = (
      // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
      'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
  ).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);

  for(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);

  $export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
    // 19.4.2.1 Symbol.for(key)
    'for': function(key){
      return has(SymbolRegistry, key += '')
          ? SymbolRegistry[key]
          : SymbolRegistry[key] = $Symbol(key);
    },
    // 19.4.2.5 Symbol.keyFor(sym)
    keyFor: function keyFor(key){
      if(isSymbol(key))return keyOf(SymbolRegistry, key);
      throw TypeError(key + ' is not a symbol!');
    },
    useSetter: function(){ setter = true; },
    useSimple: function(){ setter = false; }
  });

  $export($export.S + $export.F * !USE_NATIVE, 'Object', {
    // 19.1.2.2 Object.create(O [, Properties])
    create: $create,
    // 19.1.2.4 Object.defineProperty(O, P, Attributes)
    defineProperty: $defineProperty,
    // 19.1.2.3 Object.defineProperties(O, Properties)
    defineProperties: $defineProperties,
    // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
    getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
    // 19.1.2.7 Object.getOwnPropertyNames(O)
    getOwnPropertyNames: $getOwnPropertyNames,
    // 19.1.2.8 Object.getOwnPropertySymbols(O)
    getOwnPropertySymbols: $getOwnPropertySymbols
  });

// 24.3.2 JSON.stringify(value [, replacer [, space]])
  $JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){
        var S = $Symbol();
        // MS Edge converts symbol values to JSON as {}
        // WebKit converts symbol values to JSON as null
        // V8 throws on boxed symbols
        return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
      })), 'JSON', {
    stringify: function stringify(it){
      if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
      var args = [it]
          , i    = 1
          , replacer, $replacer;
      while(arguments.length > i)args.push(arguments[i++]);
      replacer = args[1];
      if(typeof replacer == 'function')$replacer = replacer;
      if($replacer || !isArray(replacer))replacer = function(key, value){
        if($replacer)value = $replacer.call(this, key, value);
        if(!isSymbol(value))return value;
      };
      args[1] = replacer;
      return _stringify.apply($JSON, args);
    }
  });

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
  $Symbol[PROTOTYPE][TO_PRIMITIVE] || _dereq_(40)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
  setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
  setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
  setToStringTag(global.JSON, 'JSON', true);
},{"107":107,"110":110,"114":114,"115":115,"116":116,"117":117,"28":28,"31":31,"32":32,"34":34,"38":38,"39":39,"40":40,"47":47,"57":57,"58":58,"62":62,"66":66,"67":67,"7":7,"70":70,"71":71,"72":72,"73":73,"76":76,"77":77,"85":85,"87":87,"92":92,"94":94}],244:[function(_dereq_,module,exports){
  'use strict';
  var $export      = _dereq_(32)
      , $typed       = _dereq_(113)
      , buffer       = _dereq_(112)
      , anObject     = _dereq_(7)
      , toIndex      = _dereq_(105)
      , toLength     = _dereq_(108)
      , isObject     = _dereq_(49)
      , ArrayBuffer  = _dereq_(38).ArrayBuffer
      , speciesConstructor = _dereq_(95)
      , $ArrayBuffer = buffer.ArrayBuffer
      , $DataView    = buffer.DataView
      , $isView      = $typed.ABV && ArrayBuffer.isView
      , $slice       = $ArrayBuffer.prototype.slice
      , VIEW         = $typed.VIEW
      , ARRAY_BUFFER = 'ArrayBuffer';

  $export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), {ArrayBuffer: $ArrayBuffer});

  $export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
    // 24.1.3.1 ArrayBuffer.isView(arg)
    isView: function isView(it){
      return $isView && $isView(it) || isObject(it) && VIEW in it;
    }
  });

  $export($export.P + $export.U + $export.F * _dereq_(34)(function(){
        return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
      }), ARRAY_BUFFER, {
    // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
    slice: function slice(start, end){
      if($slice !== undefined && end === undefined)return $slice.call(anObject(this), start); // FF fix
      var len    = anObject(this).byteLength
          , first  = toIndex(start, len)
          , final  = toIndex(end === undefined ? len : end, len)
          , result = new (speciesConstructor(this, $ArrayBuffer))(toLength(final - first))
          , viewS  = new $DataView(this)
          , viewT  = new $DataView(result)
          , index  = 0;
      while(first < final){
        viewT.setUint8(index++, viewS.getUint8(first++));
      } return result;
    }
  });

  _dereq_(91)(ARRAY_BUFFER);
},{"105":105,"108":108,"112":112,"113":113,"32":32,"34":34,"38":38,"49":49,"7":7,"91":91,"95":95}],245:[function(_dereq_,module,exports){
  var $export = _dereq_(32);
  $export($export.G + $export.W + $export.F * !_dereq_(113).ABV, {
    DataView: _dereq_(112).DataView
  });
},{"112":112,"113":113,"32":32}],246:[function(_dereq_,module,exports){
  _dereq_(111)('Float32', 4, function(init){
    return function Float32Array(data, byteOffset, length){
      return init(this, data, byteOffset, length);
    };
  });
},{"111":111}],247:[function(_dereq_,module,exports){
  _dereq_(111)('Float64', 8, function(init){
    return function Float64Array(data, byteOffset, length){
      return init(this, data, byteOffset, length);
    };
  });
},{"111":111}],248:[function(_dereq_,module,exports){
  _dereq_(111)('Int16', 2, function(init){
    return function Int16Array(data, byteOffset, length){
      return init(this, data, byteOffset, length);
    };
  });
},{"111":111}],249:[function(_dereq_,module,exports){
  _dereq_(111)('Int32', 4, function(init){
    return function Int32Array(data, byteOffset, length){
      return init(this, data, byteOffset, length);
    };
  });
},{"111":111}],250:[function(_dereq_,module,exports){
  _dereq_(111)('Int8', 1, function(init){
    return function Int8Array(data, byteOffset, length){
      return init(this, data, byteOffset, length);
    };
  });
},{"111":111}],251:[function(_dereq_,module,exports){
  _dereq_(111)('Uint16', 2, function(init){
    return function Uint16Array(data, byteOffset, length){
      return init(this, data, byteOffset, length);
    };
  });
},{"111":111}],252:[function(_dereq_,module,exports){
  _dereq_(111)('Uint32', 4, function(init){
    return function Uint32Array(data, byteOffset, length){
      return init(this, data, byteOffset, length);
    };
  });
},{"111":111}],253:[function(_dereq_,module,exports){
  _dereq_(111)('Uint8', 1, function(init){
    return function Uint8Array(data, byteOffset, length){
      return init(this, data, byteOffset, length);
    };
  });
},{"111":111}],254:[function(_dereq_,module,exports){
  _dereq_(111)('Uint8', 1, function(init){
    return function Uint8ClampedArray(data, byteOffset, length){
      return init(this, data, byteOffset, length);
    };
  }, true);
},{"111":111}],255:[function(_dereq_,module,exports){
  'use strict';
  var each         = _dereq_(12)(0)
      , redefine     = _dereq_(87)
      , meta         = _dereq_(62)
      , assign       = _dereq_(65)
      , weak         = _dereq_(21)
      , isObject     = _dereq_(49)
      , getWeak      = meta.getWeak
      , isExtensible = Object.isExtensible
      , uncaughtFrozenStore = weak.ufstore
      , tmp          = {}
      , InternalMap;

  var wrapper = function(get){
    return function WeakMap(){
      return get(this, arguments.length > 0 ? arguments[0] : undefined);
    };
  };

  var methods = {
    // 23.3.3.3 WeakMap.prototype.get(key)
    get: function get(key){
      if(isObject(key)){
        var data = getWeak(key);
        if(data === true)return uncaughtFrozenStore(this).get(key);
        return data ? data[this._i] : undefined;
      }
    },
    // 23.3.3.5 WeakMap.prototype.set(key, value)
    set: function set(key, value){
      return weak.def(this, key, value);
    }
  };

// 23.3 WeakMap Objects
  var $WeakMap = module.exports = _dereq_(22)('WeakMap', wrapper, methods, weak, true, true);

// IE11 WeakMap frozen keys fix
  if(new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7){
    InternalMap = weak.getConstructor(wrapper);
    assign(InternalMap.prototype, methods);
    meta.NEED = true;
    each(['delete', 'has', 'get', 'set'], function(key){
      var proto  = $WeakMap.prototype
          , method = proto[key];
      redefine(proto, key, function(a, b){
        // store frozen objects on internal weakmap shim
        if(isObject(a) && !isExtensible(a)){
          if(!this._f)this._f = new InternalMap;
          var result = this._f[key](a, b);
          return key == 'set' ? this : result;
          // store all the rest on native weakmap
        } return method.call(this, a, b);
      });
    });
  }
},{"12":12,"21":21,"22":22,"49":49,"62":62,"65":65,"87":87}],256:[function(_dereq_,module,exports){
  'use strict';
  var weak = _dereq_(21);

// 23.4 WeakSet Objects
  _dereq_(22)('WeakSet', function(get){
    return function WeakSet(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
  }, {
    // 23.4.3.1 WeakSet.prototype.add(value)
    add: function add(value){
      return weak.def(this, value, true);
    }
  }, weak, false, true);
},{"21":21,"22":22}],257:[function(_dereq_,module,exports){
  'use strict';
// https://github.com/tc39/Array.prototype.includes
  var $export   = _dereq_(32)
      , $includes = _dereq_(11)(true);

  $export($export.P, 'Array', {
    includes: function includes(el /*, fromIndex = 0 */){
      return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
    }
  });

  _dereq_(5)('includes');
},{"11":11,"32":32,"5":5}],258:[function(_dereq_,module,exports){
// https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask
  var $export   = _dereq_(32)
      , microtask = _dereq_(64)()
      , process   = _dereq_(38).process
      , isNode    = _dereq_(18)(process) == 'process';

  $export($export.G, {
    asap: function asap(fn){
      var domain = isNode && process.domain;
      microtask(domain ? domain.bind(fn) : fn);
    }
  });
},{"18":18,"32":32,"38":38,"64":64}],259:[function(_dereq_,module,exports){
// https://github.com/ljharb/proposal-is-error
  var $export = _dereq_(32)
      , cof     = _dereq_(18);

  $export($export.S, 'Error', {
    isError: function isError(it){
      return cof(it) === 'Error';
    }
  });
},{"18":18,"32":32}],260:[function(_dereq_,module,exports){
// https://github.com/DavidBruant/Map-Set.prototype.toJSON
  var $export  = _dereq_(32);

  $export($export.P + $export.R, 'Map', {toJSON: _dereq_(20)('Map')});
},{"20":20,"32":32}],261:[function(_dereq_,module,exports){
// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
  var $export = _dereq_(32);

  $export($export.S, 'Math', {
    iaddh: function iaddh(x0, x1, y0, y1){
      var $x0 = x0 >>> 0
          , $x1 = x1 >>> 0
          , $y0 = y0 >>> 0;
      return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;
    }
  });
},{"32":32}],262:[function(_dereq_,module,exports){
// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
  var $export = _dereq_(32);

  $export($export.S, 'Math', {
    imulh: function imulh(u, v){
      var UINT16 = 0xffff
          , $u = +u
          , $v = +v
          , u0 = $u & UINT16
          , v0 = $v & UINT16
          , u1 = $u >> 16
          , v1 = $v >> 16
          , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
      return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);
    }
  });
},{"32":32}],263:[function(_dereq_,module,exports){
// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
  var $export = _dereq_(32);

  $export($export.S, 'Math', {
    isubh: function isubh(x0, x1, y0, y1){
      var $x0 = x0 >>> 0
          , $x1 = x1 >>> 0
          , $y0 = y0 >>> 0;
      return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;
    }
  });
},{"32":32}],264:[function(_dereq_,module,exports){
// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
  var $export = _dereq_(32);

  $export($export.S, 'Math', {
    umulh: function umulh(u, v){
      var UINT16 = 0xffff
          , $u = +u
          , $v = +v
          , u0 = $u & UINT16
          , v0 = $v & UINT16
          , u1 = $u >>> 16
          , v1 = $v >>> 16
          , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
      return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);
    }
  });
},{"32":32}],265:[function(_dereq_,module,exports){
  'use strict';
  var $export         = _dereq_(32)
      , toObject        = _dereq_(109)
      , aFunction       = _dereq_(3)
      , $defineProperty = _dereq_(67);

// B.2.2.2 Object.prototype.__defineGetter__(P, getter)
  _dereq_(28) && $export($export.P + _dereq_(69), 'Object', {
    __defineGetter__: function __defineGetter__(P, getter){
      $defineProperty.f(toObject(this), P, {get: aFunction(getter), enumerable: true, configurable: true});
    }
  });
},{"109":109,"28":28,"3":3,"32":32,"67":67,"69":69}],266:[function(_dereq_,module,exports){
  'use strict';
  var $export         = _dereq_(32)
      , toObject        = _dereq_(109)
      , aFunction       = _dereq_(3)
      , $defineProperty = _dereq_(67);

// B.2.2.3 Object.prototype.__defineSetter__(P, setter)
  _dereq_(28) && $export($export.P + _dereq_(69), 'Object', {
    __defineSetter__: function __defineSetter__(P, setter){
      $defineProperty.f(toObject(this), P, {set: aFunction(setter), enumerable: true, configurable: true});
    }
  });
},{"109":109,"28":28,"3":3,"32":32,"67":67,"69":69}],267:[function(_dereq_,module,exports){
// https://github.com/tc39/proposal-object-values-entries
  var $export  = _dereq_(32)
      , $entries = _dereq_(79)(true);

  $export($export.S, 'Object', {
    entries: function entries(it){
      return $entries(it);
    }
  });
},{"32":32,"79":79}],268:[function(_dereq_,module,exports){
// https://github.com/tc39/proposal-object-getownpropertydescriptors
  var $export        = _dereq_(32)
      , ownKeys        = _dereq_(80)
      , toIObject      = _dereq_(107)
      , gOPD           = _dereq_(70)
      , createProperty = _dereq_(24);

  $export($export.S, 'Object', {
    getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object){
      var O       = toIObject(object)
          , getDesc = gOPD.f
          , keys    = ownKeys(O)
          , result  = {}
          , i       = 0
          , key;
      while(keys.length > i)createProperty(result, key = keys[i++], getDesc(O, key));
      return result;
    }
  });
},{"107":107,"24":24,"32":32,"70":70,"80":80}],269:[function(_dereq_,module,exports){
  'use strict';
  var $export                  = _dereq_(32)
      , toObject                 = _dereq_(109)
      , toPrimitive              = _dereq_(110)
      , getPrototypeOf           = _dereq_(74)
      , getOwnPropertyDescriptor = _dereq_(70).f;

// B.2.2.4 Object.prototype.__lookupGetter__(P)
  _dereq_(28) && $export($export.P + _dereq_(69), 'Object', {
    __lookupGetter__: function __lookupGetter__(P){
      var O = toObject(this)
          , K = toPrimitive(P, true)
          , D;
      do {
        if(D = getOwnPropertyDescriptor(O, K))return D.get;
      } while(O = getPrototypeOf(O));
    }
  });
},{"109":109,"110":110,"28":28,"32":32,"69":69,"70":70,"74":74}],270:[function(_dereq_,module,exports){
  'use strict';
  var $export                  = _dereq_(32)
      , toObject                 = _dereq_(109)
      , toPrimitive              = _dereq_(110)
      , getPrototypeOf           = _dereq_(74)
      , getOwnPropertyDescriptor = _dereq_(70).f;

// B.2.2.5 Object.prototype.__lookupSetter__(P)
  _dereq_(28) && $export($export.P + _dereq_(69), 'Object', {
    __lookupSetter__: function __lookupSetter__(P){
      var O = toObject(this)
          , K = toPrimitive(P, true)
          , D;
      do {
        if(D = getOwnPropertyDescriptor(O, K))return D.set;
      } while(O = getPrototypeOf(O));
    }
  });
},{"109":109,"110":110,"28":28,"32":32,"69":69,"70":70,"74":74}],271:[function(_dereq_,module,exports){
// https://github.com/tc39/proposal-object-values-entries
  var $export = _dereq_(32)
      , $values = _dereq_(79)(false);

  $export($export.S, 'Object', {
    values: function values(it){
      return $values(it);
    }
  });
},{"32":32,"79":79}],272:[function(_dereq_,module,exports){
  'use strict';
// https://github.com/zenparsing/es-observable
  var $export     = _dereq_(32)
      , global      = _dereq_(38)
      , core        = _dereq_(23)
      , microtask   = _dereq_(64)()
      , OBSERVABLE  = _dereq_(117)('observable')
      , aFunction   = _dereq_(3)
      , anObject    = _dereq_(7)
      , anInstance  = _dereq_(6)
      , redefineAll = _dereq_(86)
      , hide        = _dereq_(40)
      , forOf       = _dereq_(37)
      , RETURN      = forOf.RETURN;

  var getMethod = function(fn){
    return fn == null ? undefined : aFunction(fn);
  };

  var cleanupSubscription = function(subscription){
    var cleanup = subscription._c;
    if(cleanup){
      subscription._c = undefined;
      cleanup();
    }
  };

  var subscriptionClosed = function(subscription){
    return subscription._o === undefined;
  };

  var closeSubscription = function(subscription){
    if(!subscriptionClosed(subscription)){
      subscription._o = undefined;
      cleanupSubscription(subscription);
    }
  };

  var Subscription = function(observer, subscriber){
    anObject(observer);
    this._c = undefined;
    this._o = observer;
    observer = new SubscriptionObserver(this);
    try {
      var cleanup      = subscriber(observer)
          , subscription = cleanup;
      if(cleanup != null){
        if(typeof cleanup.unsubscribe === 'function')cleanup = function(){ subscription.unsubscribe(); };
        else aFunction(cleanup);
        this._c = cleanup;
      }
    } catch(e){
      observer.error(e);
      return;
    } if(subscriptionClosed(this))cleanupSubscription(this);
  };

  Subscription.prototype = redefineAll({}, {
    unsubscribe: function unsubscribe(){ closeSubscription(this); }
  });

  var SubscriptionObserver = function(subscription){
    this._s = subscription;
  };

  SubscriptionObserver.prototype = redefineAll({}, {
    next: function next(value){
      var subscription = this._s;
      if(!subscriptionClosed(subscription)){
        var observer = subscription._o;
        try {
          var m = getMethod(observer.next);
          if(m)return m.call(observer, value);
        } catch(e){
          try {
            closeSubscription(subscription);
          } finally {
            throw e;
          }
        }
      }
    },
    error: function error(value){
      var subscription = this._s;
      if(subscriptionClosed(subscription))throw value;
      var observer = subscription._o;
      subscription._o = undefined;
      try {
        var m = getMethod(observer.error);
        if(!m)throw value;
        value = m.call(observer, value);
      } catch(e){
        try {
          cleanupSubscription(subscription);
        } finally {
          throw e;
        }
      } cleanupSubscription(subscription);
      return value;
    },
    complete: function complete(value){
      var subscription = this._s;
      if(!subscriptionClosed(subscription)){
        var observer = subscription._o;
        subscription._o = undefined;
        try {
          var m = getMethod(observer.complete);
          value = m ? m.call(observer, value) : undefined;
        } catch(e){
          try {
            cleanupSubscription(subscription);
          } finally {
            throw e;
          }
        } cleanupSubscription(subscription);
        return value;
      }
    }
  });

  var $Observable = function Observable(subscriber){
    anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);
  };

  redefineAll($Observable.prototype, {
    subscribe: function subscribe(observer){
      return new Subscription(observer, this._f);
    },
    forEach: function forEach(fn){
      var that = this;
      return new (core.Promise || global.Promise)(function(resolve, reject){
        aFunction(fn);
        var subscription = that.subscribe({
          next : function(value){
            try {
              return fn(value);
            } catch(e){
              reject(e);
              subscription.unsubscribe();
            }
          },
          error: reject,
          complete: resolve
        });
      });
    }
  });

  redefineAll($Observable, {
    from: function from(x){
      var C = typeof this === 'function' ? this : $Observable;
      var method = getMethod(anObject(x)[OBSERVABLE]);
      if(method){
        var observable = anObject(method.call(x));
        return observable.constructor === C ? observable : new C(function(observer){
          return observable.subscribe(observer);
        });
      }
      return new C(function(observer){
        var done = false;
        microtask(function(){
          if(!done){
            try {
              if(forOf(x, false, function(it){
                    observer.next(it);
                    if(done)return RETURN;
                  }) === RETURN)return;
            } catch(e){
              if(done)throw e;
              observer.error(e);
              return;
            } observer.complete();
          }
        });
        return function(){ done = true; };
      });
    },
    of: function of(){
      for(var i = 0, l = arguments.length, items = Array(l); i < l;)items[i] = arguments[i++];
      return new (typeof this === 'function' ? this : $Observable)(function(observer){
        var done = false;
        microtask(function(){
          if(!done){
            for(var i = 0; i < items.length; ++i){
              observer.next(items[i]);
              if(done)return;
            } observer.complete();
          }
        });
        return function(){ done = true; };
      });
    }
  });

  hide($Observable.prototype, OBSERVABLE, function(){ return this; });

  $export($export.G, {Observable: $Observable});

  _dereq_(91)('Observable');
},{"117":117,"23":23,"3":3,"32":32,"37":37,"38":38,"40":40,"6":6,"64":64,"7":7,"86":86,"91":91}],273:[function(_dereq_,module,exports){
  var metadata                  = _dereq_(63)
      , anObject                  = _dereq_(7)
      , toMetaKey                 = metadata.key
      , ordinaryDefineOwnMetadata = metadata.set;

  metadata.exp({defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey){
    ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));
  }});
},{"63":63,"7":7}],274:[function(_dereq_,module,exports){
  var metadata               = _dereq_(63)
      , anObject               = _dereq_(7)
      , toMetaKey              = metadata.key
      , getOrCreateMetadataMap = metadata.map
      , store                  = metadata.store;

  metadata.exp({deleteMetadata: function deleteMetadata(metadataKey, target /*, targetKey */){
    var targetKey   = arguments.length < 3 ? undefined : toMetaKey(arguments[2])
        , metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);
    if(metadataMap === undefined || !metadataMap['delete'](metadataKey))return false;
    if(metadataMap.size)return true;
    var targetMetadata = store.get(target);
    targetMetadata['delete'](targetKey);
    return !!targetMetadata.size || store['delete'](target);
  }});
},{"63":63,"7":7}],275:[function(_dereq_,module,exports){
  var Set                     = _dereq_(220)
      , from                    = _dereq_(10)
      , metadata                = _dereq_(63)
      , anObject                = _dereq_(7)
      , getPrototypeOf          = _dereq_(74)
      , ordinaryOwnMetadataKeys = metadata.keys
      , toMetaKey               = metadata.key;

  var ordinaryMetadataKeys = function(O, P){
    var oKeys  = ordinaryOwnMetadataKeys(O, P)
        , parent = getPrototypeOf(O);
    if(parent === null)return oKeys;
    var pKeys  = ordinaryMetadataKeys(parent, P);
    return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;
  };

  metadata.exp({getMetadataKeys: function getMetadataKeys(target /*, targetKey */){
    return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
  }});
},{"10":10,"220":220,"63":63,"7":7,"74":74}],276:[function(_dereq_,module,exports){
  var metadata               = _dereq_(63)
      , anObject               = _dereq_(7)
      , getPrototypeOf         = _dereq_(74)
      , ordinaryHasOwnMetadata = metadata.has
      , ordinaryGetOwnMetadata = metadata.get
      , toMetaKey              = metadata.key;

  var ordinaryGetMetadata = function(MetadataKey, O, P){
    var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
    if(hasOwn)return ordinaryGetOwnMetadata(MetadataKey, O, P);
    var parent = getPrototypeOf(O);
    return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;
  };

  metadata.exp({getMetadata: function getMetadata(metadataKey, target /*, targetKey */){
    return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
  }});
},{"63":63,"7":7,"74":74}],277:[function(_dereq_,module,exports){
  var metadata                = _dereq_(63)
      , anObject                = _dereq_(7)
      , ordinaryOwnMetadataKeys = metadata.keys
      , toMetaKey               = metadata.key;

  metadata.exp({getOwnMetadataKeys: function getOwnMetadataKeys(target /*, targetKey */){
    return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
  }});
},{"63":63,"7":7}],278:[function(_dereq_,module,exports){
  var metadata               = _dereq_(63)
      , anObject               = _dereq_(7)
      , ordinaryGetOwnMetadata = metadata.get
      , toMetaKey              = metadata.key;

  metadata.exp({getOwnMetadata: function getOwnMetadata(metadataKey, target /*, targetKey */){
    return ordinaryGetOwnMetadata(metadataKey, anObject(target)
        , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
  }});
},{"63":63,"7":7}],279:[function(_dereq_,module,exports){
  var metadata               = _dereq_(63)
      , anObject               = _dereq_(7)
      , getPrototypeOf         = _dereq_(74)
      , ordinaryHasOwnMetadata = metadata.has
      , toMetaKey              = metadata.key;

  var ordinaryHasMetadata = function(MetadataKey, O, P){
    var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
    if(hasOwn)return true;
    var parent = getPrototypeOf(O);
    return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;
  };

  metadata.exp({hasMetadata: function hasMetadata(metadataKey, target /*, targetKey */){
    return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
  }});
},{"63":63,"7":7,"74":74}],280:[function(_dereq_,module,exports){
  var metadata               = _dereq_(63)
      , anObject               = _dereq_(7)
      , ordinaryHasOwnMetadata = metadata.has
      , toMetaKey              = metadata.key;

  metadata.exp({hasOwnMetadata: function hasOwnMetadata(metadataKey, target /*, targetKey */){
    return ordinaryHasOwnMetadata(metadataKey, anObject(target)
        , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
  }});
},{"63":63,"7":7}],281:[function(_dereq_,module,exports){
  var metadata                  = _dereq_(63)
      , anObject                  = _dereq_(7)
      , aFunction                 = _dereq_(3)
      , toMetaKey                 = metadata.key
      , ordinaryDefineOwnMetadata = metadata.set;

  metadata.exp({metadata: function metadata(metadataKey, metadataValue){
    return function decorator(target, targetKey){
      ordinaryDefineOwnMetadata(
          metadataKey, metadataValue,
          (targetKey !== undefined ? anObject : aFunction)(target),
          toMetaKey(targetKey)
      );
    };
  }});
},{"3":3,"63":63,"7":7}],282:[function(_dereq_,module,exports){
// https://github.com/DavidBruant/Map-Set.prototype.toJSON
  var $export  = _dereq_(32);

  $export($export.P + $export.R, 'Set', {toJSON: _dereq_(20)('Set')});
},{"20":20,"32":32}],283:[function(_dereq_,module,exports){
  'use strict';
// https://github.com/mathiasbynens/String.prototype.at
  var $export = _dereq_(32)
      , $at     = _dereq_(97)(true);

  $export($export.P, 'String', {
    at: function at(pos){
      return $at(this, pos);
    }
  });
},{"32":32,"97":97}],284:[function(_dereq_,module,exports){
  'use strict';
// https://tc39.github.io/String.prototype.matchAll/
  var $export     = _dereq_(32)
      , defined     = _dereq_(27)
      , toLength    = _dereq_(108)
      , isRegExp    = _dereq_(50)
      , getFlags    = _dereq_(36)
      , RegExpProto = RegExp.prototype;

  var $RegExpStringIterator = function(regexp, string){
    this._r = regexp;
    this._s = string;
  };

  _dereq_(52)($RegExpStringIterator, 'RegExp String', function next(){
    var match = this._r.exec(this._s);
    return {value: match, done: match === null};
  });

  $export($export.P, 'String', {
    matchAll: function matchAll(regexp){
      defined(this);
      if(!isRegExp(regexp))throw TypeError(regexp + ' is not a regexp!');
      var S     = String(this)
          , flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp)
          , rx    = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);
      rx.lastIndex = toLength(regexp.lastIndex);
      return new $RegExpStringIterator(rx, S);
    }
  });
},{"108":108,"27":27,"32":32,"36":36,"50":50,"52":52}],285:[function(_dereq_,module,exports){
  'use strict';
// https://github.com/tc39/proposal-string-pad-start-end
  var $export = _dereq_(32)
      , $pad    = _dereq_(100);

  $export($export.P, 'String', {
    padEnd: function padEnd(maxLength /*, fillString = ' ' */){
      return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
    }
  });
},{"100":100,"32":32}],286:[function(_dereq_,module,exports){
  'use strict';
// https://github.com/tc39/proposal-string-pad-start-end
  var $export = _dereq_(32)
      , $pad    = _dereq_(100);

  $export($export.P, 'String', {
    padStart: function padStart(maxLength /*, fillString = ' ' */){
      return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
    }
  });
},{"100":100,"32":32}],287:[function(_dereq_,module,exports){
  'use strict';
// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
  _dereq_(102)('trimLeft', function($trim){
    return function trimLeft(){
      return $trim(this, 1);
    };
  }, 'trimStart');
},{"102":102}],288:[function(_dereq_,module,exports){
  'use strict';
// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
  _dereq_(102)('trimRight', function($trim){
    return function trimRight(){
      return $trim(this, 2);
    };
  }, 'trimEnd');
},{"102":102}],289:[function(_dereq_,module,exports){
  _dereq_(115)('asyncIterator');
},{"115":115}],290:[function(_dereq_,module,exports){
  _dereq_(115)('observable');
},{"115":115}],291:[function(_dereq_,module,exports){
// https://github.com/ljharb/proposal-global
  var $export = _dereq_(32);

  $export($export.S, 'System', {global: _dereq_(38)});
},{"32":32,"38":38}],292:[function(_dereq_,module,exports){
  var $iterators    = _dereq_(130)
      , redefine      = _dereq_(87)
      , global        = _dereq_(38)
      , hide          = _dereq_(40)
      , Iterators     = _dereq_(56)
      , wks           = _dereq_(117)
      , ITERATOR      = wks('iterator')
      , TO_STRING_TAG = wks('toStringTag')
      , ArrayValues   = Iterators.Array;

  for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
    var NAME       = collections[i]
        , Collection = global[NAME]
        , proto      = Collection && Collection.prototype
        , key;
    if(proto){
      if(!proto[ITERATOR])hide(proto, ITERATOR, ArrayValues);
      if(!proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);
      Iterators[NAME] = ArrayValues;
      for(key in $iterators)if(!proto[key])redefine(proto, key, $iterators[key], true);
    }
  }
},{"117":117,"130":130,"38":38,"40":40,"56":56,"87":87}],293:[function(_dereq_,module,exports){
  var $export = _dereq_(32)
      , $task   = _dereq_(104);
  $export($export.G + $export.B, {
    setImmediate:   $task.set,
    clearImmediate: $task.clear
  });
},{"104":104,"32":32}],294:[function(_dereq_,module,exports){
// ie9- setTimeout & setInterval additional parameters fix
  var global     = _dereq_(38)
      , $export    = _dereq_(32)
      , invoke     = _dereq_(44)
      , partial    = _dereq_(83)
      , navigator  = global.navigator
      , MSIE       = !!navigator && /MSIE .\./.test(navigator.userAgent); // <- dirty ie9- check
  var wrap = function(set){
    return MSIE ? function(fn, time /*, ...args */){
      return set(invoke(
          partial,
          [].slice.call(arguments, 2),
          typeof fn == 'function' ? fn : Function(fn)
      ), time);
    } : set;
  };
  $export($export.G + $export.B + $export.F * MSIE, {
    setTimeout:  wrap(global.setTimeout),
    setInterval: wrap(global.setInterval)
  });
},{"32":32,"38":38,"44":44,"83":83}],295:[function(_dereq_,module,exports){
  _dereq_(243);
  _dereq_(180);
  _dereq_(182);
  _dereq_(181);
  _dereq_(184);
  _dereq_(186);
  _dereq_(191);
  _dereq_(185);
  _dereq_(183);
  _dereq_(193);
  _dereq_(192);
  _dereq_(188);
  _dereq_(189);
  _dereq_(187);
  _dereq_(179);
  _dereq_(190);
  _dereq_(194);
  _dereq_(195);
  _dereq_(146);
  _dereq_(148);
  _dereq_(147);
  _dereq_(197);
  _dereq_(196);
  _dereq_(167);
  _dereq_(177);
  _dereq_(178);
  _dereq_(168);
  _dereq_(169);
  _dereq_(170);
  _dereq_(171);
  _dereq_(172);
  _dereq_(173);
  _dereq_(174);
  _dereq_(175);
  _dereq_(176);
  _dereq_(150);
  _dereq_(151);
  _dereq_(152);
  _dereq_(153);
  _dereq_(154);
  _dereq_(155);
  _dereq_(156);
  _dereq_(157);
  _dereq_(158);
  _dereq_(159);
  _dereq_(160);
  _dereq_(161);
  _dereq_(162);
  _dereq_(163);
  _dereq_(164);
  _dereq_(165);
  _dereq_(166);
  _dereq_(230);
  _dereq_(235);
  _dereq_(242);
  _dereq_(233);
  _dereq_(225);
  _dereq_(226);
  _dereq_(231);
  _dereq_(236);
  _dereq_(238);
  _dereq_(221);
  _dereq_(222);
  _dereq_(223);
  _dereq_(224);
  _dereq_(227);
  _dereq_(228);
  _dereq_(229);
  _dereq_(232);
  _dereq_(234);
  _dereq_(237);
  _dereq_(239);
  _dereq_(240);
  _dereq_(241);
  _dereq_(141);
  _dereq_(143);
  _dereq_(142);
  _dereq_(145);
  _dereq_(144);
  _dereq_(129);
  _dereq_(127);
  _dereq_(134);
  _dereq_(131);
  _dereq_(137);
  _dereq_(139);
  _dereq_(126);
  _dereq_(133);
  _dereq_(123);
  _dereq_(138);
  _dereq_(121);
  _dereq_(136);
  _dereq_(135);
  _dereq_(128);
  _dereq_(132);
  _dereq_(120);
  _dereq_(122);
  _dereq_(125);
  _dereq_(124);
  _dereq_(140);
  _dereq_(130);
  _dereq_(213);
  _dereq_(219);
  _dereq_(214);
  _dereq_(215);
  _dereq_(216);
  _dereq_(217);
  _dereq_(218);
  _dereq_(198);
  _dereq_(149);
  _dereq_(220);
  _dereq_(255);
  _dereq_(256);
  _dereq_(244);
  _dereq_(245);
  _dereq_(250);
  _dereq_(253);
  _dereq_(254);
  _dereq_(248);
  _dereq_(251);
  _dereq_(249);
  _dereq_(252);
  _dereq_(246);
  _dereq_(247);
  _dereq_(199);
  _dereq_(200);
  _dereq_(201);
  _dereq_(202);
  _dereq_(203);
  _dereq_(206);
  _dereq_(204);
  _dereq_(205);
  _dereq_(207);
  _dereq_(208);
  _dereq_(209);
  _dereq_(210);
  _dereq_(212);
  _dereq_(211);
  _dereq_(257);
  _dereq_(283);
  _dereq_(286);
  _dereq_(285);
  _dereq_(287);
  _dereq_(288);
  _dereq_(284);
  _dereq_(289);
  _dereq_(290);
  _dereq_(268);
  _dereq_(271);
  _dereq_(267);
  _dereq_(265);
  _dereq_(266);
  _dereq_(269);
  _dereq_(270);
  _dereq_(260);
  _dereq_(282);
  _dereq_(291);
  _dereq_(259);
  _dereq_(261);
  _dereq_(263);
  _dereq_(262);
  _dereq_(264);
  _dereq_(273);
  _dereq_(274);
  _dereq_(276);
  _dereq_(275);
  _dereq_(278);
  _dereq_(277);
  _dereq_(279);
  _dereq_(280);
  _dereq_(281);
  _dereq_(258);
  _dereq_(272);
  _dereq_(294);
  _dereq_(293);
  _dereq_(292);
  module.exports = _dereq_(23);
},{"120":120,"121":121,"122":122,"123":123,"124":124,"125":125,"126":126,"127":127,"128":128,"129":129,"130":130,"131":131,"132":132,"133":133,"134":134,"135":135,"136":136,"137":137,"138":138,"139":139,"140":140,"141":141,"142":142,"143":143,"144":144,"145":145,"146":146,"147":147,"148":148,"149":149,"150":150,"151":151,"152":152,"153":153,"154":154,"155":155,"156":156,"157":157,"158":158,"159":159,"160":160,"161":161,"162":162,"163":163,"164":164,"165":165,"166":166,"167":167,"168":168,"169":169,"170":170,"171":171,"172":172,"173":173,"174":174,"175":175,"176":176,"177":177,"178":178,"179":179,"180":180,"181":181,"182":182,"183":183,"184":184,"185":185,"186":186,"187":187,"188":188,"189":189,"190":190,"191":191,"192":192,"193":193,"194":194,"195":195,"196":196,"197":197,"198":198,"199":199,"200":200,"201":201,"202":202,"203":203,"204":204,"205":205,"206":206,"207":207,"208":208,"209":209,"210":210,"211":211,"212":212,"213":213,"214":214,"215":215,"216":216,"217":217,"218":218,"219":219,"220":220,"221":221,"222":222,"223":223,"224":224,"225":225,"226":226,"227":227,"228":228,"229":229,"23":23,"230":230,"231":231,"232":232,"233":233,"234":234,"235":235,"236":236,"237":237,"238":238,"239":239,"240":240,"241":241,"242":242,"243":243,"244":244,"245":245,"246":246,"247":247,"248":248,"249":249,"250":250,"251":251,"252":252,"253":253,"254":254,"255":255,"256":256,"257":257,"258":258,"259":259,"260":260,"261":261,"262":262,"263":263,"264":264,"265":265,"266":266,"267":267,"268":268,"269":269,"270":270,"271":271,"272":272,"273":273,"274":274,"275":275,"276":276,"277":277,"278":278,"279":279,"280":280,"281":281,"282":282,"283":283,"284":284,"285":285,"286":286,"287":287,"288":288,"289":289,"290":290,"291":291,"292":292,"293":293,"294":294}],296:[function(_dereq_,module,exports){
  (function (global){
    /**
     * Copyright (c) 2014, Facebook, Inc.
     * All rights reserved.
     *
     * This source code is licensed under the BSD-style license found in the
     * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
     * additional grant of patent rights can be found in the PATENTS file in
     * the same directory.
     */

    !(function(global) {
      "use strict";

      var hasOwn = Object.prototype.hasOwnProperty;
      var undefined; // More compressible than void 0.
      var $Symbol = typeof Symbol === "function" ? Symbol : {};
      var iteratorSymbol = $Symbol.iterator || "@@iterator";
      var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

      var inModule = typeof module === "object";
      var runtime = global.regeneratorRuntime;
      if (runtime) {
        if (inModule) {
          // If regeneratorRuntime is defined globally and we're in a module,
          // make the exports object identical to regeneratorRuntime.
          module.exports = runtime;
        }
        // Don't bother evaluating the rest of this file if the runtime was
        // already defined globally.
        return;
      }

      // Define the runtime globally (as expected by generated code) as either
      // module.exports (if we're in a module) or a new, empty object.
      runtime = global.regeneratorRuntime = inModule ? module.exports : {};

      function wrap(innerFn, outerFn, self, tryLocsList) {
        // If outerFn provided, then outerFn.prototype instanceof Generator.
        var generator = Object.create((outerFn || Generator).prototype);
        var context = new Context(tryLocsList || []);

        // The ._invoke method unifies the implementations of the .next,
        // .throw, and .return methods.
        generator._invoke = makeInvokeMethod(innerFn, self, context);

        return generator;
      }
      runtime.wrap = wrap;

      // Try/catch helper to minimize deoptimizations. Returns a completion
      // record like context.tryEntries[i].completion. This interface could
      // have been (and was previously) designed to take a closure to be
      // invoked without arguments, but in all the cases we care about we
      // already have an existing method we want to call, so there's no need
      // to create a new function object. We can even get away with assuming
      // the method takes exactly one argument, since that happens to be true
      // in every case, so we don't have to touch the arguments object. The
      // only additional allocation required is the completion record, which
      // has a stable shape and so hopefully should be cheap to allocate.
      function tryCatch(fn, obj, arg) {
        try {
          return { type: "normal", arg: fn.call(obj, arg) };
        } catch (err) {
          return { type: "throw", arg: err };
        }
      }

      var GenStateSuspendedStart = "suspendedStart";
      var GenStateSuspendedYield = "suspendedYield";
      var GenStateExecuting = "executing";
      var GenStateCompleted = "completed";

      // Returning this object from the innerFn has the same effect as
      // breaking out of the dispatch switch statement.
      var ContinueSentinel = {};

      // Dummy constructor functions that we use as the .constructor and
      // .constructor.prototype properties for functions that return Generator
      // objects. For full spec compliance, you may wish to configure your
      // minifier not to mangle the names of these two functions.
      function Generator() {}
      function GeneratorFunction() {}
      function GeneratorFunctionPrototype() {}

      var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;
      GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
      GeneratorFunctionPrototype.constructor = GeneratorFunction;
      GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

      // Helper for defining the .next, .throw, and .return methods of the
      // Iterator interface in terms of a single ._invoke method.
      function defineIteratorMethods(prototype) {
        ["next", "throw", "return"].forEach(function(method) {
          prototype[method] = function(arg) {
            return this._invoke(method, arg);
          };
        });
      }

      runtime.isGeneratorFunction = function(genFun) {
        var ctor = typeof genFun === "function" && genFun.constructor;
        return ctor
            ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
            : false;
      };

      runtime.mark = function(genFun) {
        if (Object.setPrototypeOf) {
          Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
        } else {
          genFun.__proto__ = GeneratorFunctionPrototype;
          if (!(toStringTagSymbol in genFun)) {
            genFun[toStringTagSymbol] = "GeneratorFunction";
          }
        }
        genFun.prototype = Object.create(Gp);
        return genFun;
      };

      // Within the body of any async function, `await x` is transformed to
      // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
      // `value instanceof AwaitArgument` to determine if the yielded value is
      // meant to be awaited. Some may consider the name of this method too
      // cutesy, but they are curmudgeons.
      runtime.awrap = function(arg) {
        return new AwaitArgument(arg);
      };

      function AwaitArgument(arg) {
        this.arg = arg;
      }

      function AsyncIterator(generator) {
        function invoke(method, arg, resolve, reject) {
          var record = tryCatch(generator[method], generator, arg);
          if (record.type === "throw") {
            reject(record.arg);
          } else {
            var result = record.arg;
            var value = result.value;
            if (value instanceof AwaitArgument) {
              return Promise.resolve(value.arg).then(function(value) {
                invoke("next", value, resolve, reject);
              }, function(err) {
                invoke("throw", err, resolve, reject);
              });
            }

            return Promise.resolve(value).then(function(unwrapped) {
              // When a yielded Promise is resolved, its final value becomes
              // the .value of the Promise<{value,done}> result for the
              // current iteration. If the Promise is rejected, however, the
              // result for this iteration will be rejected with the same
              // reason. Note that rejections of yielded Promises are not
              // thrown back into the generator function, as is the case
              // when an awaited Promise is rejected. This difference in
              // behavior between yield and await is important, because it
              // allows the consumer to decide what to do with the yielded
              // rejection (swallow it and continue, manually .throw it back
              // into the generator, abandon iteration, whatever). With
              // await, by contrast, there is no opportunity to examine the
              // rejection reason outside the generator function, so the
              // only option is to throw it from the await expression, and
              // let the generator function handle the exception.
              result.value = unwrapped;
              resolve(result);
            }, reject);
          }
        }

        if (typeof process === "object" && process.domain) {
          invoke = process.domain.bind(invoke);
        }

        var previousPromise;

        function enqueue(method, arg) {
          function callInvokeWithMethodAndArg() {
            return new Promise(function(resolve, reject) {
              invoke(method, arg, resolve, reject);
            });
          }

          return previousPromise =
              // If enqueue has been called before, then we want to wait until
              // all previous Promises have been resolved before calling invoke,
              // so that results are always delivered in the correct order. If
              // enqueue has not been called before, then it is important to
              // call invoke immediately, without waiting on a callback to fire,
              // so that the async generator function has the opportunity to do
              // any necessary setup in a predictable way. This predictability
              // is why the Promise constructor synchronously invokes its
              // executor callback, and why async functions synchronously
              // execute code before the first await. Since we implement simple
              // async functions in terms of async generators, it is especially
              // important to get this right, even though it requires care.
              previousPromise ? previousPromise.then(
                  callInvokeWithMethodAndArg,
                  // Avoid propagating failures to Promises returned by later
                  // invocations of the iterator.
                  callInvokeWithMethodAndArg
              ) : callInvokeWithMethodAndArg();
        }

        // Define the unified helper method that is used to implement .next,
        // .throw, and .return (see defineIteratorMethods).
        this._invoke = enqueue;
      }

      defineIteratorMethods(AsyncIterator.prototype);

      // Note that simple async functions are implemented on top of
      // AsyncIterator objects; they just return a Promise for the value of
      // the final result produced by the iterator.
      runtime.async = function(innerFn, outerFn, self, tryLocsList) {
        var iter = new AsyncIterator(
            wrap(innerFn, outerFn, self, tryLocsList)
        );

        return runtime.isGeneratorFunction(outerFn)
            ? iter // If outerFn is a generator, return the full iterator.
            : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
      };

      function makeInvokeMethod(innerFn, self, context) {
        var state = GenStateSuspendedStart;

        return function invoke(method, arg) {
          if (state === GenStateExecuting) {
            throw new Error("Generator is already running");
          }

          if (state === GenStateCompleted) {
            if (method === "throw") {
              throw arg;
            }

            // Be forgiving, per 25.3.3.3.3 of the spec:
            // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
            return doneResult();
          }

          while (true) {
            var delegate = context.delegate;
            if (delegate) {
              if (method === "return" ||
                  (method === "throw" && delegate.iterator[method] === undefined)) {
                // A return or throw (when the delegate iterator has no throw
                // method) always terminates the yield* loop.
                context.delegate = null;

                // If the delegate iterator has a return method, give it a
                // chance to clean up.
                var returnMethod = delegate.iterator["return"];
                if (returnMethod) {
                  var record = tryCatch(returnMethod, delegate.iterator, arg);
                  if (record.type === "throw") {
                    // If the return method threw an exception, let that
                    // exception prevail over the original return or throw.
                    method = "throw";
                    arg = record.arg;
                    continue;
                  }
                }

                if (method === "return") {
                  // Continue with the outer return, now that the delegate
                  // iterator has been terminated.
                  continue;
                }
              }

              var record = tryCatch(
                  delegate.iterator[method],
                  delegate.iterator,
                  arg
              );

              if (record.type === "throw") {
                context.delegate = null;

                // Like returning generator.throw(uncaught), but without the
                // overhead of an extra function call.
                method = "throw";
                arg = record.arg;
                continue;
              }

              // Delegate generator ran and handled its own exceptions so
              // regardless of what the method was, we continue as if it is
              // "next" with an undefined arg.
              method = "next";
              arg = undefined;

              var info = record.arg;
              if (info.done) {
                context[delegate.resultName] = info.value;
                context.next = delegate.nextLoc;
              } else {
                state = GenStateSuspendedYield;
                return info;
              }

              context.delegate = null;
            }

            if (method === "next") {
              // Setting context._sent for legacy support of Babel's
              // function.sent implementation.
              context.sent = context._sent = arg;

            } else if (method === "throw") {
              if (state === GenStateSuspendedStart) {
                state = GenStateCompleted;
                throw arg;
              }

              if (context.dispatchException(arg)) {
                // If the dispatched exception was caught by a catch block,
                // then let that catch block handle the exception normally.
                method = "next";
                arg = undefined;
              }

            } else if (method === "return") {
              context.abrupt("return", arg);
            }

            state = GenStateExecuting;

            var record = tryCatch(innerFn, self, context);
            if (record.type === "normal") {
              // If an exception is thrown from innerFn, we leave state ===
              // GenStateExecuting and loop back for another invocation.
              state = context.done
                  ? GenStateCompleted
                  : GenStateSuspendedYield;

              var info = {
                value: record.arg,
                done: context.done
              };

              if (record.arg === ContinueSentinel) {
                if (context.delegate && method === "next") {
                  // Deliberately forget the last sent value so that we don't
                  // accidentally pass it on to the delegate.
                  arg = undefined;
                }
              } else {
                return info;
              }

            } else if (record.type === "throw") {
              state = GenStateCompleted;
              // Dispatch the exception by looping back around to the
              // context.dispatchException(arg) call above.
              method = "throw";
              arg = record.arg;
            }
          }
        };
      }

      // Define Generator.prototype.{next,throw,return} in terms of the
      // unified ._invoke helper method.
      defineIteratorMethods(Gp);

      Gp[iteratorSymbol] = function() {
        return this;
      };

      Gp[toStringTagSymbol] = "Generator";

      Gp.toString = function() {
        return "[object Generator]";
      };

      function pushTryEntry(locs) {
        var entry = { tryLoc: locs[0] };

        if (1 in locs) {
          entry.catchLoc = locs[1];
        }

        if (2 in locs) {
          entry.finallyLoc = locs[2];
          entry.afterLoc = locs[3];
        }

        this.tryEntries.push(entry);
      }

      function resetTryEntry(entry) {
        var record = entry.completion || {};
        record.type = "normal";
        delete record.arg;
        entry.completion = record;
      }

      function Context(tryLocsList) {
        // The root entry object (effectively a try statement without a catch
        // or a finally block) gives us a place to store values thrown from
        // locations where there is no enclosing try statement.
        this.tryEntries = [{ tryLoc: "root" }];
        tryLocsList.forEach(pushTryEntry, this);
        this.reset(true);
      }

      runtime.keys = function(object) {
        var keys = [];
        for (var key in object) {
          keys.push(key);
        }
        keys.reverse();

        // Rather than returning an object with a next method, we keep
        // things simple and return the next function itself.
        return function next() {
          while (keys.length) {
            var key = keys.pop();
            if (key in object) {
              next.value = key;
              next.done = false;
              return next;
            }
          }

          // To avoid creating an additional object, we just hang the .value
          // and .done properties off the next function object itself. This
          // also ensures that the minifier will not anonymize the function.
          next.done = true;
          return next;
        };
      };

      function values(iterable) {
        if (iterable) {
          var iteratorMethod = iterable[iteratorSymbol];
          if (iteratorMethod) {
            return iteratorMethod.call(iterable);
          }

          if (typeof iterable.next === "function") {
            return iterable;
          }

          if (!isNaN(iterable.length)) {
            var i = -1, next = function next() {
              while (++i < iterable.length) {
                if (hasOwn.call(iterable, i)) {
                  next.value = iterable[i];
                  next.done = false;
                  return next;
                }
              }

              next.value = undefined;
              next.done = true;

              return next;
            };

            return next.next = next;
          }
        }

        // Return an iterator with no values.
        return { next: doneResult };
      }
      runtime.values = values;

      function doneResult() {
        return { value: undefined, done: true };
      }

      Context.prototype = {
        constructor: Context,

        reset: function(skipTempReset) {
          this.prev = 0;
          this.next = 0;
          // Resetting context._sent for legacy support of Babel's
          // function.sent implementation.
          this.sent = this._sent = undefined;
          this.done = false;
          this.delegate = null;

          this.tryEntries.forEach(resetTryEntry);

          if (!skipTempReset) {
            for (var name in this) {
              // Not sure about the optimal order of these conditions:
              if (name.charAt(0) === "t" &&
                  hasOwn.call(this, name) &&
                  !isNaN(+name.slice(1))) {
                this[name] = undefined;
              }
            }
          }
        },

        stop: function() {
          this.done = true;

          var rootEntry = this.tryEntries[0];
          var rootRecord = rootEntry.completion;
          if (rootRecord.type === "throw") {
            throw rootRecord.arg;
          }

          return this.rval;
        },

        dispatchException: function(exception) {
          if (this.done) {
            throw exception;
          }

          var context = this;
          function handle(loc, caught) {
            record.type = "throw";
            record.arg = exception;
            context.next = loc;
            return !!caught;
          }

          for (var i = this.tryEntries.length - 1; i >= 0; --i) {
            var entry = this.tryEntries[i];
            var record = entry.completion;

            if (entry.tryLoc === "root") {
              // Exception thrown outside of any try block that could handle
              // it, so set the completion value of the entire function to
              // throw the exception.
              return handle("end");
            }

            if (entry.tryLoc <= this.prev) {
              var hasCatch = hasOwn.call(entry, "catchLoc");
              var hasFinally = hasOwn.call(entry, "finallyLoc");

              if (hasCatch && hasFinally) {
                if (this.prev < entry.catchLoc) {
                  return handle(entry.catchLoc, true);
                } else if (this.prev < entry.finallyLoc) {
                  return handle(entry.finallyLoc);
                }

              } else if (hasCatch) {
                if (this.prev < entry.catchLoc) {
                  return handle(entry.catchLoc, true);
                }

              } else if (hasFinally) {
                if (this.prev < entry.finallyLoc) {
                  return handle(entry.finallyLoc);
                }

              } else {
                throw new Error("try statement without catch or finally");
              }
            }
          }
        },

        abrupt: function(type, arg) {
          for (var i = this.tryEntries.length - 1; i >= 0; --i) {
            var entry = this.tryEntries[i];
            if (entry.tryLoc <= this.prev &&
                hasOwn.call(entry, "finallyLoc") &&
                this.prev < entry.finallyLoc) {
              var finallyEntry = entry;
              break;
            }
          }

          if (finallyEntry &&
              (type === "break" ||
              type === "continue") &&
              finallyEntry.tryLoc <= arg &&
              arg <= finallyEntry.finallyLoc) {
            // Ignore the finally entry if control is not jumping to a
            // location outside the try/catch block.
            finallyEntry = null;
          }

          var record = finallyEntry ? finallyEntry.completion : {};
          record.type = type;
          record.arg = arg;

          if (finallyEntry) {
            this.next = finallyEntry.finallyLoc;
          } else {
            this.complete(record);
          }

          return ContinueSentinel;
        },

        complete: function(record, afterLoc) {
          if (record.type === "throw") {
            throw record.arg;
          }

          if (record.type === "break" ||
              record.type === "continue") {
            this.next = record.arg;
          } else if (record.type === "return") {
            this.rval = record.arg;
            this.next = "end";
          } else if (record.type === "normal" && afterLoc) {
            this.next = afterLoc;
          }
        },

        finish: function(finallyLoc) {
          for (var i = this.tryEntries.length - 1; i >= 0; --i) {
            var entry = this.tryEntries[i];
            if (entry.finallyLoc === finallyLoc) {
              this.complete(entry.completion, entry.afterLoc);
              resetTryEntry(entry);
              return ContinueSentinel;
            }
          }
        },

        "catch": function(tryLoc) {
          for (var i = this.tryEntries.length - 1; i >= 0; --i) {
            var entry = this.tryEntries[i];
            if (entry.tryLoc === tryLoc) {
              var record = entry.completion;
              if (record.type === "throw") {
                var thrown = record.arg;
                resetTryEntry(entry);
              }
              return thrown;
            }
          }

          // The context.catch method must only be called with a location
          // argument that corresponds to a known catch block.
          throw new Error("illegal catch attempt");
        },

        delegateYield: function(iterable, resultName, nextLoc) {
          this.delegate = {
            iterator: values(iterable),
            resultName: resultName,
            nextLoc: nextLoc
          };

          return ContinueSentinel;
        }
      };
    })(
        // Among the various tricks for obtaining a reference to the global
        // object, this seems to be the most reliable technique that does not
        // use indirect eval (which violates Content Security Policy).
        typeof global === "object" ? global :
            typeof window === "object" ? window :
                typeof self === "object" ? self : this
    );

  }).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}]},{},[1]);

});
define('libs/underscore.js', function(module, exports) {
//     Underscore.js 1.8.3
//     http://underscorejs.org
//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.

(function() {

    // Baseline setup
    // --------------

    // Establish the root object, `window` in the browser, or `exports` on the server.
    var root = this;

    // Save the previous value of the `_` variable.
    var previousUnderscore = root._;

    // Save bytes in the minified (but not gzipped) version:
    var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;

    // Create quick reference variables for speed access to core prototypes.
    var
        push             = ArrayProto.push,
        slice            = ArrayProto.slice,
        toString         = ObjProto.toString,
        hasOwnProperty   = ObjProto.hasOwnProperty;

    // All **ECMAScript 5** native function implementations that we hope to use
    // are declared here.
    var
        nativeIsArray      = Array.isArray,
        nativeKeys         = Object.keys,
        nativeBind         = FuncProto.bind,
        nativeCreate       = Object.create;

    // Naked function reference for surrogate-prototype-swapping.
    var Ctor = function(){};

    // Create a safe reference to the Underscore object for use below.
    var _ = function(obj) {
        if (obj instanceof _) return obj;
        if (!(this instanceof _)) return new _(obj);
        this._wrapped = obj;
    };

    // Export the Underscore object for **Node.js**, with
    // backwards-compatibility for the old `require()` API. If we're in
    // the browser, add `_` as a global object.
    if (typeof exports !== 'undefined') {
        if (typeof module !== 'undefined' && module.exports) {
            exports = module.exports = _;
        }
        exports._ = _;
    } else {
        root._ = _;
    }

    // Current version.
    _.VERSION = '1.8.3';

    // Internal function that returns an efficient (for current engines) version
    // of the passed-in callback, to be repeatedly applied in other Underscore
    // functions.
    var optimizeCb = function(func, context, argCount) {
        if (context === void 0) return func;
        switch (argCount == null ? 3 : argCount) {
            case 1: return function(value) {
                return func.call(context, value);
            };
            case 2: return function(value, other) {
                return func.call(context, value, other);
            };
            case 3: return function(value, index, collection) {
                return func.call(context, value, index, collection);
            };
            case 4: return function(accumulator, value, index, collection) {
                return func.call(context, accumulator, value, index, collection);
            };
        }
        return function() {
            return func.apply(context, arguments);
        };
    };

    // A mostly-internal function to generate callbacks that can be applied
    // to each element in a collection, returning the desired result — either
    // identity, an arbitrary callback, a property matcher, or a property accessor.
    var cb = function(value, context, argCount) {
        if (value == null) return _.identity;
        if (_.isFunction(value)) return optimizeCb(value, context, argCount);
        if (_.isObject(value)) return _.matcher(value);
        return _.property(value);
    };
    _.iteratee = function(value, context) {
        return cb(value, context, Infinity);
    };

    // An internal function for creating assigner functions.
    var createAssigner = function(keysFunc, undefinedOnly) {
        return function(obj) {
            var length = arguments.length;
            if (length < 2 || obj == null) return obj;
            for (var index = 1; index < length; index++) {
                var source = arguments[index],
                    keys = keysFunc(source),
                    l = keys.length;
                for (var i = 0; i < l; i++) {
                    var key = keys[i];
                    if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];
                }
            }
            return obj;
        };
    };

    // An internal function for creating a new object that inherits from another.
    var baseCreate = function(prototype) {
        if (!_.isObject(prototype)) return {};
        if (nativeCreate) return nativeCreate(prototype);
        Ctor.prototype = prototype;
        var result = new Ctor;
        Ctor.prototype = null;
        return result;
    };

    var property = function(key) {
        return function(obj) {
            return obj == null ? void 0 : obj[key];
        };
    };

    // Helper for collection methods to determine whether a collection
    // should be iterated as an array or as an object
    // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength
    // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094
    var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;
    var getLength = property('length');
    var isArrayLike = function(collection) {
        var length = getLength(collection);
        return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;
    };

    // Collection Functions
    // --------------------

    // The cornerstone, an `each` implementation, aka `forEach`.
    // Handles raw objects in addition to array-likes. Treats all
    // sparse array-likes as if they were dense.
    _.each = _.forEach = function(obj, iteratee, context) {
        iteratee = optimizeCb(iteratee, context);
        var i, length;
        if (isArrayLike(obj)) {
            for (i = 0, length = obj.length; i < length; i++) {
                iteratee(obj[i], i, obj);
            }
        } else {
            var keys = _.keys(obj);
            for (i = 0, length = keys.length; i < length; i++) {
                iteratee(obj[keys[i]], keys[i], obj);
            }
        }
        return obj;
    };

    // Return the results of applying the iteratee to each element.
    _.map = _.collect = function(obj, iteratee, context) {
        iteratee = cb(iteratee, context);
        var keys = !isArrayLike(obj) && _.keys(obj),
            length = (keys || obj).length,
            results = Array(length);
        for (var index = 0; index < length; index++) {
            var currentKey = keys ? keys[index] : index;
            results[index] = iteratee(obj[currentKey], currentKey, obj);
        }
        return results;
    };

    // Create a reducing function iterating left or right.
    function createReduce(dir) {
        // Optimized iterator function as using arguments.length
        // in the main function will deoptimize the, see #1991.
        function iterator(obj, iteratee, memo, keys, index, length) {
            for (; index >= 0 && index < length; index += dir) {
                var currentKey = keys ? keys[index] : index;
                memo = iteratee(memo, obj[currentKey], currentKey, obj);
            }
            return memo;
        }

        return function(obj, iteratee, memo, context) {
            iteratee = optimizeCb(iteratee, context, 4);
            var keys = !isArrayLike(obj) && _.keys(obj),
                length = (keys || obj).length,
                index = dir > 0 ? 0 : length - 1;
            // Determine the initial value if none is provided.
            if (arguments.length < 3) {
                memo = obj[keys ? keys[index] : index];
                index += dir;
            }
            return iterator(obj, iteratee, memo, keys, index, length);
        };
    }

    // **Reduce** builds up a single result from a list of values, aka `inject`,
    // or `foldl`.
    _.reduce = _.foldl = _.inject = createReduce(1);

    // The right-associative version of reduce, also known as `foldr`.
    _.reduceRight = _.foldr = createReduce(-1);

    // Return the first value which passes a truth test. Aliased as `detect`.
    _.find = _.detect = function(obj, predicate, context) {
        var key;
        if (isArrayLike(obj)) {
            key = _.findIndex(obj, predicate, context);
        } else {
            key = _.findKey(obj, predicate, context);
        }
        if (key !== void 0 && key !== -1) return obj[key];
    };

    // Return all the elements that pass a truth test.
    // Aliased as `select`.
    _.filter = _.select = function(obj, predicate, context) {
        var results = [];
        predicate = cb(predicate, context);
        _.each(obj, function(value, index, list) {
            if (predicate(value, index, list)) results.push(value);
        });
        return results;
    };

    // Return all the elements for which a truth test fails.
    _.reject = function(obj, predicate, context) {
        return _.filter(obj, _.negate(cb(predicate)), context);
    };

    // Determine whether all of the elements match a truth test.
    // Aliased as `all`.
    _.every = _.all = function(obj, predicate, context) {
        predicate = cb(predicate, context);
        var keys = !isArrayLike(obj) && _.keys(obj),
            length = (keys || obj).length;
        for (var index = 0; index < length; index++) {
            var currentKey = keys ? keys[index] : index;
            if (!predicate(obj[currentKey], currentKey, obj)) return false;
        }
        return true;
    };

    // Determine if at least one element in the object matches a truth test.
    // Aliased as `any`.
    _.some = _.any = function(obj, predicate, context) {
        predicate = cb(predicate, context);
        var keys = !isArrayLike(obj) && _.keys(obj),
            length = (keys || obj).length;
        for (var index = 0; index < length; index++) {
            var currentKey = keys ? keys[index] : index;
            if (predicate(obj[currentKey], currentKey, obj)) return true;
        }
        return false;
    };

    // Determine if the array or object contains a given item (using `===`).
    // Aliased as `includes` and `include`.
    _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {
        if (!isArrayLike(obj)) obj = _.values(obj);
        if (typeof fromIndex != 'number' || guard) fromIndex = 0;
        return _.indexOf(obj, item, fromIndex) >= 0;
    };

    // Invoke a method (with arguments) on every item in a collection.
    _.invoke = function(obj, method) {
        var args = slice.call(arguments, 2);
        var isFunc = _.isFunction(method);
        return _.map(obj, function(value) {
            var func = isFunc ? method : value[method];
            return func == null ? func : func.apply(value, args);
        });
    };

    // Convenience version of a common use case of `map`: fetching a property.
    _.pluck = function(obj, key) {
        return _.map(obj, _.property(key));
    };

    // Convenience version of a common use case of `filter`: selecting only objects
    // containing specific `key:value` pairs.
    _.where = function(obj, attrs) {
        return _.filter(obj, _.matcher(attrs));
    };

    // Convenience version of a common use case of `find`: getting the first object
    // containing specific `key:value` pairs.
    _.findWhere = function(obj, attrs) {
        return _.find(obj, _.matcher(attrs));
    };

    // Return the maximum element (or element-based computation).
    _.max = function(obj, iteratee, context) {
        var result = -Infinity, lastComputed = -Infinity,
            value, computed;
        if (iteratee == null && obj != null) {
            obj = isArrayLike(obj) ? obj : _.values(obj);
            for (var i = 0, length = obj.length; i < length; i++) {
                value = obj[i];
                if (value > result) {
                    result = value;
                }
            }
        } else {
            iteratee = cb(iteratee, context);
            _.each(obj, function(value, index, list) {
                computed = iteratee(value, index, list);
                if (computed > lastComputed || computed === -Infinity && result === -Infinity) {
                    result = value;
                    lastComputed = computed;
                }
            });
        }
        return result;
    };

    // Return the minimum element (or element-based computation).
    _.min = function(obj, iteratee, context) {
        var result = Infinity, lastComputed = Infinity,
            value, computed;
        if (iteratee == null && obj != null) {
            obj = isArrayLike(obj) ? obj : _.values(obj);
            for (var i = 0, length = obj.length; i < length; i++) {
                value = obj[i];
                if (value < result) {
                    result = value;
                }
            }
        } else {
            iteratee = cb(iteratee, context);
            _.each(obj, function(value, index, list) {
                computed = iteratee(value, index, list);
                if (computed < lastComputed || computed === Infinity && result === Infinity) {
                    result = value;
                    lastComputed = computed;
                }
            });
        }
        return result;
    };

    // Shuffle a collection, using the modern version of the
    // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).
    _.shuffle = function(obj) {
        var set = isArrayLike(obj) ? obj : _.values(obj);
        var length = set.length;
        var shuffled = Array(length);
        for (var index = 0, rand; index < length; index++) {
            rand = _.random(0, index);
            if (rand !== index) shuffled[index] = shuffled[rand];
            shuffled[rand] = set[index];
        }
        return shuffled;
    };

    // Sample **n** random values from a collection.
    // If **n** is not specified, returns a single random element.
    // The internal `guard` argument allows it to work with `map`.
    _.sample = function(obj, n, guard) {
        if (n == null || guard) {
            if (!isArrayLike(obj)) obj = _.values(obj);
            return obj[_.random(obj.length - 1)];
        }
        return _.shuffle(obj).slice(0, Math.max(0, n));
    };

    // Sort the object's values by a criterion produced by an iteratee.
    _.sortBy = function(obj, iteratee, context) {
        iteratee = cb(iteratee, context);
        return _.pluck(_.map(obj, function(value, index, list) {
            return {
                value: value,
                index: index,
                criteria: iteratee(value, index, list)
            };
        }).sort(function(left, right) {
            var a = left.criteria;
            var b = right.criteria;
            if (a !== b) {
                if (a > b || a === void 0) return 1;
                if (a < b || b === void 0) return -1;
            }
            return left.index - right.index;
        }), 'value');
    };

    // An internal function used for aggregate "group by" operations.
    var group = function(behavior) {
        return function(obj, iteratee, context) {
            var result = {};
            iteratee = cb(iteratee, context);
            _.each(obj, function(value, index) {
                var key = iteratee(value, index, obj);
                behavior(result, value, key);
            });
            return result;
        };
    };

    // Groups the object's values by a criterion. Pass either a string attribute
    // to group by, or a function that returns the criterion.
    _.groupBy = group(function(result, value, key) {
        if (_.has(result, key)) result[key].push(value); else result[key] = [value];
    });

    // Indexes the object's values by a criterion, similar to `groupBy`, but for
    // when you know that your index values will be unique.
    _.indexBy = group(function(result, value, key) {
        result[key] = value;
    });

    // Counts instances of an object that group by a certain criterion. Pass
    // either a string attribute to count by, or a function that returns the
    // criterion.
    _.countBy = group(function(result, value, key) {
        if (_.has(result, key)) result[key]++; else result[key] = 1;
    });

    // Safely create a real, live array from anything iterable.
    _.toArray = function(obj) {
        if (!obj) return [];
        if (_.isArray(obj)) return slice.call(obj);
        if (isArrayLike(obj)) return _.map(obj, _.identity);
        return _.values(obj);
    };

    // Return the number of elements in an object.
    _.size = function(obj) {
        if (obj == null) return 0;
        return isArrayLike(obj) ? obj.length : _.keys(obj).length;
    };

    // Split a collection into two arrays: one whose elements all satisfy the given
    // predicate, and one whose elements all do not satisfy the predicate.
    _.partition = function(obj, predicate, context) {
        predicate = cb(predicate, context);
        var pass = [], fail = [];
        _.each(obj, function(value, key, obj) {
            (predicate(value, key, obj) ? pass : fail).push(value);
        });
        return [pass, fail];
    };

    // Array Functions
    // ---------------

    // Get the first element of an array. Passing **n** will return the first N
    // values in the array. Aliased as `head` and `take`. The **guard** check
    // allows it to work with `_.map`.
    _.first = _.head = _.take = function(array, n, guard) {
        if (array == null) return void 0;
        if (n == null || guard) return array[0];
        return _.initial(array, array.length - n);
    };

    // Returns everything but the last entry of the array. Especially useful on
    // the arguments object. Passing **n** will return all the values in
    // the array, excluding the last N.
    _.initial = function(array, n, guard) {
        return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));
    };

    // Get the last element of an array. Passing **n** will return the last N
    // values in the array.
    _.last = function(array, n, guard) {
        if (array == null) return void 0;
        if (n == null || guard) return array[array.length - 1];
        return _.rest(array, Math.max(0, array.length - n));
    };

    // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
    // Especially useful on the arguments object. Passing an **n** will return
    // the rest N values in the array.
    _.rest = _.tail = _.drop = function(array, n, guard) {
        return slice.call(array, n == null || guard ? 1 : n);
    };

    // Trim out all falsy values from an array.
    _.compact = function(array) {
        return _.filter(array, _.identity);
    };

    // Internal implementation of a recursive `flatten` function.
    var flatten = function(input, shallow, strict, startIndex) {
        var output = [], idx = 0;
        for (var i = startIndex || 0, length = getLength(input); i < length; i++) {
            var value = input[i];
            if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {
                //flatten current level of array or arguments object
                if (!shallow) value = flatten(value, shallow, strict);
                var j = 0, len = value.length;
                output.length += len;
                while (j < len) {
                    output[idx++] = value[j++];
                }
            } else if (!strict) {
                output[idx++] = value;
            }
        }
        return output;
    };

    // Flatten out an array, either recursively (by default), or just one level.
    _.flatten = function(array, shallow) {
        return flatten(array, shallow, false);
    };

    // Return a version of the array that does not contain the specified value(s).
    _.without = function(array) {
        return _.difference(array, slice.call(arguments, 1));
    };

    // Produce a duplicate-free version of the array. If the array has already
    // been sorted, you have the option of using a faster algorithm.
    // Aliased as `unique`.
    _.uniq = _.unique = function(array, isSorted, iteratee, context) {
        if (!_.isBoolean(isSorted)) {
            context = iteratee;
            iteratee = isSorted;
            isSorted = false;
        }
        if (iteratee != null) iteratee = cb(iteratee, context);
        var result = [];
        var seen = [];
        for (var i = 0, length = getLength(array); i < length; i++) {
            var value = array[i],
                computed = iteratee ? iteratee(value, i, array) : value;
            if (isSorted) {
                if (!i || seen !== computed) result.push(value);
                seen = computed;
            } else if (iteratee) {
                if (!_.contains(seen, computed)) {
                    seen.push(computed);
                    result.push(value);
                }
            } else if (!_.contains(result, value)) {
                result.push(value);
            }
        }
        return result;
    };

    // Produce an array that contains the union: each distinct element from all of
    // the passed-in arrays.
    _.union = function() {
        return _.uniq(flatten(arguments, true, true));
    };

    // Produce an array that contains every item shared between all the
    // passed-in arrays.
    _.intersection = function(array) {
        var result = [];
        var argsLength = arguments.length;
        for (var i = 0, length = getLength(array); i < length; i++) {
            var item = array[i];
            if (_.contains(result, item)) continue;
            for (var j = 1; j < argsLength; j++) {
                if (!_.contains(arguments[j], item)) break;
            }
            if (j === argsLength) result.push(item);
        }
        return result;
    };

    // Take the difference between one array and a number of other arrays.
    // Only the elements present in just the first array will remain.
    _.difference = function(array) {
        var rest = flatten(arguments, true, true, 1);
        return _.filter(array, function(value){
            return !_.contains(rest, value);
        });
    };

    // Zip together multiple lists into a single array -- elements that share
    // an index go together.
    _.zip = function() {
        return _.unzip(arguments);
    };

    // Complement of _.zip. Unzip accepts an array of arrays and groups
    // each array's elements on shared indices
    _.unzip = function(array) {
        var length = array && _.max(array, getLength).length || 0;
        var result = Array(length);

        for (var index = 0; index < length; index++) {
            result[index] = _.pluck(array, index);
        }
        return result;
    };

    // Converts lists into objects. Pass either a single array of `[key, value]`
    // pairs, or two parallel arrays of the same length -- one of keys, and one of
    // the corresponding values.
    _.object = function(list, values) {
        var result = {};
        for (var i = 0, length = getLength(list); i < length; i++) {
            if (values) {
                result[list[i]] = values[i];
            } else {
                result[list[i][0]] = list[i][1];
            }
        }
        return result;
    };

    // Generator function to create the findIndex and findLastIndex functions
    function createPredicateIndexFinder(dir) {
        return function(array, predicate, context) {
            predicate = cb(predicate, context);
            var length = getLength(array);
            var index = dir > 0 ? 0 : length - 1;
            for (; index >= 0 && index < length; index += dir) {
                if (predicate(array[index], index, array)) return index;
            }
            return -1;
        };
    }

    // Returns the first index on an array-like that passes a predicate test
    _.findIndex = createPredicateIndexFinder(1);
    _.findLastIndex = createPredicateIndexFinder(-1);

    // Use a comparator function to figure out the smallest index at which
    // an object should be inserted so as to maintain order. Uses binary search.
    _.sortedIndex = function(array, obj, iteratee, context) {
        iteratee = cb(iteratee, context, 1);
        var value = iteratee(obj);
        var low = 0, high = getLength(array);
        while (low < high) {
            var mid = Math.floor((low + high) / 2);
            if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;
        }
        return low;
    };

    // Generator function to create the indexOf and lastIndexOf functions
    function createIndexFinder(dir, predicateFind, sortedIndex) {
        return function(array, item, idx) {
            var i = 0, length = getLength(array);
            if (typeof idx == 'number') {
                if (dir > 0) {
                    i = idx >= 0 ? idx : Math.max(idx + length, i);
                } else {
                    length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;
                }
            } else if (sortedIndex && idx && length) {
                idx = sortedIndex(array, item);
                return array[idx] === item ? idx : -1;
            }
            if (item !== item) {
                idx = predicateFind(slice.call(array, i, length), _.isNaN);
                return idx >= 0 ? idx + i : -1;
            }
            for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {
                if (array[idx] === item) return idx;
            }
            return -1;
        };
    }

    // Return the position of the first occurrence of an item in an array,
    // or -1 if the item is not included in the array.
    // If the array is large and already in sort order, pass `true`
    // for **isSorted** to use binary search.
    _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);
    _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);

    // Generate an integer Array containing an arithmetic progression. A port of
    // the native Python `range()` function. See
    // [the Python documentation](http://docs.python.org/library/functions.html#range).
    _.range = function(start, stop, step) {
        if (stop == null) {
            stop = start || 0;
            start = 0;
        }
        step = step || 1;

        var length = Math.max(Math.ceil((stop - start) / step), 0);
        var range = Array(length);

        for (var idx = 0; idx < length; idx++, start += step) {
            range[idx] = start;
        }

        return range;
    };

    // Function (ahem) Functions
    // ------------------

    // Determines whether to execute a function as a constructor
    // or a normal function with the provided arguments
    var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {
        if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);
        var self = baseCreate(sourceFunc.prototype);
        var result = sourceFunc.apply(self, args);
        if (_.isObject(result)) return result;
        return self;
    };

    // Create a function bound to a given object (assigning `this`, and arguments,
    // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
    // available.
    _.bind = function(func, context) {
        if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));
        if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');
        var args = slice.call(arguments, 2);
        var bound = function() {
            return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));
        };
        return bound;
    };

    // Partially apply a function by creating a version that has had some of its
    // arguments pre-filled, without changing its dynamic `this` context. _ acts
    // as a placeholder, allowing any combination of arguments to be pre-filled.
    _.partial = function(func) {
        var boundArgs = slice.call(arguments, 1);
        var bound = function() {
            var position = 0, length = boundArgs.length;
            var args = Array(length);
            for (var i = 0; i < length; i++) {
                args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];
            }
            while (position < arguments.length) args.push(arguments[position++]);
            return executeBound(func, bound, this, this, args);
        };
        return bound;
    };

    // Bind a number of an object's methods to that object. Remaining arguments
    // are the method names to be bound. Useful for ensuring that all callbacks
    // defined on an object belong to it.
    _.bindAll = function(obj) {
        var i, length = arguments.length, key;
        if (length <= 1) throw new Error('bindAll must be passed function names');
        for (i = 1; i < length; i++) {
            key = arguments[i];
            obj[key] = _.bind(obj[key], obj);
        }
        return obj;
    };

    // Memoize an expensive function by storing its results.
    _.memoize = function(func, hasher) {
        var memoize = function(key) {
            var cache = memoize.cache;
            var address = '' + (hasher ? hasher.apply(this, arguments) : key);
            if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);
            return cache[address];
        };
        memoize.cache = {};
        return memoize;
    };

    // Delays a function for the given number of milliseconds, and then calls
    // it with the arguments supplied.
    _.delay = function(func, wait) {
        var args = slice.call(arguments, 2);
        return setTimeout(function(){
            return func.apply(null, args);
        }, wait);
    };

    // Defers a function, scheduling it to run after the current call stack has
    // cleared.
    _.defer = _.partial(_.delay, _, 1);

    // Returns a function, that, when invoked, will only be triggered at most once
    // during a given window of time. Normally, the throttled function will run
    // as much as it can, without ever going more than once per `wait` duration;
    // but if you'd like to disable the execution on the leading edge, pass
    // `{leading: false}`. To disable execution on the trailing edge, ditto.
    _.throttle = function(func, wait, options) {
        var context, args, result;
        var timeout = null;
        var previous = 0;
        if (!options) options = {};
        var later = function() {
            previous = options.leading === false ? 0 : _.now();
            timeout = null;
            result = func.apply(context, args);
            if (!timeout) context = args = null;
        };
        return function() {
            var now = _.now();
            if (!previous && options.leading === false) previous = now;
            var remaining = wait - (now - previous);
            context = this;
            args = arguments;
            if (remaining <= 0 || remaining > wait) {
                if (timeout) {
                    clearTimeout(timeout);
                    timeout = null;
                }
                previous = now;
                result = func.apply(context, args);
                if (!timeout) context = args = null;
            } else if (!timeout && options.trailing !== false) {
                timeout = setTimeout(later, remaining);
            }
            return result;
        };
    };

    // Returns a function, that, as long as it continues to be invoked, will not
    // be triggered. The function will be called after it stops being called for
    // N milliseconds. If `immediate` is passed, trigger the function on the
    // leading edge, instead of the trailing.
    _.debounce = function(func, wait, immediate) {
        var timeout, args, context, timestamp, result;

        var later = function() {
            var last = _.now() - timestamp;

            if (last < wait && last >= 0) {
                timeout = setTimeout(later, wait - last);
            } else {
                timeout = null;
                if (!immediate) {
                    result = func.apply(context, args);
                    if (!timeout) context = args = null;
                }
            }
        };

        return function() {
            context = this;
            args = arguments;
            timestamp = _.now();
            var callNow = immediate && !timeout;
            if (!timeout) timeout = setTimeout(later, wait);
            if (callNow) {
                result = func.apply(context, args);
                context = args = null;
            }

            return result;
        };
    };

    // Returns the first function passed as an argument to the second,
    // allowing you to adjust arguments, run code before and after, and
    // conditionally execute the original function.
    _.wrap = function(func, wrapper) {
        return _.partial(wrapper, func);
    };

    // Returns a negated version of the passed-in predicate.
    _.negate = function(predicate) {
        return function() {
            return !predicate.apply(this, arguments);
        };
    };

    // Returns a function that is the composition of a list of functions, each
    // consuming the return value of the function that follows.
    _.compose = function() {
        var args = arguments;
        var start = args.length - 1;
        return function() {
            var i = start;
            var result = args[start].apply(this, arguments);
            while (i--) result = args[i].call(this, result);
            return result;
        };
    };

    // Returns a function that will only be executed on and after the Nth call.
    _.after = function(times, func) {
        return function() {
            if (--times < 1) {
                return func.apply(this, arguments);
            }
        };
    };

    // Returns a function that will only be executed up to (but not including) the Nth call.
    _.before = function(times, func) {
        var memo;
        return function() {
            if (--times > 0) {
                memo = func.apply(this, arguments);
            }
            if (times <= 1) func = null;
            return memo;
        };
    };

    // Returns a function that will be executed at most one time, no matter how
    // often you call it. Useful for lazy initialization.
    _.once = _.partial(_.before, 2);

    // Object Functions
    // ----------------

    // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.
    var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');
    var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',
        'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];

    function collectNonEnumProps(obj, keys) {
        var nonEnumIdx = nonEnumerableProps.length;
        var constructor = obj.constructor;
        var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;

        // Constructor is a special case.
        var prop = 'constructor';
        if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);

        while (nonEnumIdx--) {
            prop = nonEnumerableProps[nonEnumIdx];
            if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {
                keys.push(prop);
            }
        }
    }

    // Retrieve the names of an object's own properties.
    // Delegates to **ECMAScript 5**'s native `Object.keys`
    _.keys = function(obj) {
        if (!_.isObject(obj)) return [];
        if (nativeKeys) return nativeKeys(obj);
        var keys = [];
        for (var key in obj) if (_.has(obj, key)) keys.push(key);
        // Ahem, IE < 9.
        if (hasEnumBug) collectNonEnumProps(obj, keys);
        return keys;
    };

    // Retrieve all the property names of an object.
    _.allKeys = function(obj) {
        if (!_.isObject(obj)) return [];
        var keys = [];
        for (var key in obj) keys.push(key);
        // Ahem, IE < 9.
        if (hasEnumBug) collectNonEnumProps(obj, keys);
        return keys;
    };

    // Retrieve the values of an object's properties.
    _.values = function(obj) {
        var keys = _.keys(obj);
        var length = keys.length;
        var values = Array(length);
        for (var i = 0; i < length; i++) {
            values[i] = obj[keys[i]];
        }
        return values;
    };

    // Returns the results of applying the iteratee to each element of the object
    // In contrast to _.map it returns an object
    _.mapObject = function(obj, iteratee, context) {
        iteratee = cb(iteratee, context);
        var keys =  _.keys(obj),
            length = keys.length,
            results = {},
            currentKey;
        for (var index = 0; index < length; index++) {
            currentKey = keys[index];
            results[currentKey] = iteratee(obj[currentKey], currentKey, obj);
        }
        return results;
    };

    // Convert an object into a list of `[key, value]` pairs.
    _.pairs = function(obj) {
        var keys = _.keys(obj);
        var length = keys.length;
        var pairs = Array(length);
        for (var i = 0; i < length; i++) {
            pairs[i] = [keys[i], obj[keys[i]]];
        }
        return pairs;
    };

    // Invert the keys and values of an object. The values must be serializable.
    _.invert = function(obj) {
        var result = {};
        var keys = _.keys(obj);
        for (var i = 0, length = keys.length; i < length; i++) {
            result[obj[keys[i]]] = keys[i];
        }
        return result;
    };

    // Return a sorted list of the function names available on the object.
    // Aliased as `methods`
    _.functions = _.methods = function(obj) {
        var names = [];
        for (var key in obj) {
            if (_.isFunction(obj[key])) names.push(key);
        }
        return names.sort();
    };

    // Extend a given object with all the properties in passed-in object(s).
    _.extend = createAssigner(_.allKeys);

    // Assigns a given object with all the own properties in the passed-in object(s)
    // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)
    _.extendOwn = _.assign = createAssigner(_.keys);

    // Returns the first key on an object that passes a predicate test
    _.findKey = function(obj, predicate, context) {
        predicate = cb(predicate, context);
        var keys = _.keys(obj), key;
        for (var i = 0, length = keys.length; i < length; i++) {
            key = keys[i];
            if (predicate(obj[key], key, obj)) return key;
        }
    };

    // Return a copy of the object only containing the whitelisted properties.
    _.pick = function(object, oiteratee, context) {
        var result = {}, obj = object, iteratee, keys;
        if (obj == null) return result;
        if (_.isFunction(oiteratee)) {
            keys = _.allKeys(obj);
            iteratee = optimizeCb(oiteratee, context);
        } else {
            keys = flatten(arguments, false, false, 1);
            iteratee = function(value, key, obj) { return key in obj; };
            obj = Object(obj);
        }
        for (var i = 0, length = keys.length; i < length; i++) {
            var key = keys[i];
            var value = obj[key];
            if (iteratee(value, key, obj)) result[key] = value;
        }
        return result;
    };

    // Return a copy of the object without the blacklisted properties.
    _.omit = function(obj, iteratee, context) {
        if (_.isFunction(iteratee)) {
            iteratee = _.negate(iteratee);
        } else {
            var keys = _.map(flatten(arguments, false, false, 1), String);
            iteratee = function(value, key) {
                return !_.contains(keys, key);
            };
        }
        return _.pick(obj, iteratee, context);
    };

    // Fill in a given object with default properties.
    _.defaults = createAssigner(_.allKeys, true);

    // Creates an object that inherits from the given prototype object.
    // If additional properties are provided then they will be added to the
    // created object.
    _.create = function(prototype, props) {
        var result = baseCreate(prototype);
        if (props) _.extendOwn(result, props);
        return result;
    };

    // Create a (shallow-cloned) duplicate of an object.
    _.clone = function(obj) {
        if (!_.isObject(obj)) return obj;
        return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
    };

    // Invokes interceptor with the obj, and then returns obj.
    // The primary purpose of this method is to "tap into" a method chain, in
    // order to perform operations on intermediate results within the chain.
    _.tap = function(obj, interceptor) {
        interceptor(obj);
        return obj;
    };

    // Returns whether an object has a given set of `key:value` pairs.
    _.isMatch = function(object, attrs) {
        var keys = _.keys(attrs), length = keys.length;
        if (object == null) return !length;
        var obj = Object(object);
        for (var i = 0; i < length; i++) {
            var key = keys[i];
            if (attrs[key] !== obj[key] || !(key in obj)) return false;
        }
        return true;
    };


    // Internal recursive comparison function for `isEqual`.
    var eq = function(a, b, aStack, bStack) {
        // Identical objects are equal. `0 === -0`, but they aren't identical.
        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
        if (a === b) return a !== 0 || 1 / a === 1 / b;
        // A strict comparison is necessary because `null == undefined`.
        if (a == null || b == null) return a === b;
        // Unwrap any wrapped objects.
        if (a instanceof _) a = a._wrapped;
        if (b instanceof _) b = b._wrapped;
        // Compare `[[Class]]` names.
        var className = toString.call(a);
        if (className !== toString.call(b)) return false;
        switch (className) {
            // Strings, numbers, regular expressions, dates, and booleans are compared by value.
            case '[object RegExp]':
            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')
            case '[object String]':
                // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
                // equivalent to `new String("5")`.
                return '' + a === '' + b;
            case '[object Number]':
                // `NaN`s are equivalent, but non-reflexive.
                // Object(NaN) is equivalent to NaN
                if (+a !== +a) return +b !== +b;
                // An `egal` comparison is performed for other numeric values.
                return +a === 0 ? 1 / +a === 1 / b : +a === +b;
            case '[object Date]':
            case '[object Boolean]':
                // Coerce dates and booleans to numeric primitive values. Dates are compared by their
                // millisecond representations. Note that invalid dates with millisecond representations
                // of `NaN` are not equivalent.
                return +a === +b;
        }

        var areArrays = className === '[object Array]';
        if (!areArrays) {
            if (typeof a != 'object' || typeof b != 'object') return false;

            // Objects with different constructors are not equivalent, but `Object`s or `Array`s
            // from different frames are.
            var aCtor = a.constructor, bCtor = b.constructor;
            if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&
                _.isFunction(bCtor) && bCtor instanceof bCtor)
                && ('constructor' in a && 'constructor' in b)) {
                return false;
            }
        }
        // Assume equality for cyclic structures. The algorithm for detecting cyclic
        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.

        // Initializing stack of traversed objects.
        // It's done here since we only need them for objects and arrays comparison.
        aStack = aStack || [];
        bStack = bStack || [];
        var length = aStack.length;
        while (length--) {
            // Linear search. Performance is inversely proportional to the number of
            // unique nested structures.
            if (aStack[length] === a) return bStack[length] === b;
        }

        // Add the first object to the stack of traversed objects.
        aStack.push(a);
        bStack.push(b);

        // Recursively compare objects and arrays.
        if (areArrays) {
            // Compare array lengths to determine if a deep comparison is necessary.
            length = a.length;
            if (length !== b.length) return false;
            // Deep compare the contents, ignoring non-numeric properties.
            while (length--) {
                if (!eq(a[length], b[length], aStack, bStack)) return false;
            }
        } else {
            // Deep compare objects.
            var keys = _.keys(a), key;
            length = keys.length;
            // Ensure that both objects contain the same number of properties before comparing deep equality.
            if (_.keys(b).length !== length) return false;
            while (length--) {
                // Deep compare each member
                key = keys[length];
                if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;
            }
        }
        // Remove the first object from the stack of traversed objects.
        aStack.pop();
        bStack.pop();
        return true;
    };

    // Perform a deep comparison to check if two objects are equal.
    _.isEqual = function(a, b) {
        return eq(a, b);
    };

    // Is a given array, string, or object empty?
    // An "empty" object has no enumerable own-properties.
    _.isEmpty = function(obj) {
        if (obj == null) return true;
        if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;
        return _.keys(obj).length === 0;
    };

    // Is a given value a DOM element?
    _.isElement = function(obj) {
        return !!(obj && obj.nodeType === 1);
    };

    // Is a given value an array?
    // Delegates to ECMA5's native Array.isArray
    _.isArray = nativeIsArray || function(obj) {
            return toString.call(obj) === '[object Array]';
        };

    // Is a given variable an object?
    _.isObject = function(obj) {
        var type = typeof obj;
        return type === 'function' || type === 'object' && !!obj;
    };

    // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.
    _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {
        _['is' + name] = function(obj) {
            return toString.call(obj) === '[object ' + name + ']';
        };
    });

    // Define a fallback version of the method in browsers (ahem, IE < 9), where
    // there isn't any inspectable "Arguments" type.
    if (!_.isArguments(arguments)) {
        _.isArguments = function(obj) {
            return _.has(obj, 'callee');
        };
    }

    // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,
    // IE 11 (#1621), and in Safari 8 (#1929).
    if (typeof /./ != 'function' && typeof Int8Array != 'object') {
        _.isFunction = function(obj) {
            return typeof obj == 'function' || false;
        };
    }

    // Is a given object a finite number?
    _.isFinite = function(obj) {
        return isFinite(obj) && !isNaN(parseFloat(obj));
    };

    // Is the given value `NaN`? (NaN is the only number which does not equal itself).
    _.isNaN = function(obj) {
        return _.isNumber(obj) && obj !== +obj;
    };

    // Is a given value a boolean?
    _.isBoolean = function(obj) {
        return obj === true || obj === false || toString.call(obj) === '[object Boolean]';
    };

    // Is a given value equal to null?
    _.isNull = function(obj) {
        return obj === null;
    };

    // Is a given variable undefined?
    _.isUndefined = function(obj) {
        return obj === void 0;
    };

    // Shortcut function for checking if an object has a given property directly
    // on itself (in other words, not on a prototype).
    _.has = function(obj, key) {
        return obj != null && hasOwnProperty.call(obj, key);
    };

    // Utility Functions
    // -----------------

    // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
    // previous owner. Returns a reference to the Underscore object.
    _.noConflict = function() {
        root._ = previousUnderscore;
        return this;
    };

    // Keep the identity function around for default iteratees.
    _.identity = function(value) {
        return value;
    };

    // Predicate-generating functions. Often useful outside of Underscore.
    _.constant = function(value) {
        return function() {
            return value;
        };
    };

    _.noop = function(){};

    _.property = property;

    // Generates a function for a given object that returns a given property.
    _.propertyOf = function(obj) {
        return obj == null ? function(){} : function(key) {
            return obj[key];
        };
    };

    // Returns a predicate for checking whether an object has a given set of
    // `key:value` pairs.
    _.matcher = _.matches = function(attrs) {
        attrs = _.extendOwn({}, attrs);
        return function(obj) {
            return _.isMatch(obj, attrs);
        };
    };

    // Run a function **n** times.
    _.times = function(n, iteratee, context) {
        var accum = Array(Math.max(0, n));
        iteratee = optimizeCb(iteratee, context, 1);
        for (var i = 0; i < n; i++) accum[i] = iteratee(i);
        return accum;
    };

    // Return a random integer between min and max (inclusive).
    _.random = function(min, max) {
        if (max == null) {
            max = min;
            min = 0;
        }
        return min + Math.floor(Math.random() * (max - min + 1));
    };

    // A (possibly faster) way to get the current timestamp as an integer.
    _.now = Date.now || function() {
            return new Date().getTime();
        };

    // List of HTML entities for escaping.
    var escapeMap = {
        '&': '&amp;',
        '<': '&lt;',
        '>': '&gt;',
        '"': '&quot;',
        "'": '&#x27;',
        '`': '&#x60;'
    };
    var unescapeMap = _.invert(escapeMap);

    // Functions for escaping and unescaping strings to/from HTML interpolation.
    var createEscaper = function(map) {
        var escaper = function(match) {
            return map[match];
        };
        // Regexes for identifying a key that needs to be escaped
        var source = '(?:' + _.keys(map).join('|') + ')';
        var testRegexp = RegExp(source);
        var replaceRegexp = RegExp(source, 'g');
        return function(string) {
            string = string == null ? '' : '' + string;
            return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;
        };
    };
    _.escape = createEscaper(escapeMap);
    _.unescape = createEscaper(unescapeMap);

    // If the value of the named `property` is a function then invoke it with the
    // `object` as context; otherwise, return it.
    _.result = function(object, property, fallback) {
        var value = object == null ? void 0 : object[property];
        if (value === void 0) {
            value = fallback;
        }
        return _.isFunction(value) ? value.call(object) : value;
    };

    // Generate a unique integer id (unique within the entire client session).
    // Useful for temporary DOM ids.
    var idCounter = 0;
    _.uniqueId = function(prefix) {
        var id = ++idCounter + '';
        return prefix ? prefix + id : id;
    };

    // By default, Underscore uses ERB-style template delimiters, change the
    // following template settings to use alternative delimiters.
    _.templateSettings = {
        evaluate    : /<%([\s\S]+?)%>/g,
        interpolate : /<%=([\s\S]+?)%>/g,
        escape      : /<%-([\s\S]+?)%>/g
    };

    // When customizing `templateSettings`, if you don't want to define an
    // interpolation, evaluation or escaping regex, we need one that is
    // guaranteed not to match.
    var noMatch = /(.)^/;

    // Certain characters need to be escaped so that they can be put into a
    // string literal.
    var escapes = {
        "'":      "'",
        '\\':     '\\',
        '\r':     'r',
        '\n':     'n',
        '\u2028': 'u2028',
        '\u2029': 'u2029'
    };

    var escaper = /\\|'|\r|\n|\u2028|\u2029/g;

    var escapeChar = function(match) {
        return '\\' + escapes[match];
    };

    // JavaScript micro-templating, similar to John Resig's implementation.
    // Underscore templating handles arbitrary delimiters, preserves whitespace,
    // and correctly escapes quotes within interpolated code.
    // NB: `oldSettings` only exists for backwards compatibility.
    _.template = function(text, settings, oldSettings) {
        if (!settings && oldSettings) settings = oldSettings;
        settings = _.defaults({}, settings, _.templateSettings);

        // Combine delimiters into one regular expression via alternation.
        var matcher = RegExp([
                (settings.escape || noMatch).source,
                (settings.interpolate || noMatch).source,
                (settings.evaluate || noMatch).source
            ].join('|') + '|$', 'g');

        // Compile the template source, escaping string literals appropriately.
        var index = 0;
        var source = "__p+='";
        text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {
            source += text.slice(index, offset).replace(escaper, escapeChar);
            index = offset + match.length;

            if (escape) {
                source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
            } else if (interpolate) {
                source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
            } else if (evaluate) {
                source += "';\n" + evaluate + "\n__p+='";
            }

            // Adobe VMs need the match returned to produce the correct offest.
            return match;
        });
        source += "';\n";

        // If a variable is not specified, place data values in local scope.
        if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';

        source = "var __t,__p='',__j=Array.prototype.join," +
            "print=function(){__p+=__j.call(arguments,'');};\n" +
            source + 'return __p;\n';

        try {
            var render = new Function(settings.variable || 'obj', '_', source);
        } catch (e) {
            e.source = source;
            throw e;
        }

        var template = function(data) {
            return render.call(this, data, _);
        };

        // Provide the compiled source as a convenience for precompilation.
        var argument = settings.variable || 'obj';
        template.source = 'function(' + argument + '){\n' + source + '}';

        return template;
    };

    // Add a "chain" function. Start chaining a wrapped Underscore object.
    _.chain = function(obj) {
        var instance = _(obj);
        instance._chain = true;
        return instance;
    };

    // OOP
    // ---------------
    // If Underscore is called as a function, it returns a wrapped object that
    // can be used OO-style. This wrapper holds altered versions of all the
    // underscore functions. Wrapped objects may be chained.

    // Helper function to continue chaining intermediate results.
    var result = function(instance, obj) {
        return instance._chain ? _(obj).chain() : obj;
    };

    // Add your own custom functions to the Underscore object.
    _.mixin = function(obj) {
        _.each(_.functions(obj), function(name) {
            var func = _[name] = obj[name];
            _.prototype[name] = function() {
                var args = [this._wrapped];
                push.apply(args, arguments);
                return result(this, func.apply(_, args));
            };
        });
    };

    // Add all of the Underscore functions to the wrapper object.
    _.mixin(_);

    // Add all mutator Array functions to the wrapper.
    _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {
        var method = ArrayProto[name];
        _.prototype[name] = function() {
            var obj = this._wrapped;
            method.apply(obj, arguments);
            if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];
            return result(this, obj);
        };
    });

    // Add all accessor Array functions to the wrapper.
    _.each(['concat', 'join', 'slice'], function(name) {
        var method = ArrayProto[name];
        _.prototype[name] = function() {
            return result(this, method.apply(this._wrapped, arguments));
        };
    });

    // Extracts the result from a wrapped and chained object.
    _.prototype.value = function() {
        return this._wrapped;
    };

    // Provide unwrapping proxy for some methods used in engine operations
    // such as arithmetic and JSON stringification.
    _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;

    _.prototype.toString = function() {
        return '' + this._wrapped;
    };

    // AMD registration happens at the end for compatibility with AMD loaders
    // that may not enforce next-turn semantics on modules. Even though general
    // practice for AMD registration is to be anonymous, underscore registers
    // as a named module because, like jQuery, it is a base library that is
    // popular enough to be bundled in a third party lib, but not be part of
    // an AMD load request. Those cases could generate an error when an
    // anonymous define() is called outside of a loader request.
    if (typeof define === 'function' && define.amd) {
        define('underscore', [], function() {
            return _;
        });
    }
}.call(this));
});
define('libs/validator.js', function(module, exports) {
/*!
 * Copyright (c) 2010 Chris O'Hara <cohara87@gmail.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

(function(exports) {

    var entities = {
        '&nbsp;': '\u00a0',
        '&iexcl;': '\u00a1',
        '&cent;': '\u00a2',
        '&pound;': '\u00a3',
        '&curren;': '\u20ac',
        '&yen;': '\u00a5',
        '&brvbar;': '\u0160',
        '&sect;': '\u00a7',
        '&uml;': '\u0161',
        '&copy;': '\u00a9',
        '&ordf;': '\u00aa',
        '&laquo;': '\u00ab',
        '&not;': '\u00ac',
        '&shy;': '\u00ad',
        '&reg;': '\u00ae',
        '&macr;': '\u00af',
        '&deg;': '\u00b0',
        '&plusmn;': '\u00b1',
        '&sup2;': '\u00b2',
        '&sup3;': '\u00b3',
        '&acute;': '\u017d',
        '&micro;': '\u00b5',
        '&para;': '\u00b6',
        '&middot;': '\u00b7',
        '&cedil;': '\u017e',
        '&sup1;': '\u00b9',
        '&ordm;': '\u00ba',
        '&raquo;': '\u00bb',
        '&frac14;': '\u0152',
        '&frac12;': '\u0153',
        '&frac34;': '\u0178',
        '&iquest;': '\u00bf',
        '&Agrave;': '\u00c0',
        '&Aacute;': '\u00c1',
        '&Acirc;': '\u00c2',
        '&Atilde;': '\u00c3',
        '&Auml;': '\u00c4',
        '&Aring;': '\u00c5',
        '&AElig;': '\u00c6',
        '&Ccedil;': '\u00c7',
        '&Egrave;': '\u00c8',
        '&Eacute;': '\u00c9',
        '&Ecirc;': '\u00ca',
        '&Euml;': '\u00cb',
        '&Igrave;': '\u00cc',
        '&Iacute;': '\u00cd',
        '&Icirc;': '\u00ce',
        '&Iuml;': '\u00cf',
        '&ETH;': '\u00d0',
        '&Ntilde;': '\u00d1',
        '&Ograve;': '\u00d2',
        '&Oacute;': '\u00d3',
        '&Ocirc;': '\u00d4',
        '&Otilde;': '\u00d5',
        '&Ouml;': '\u00d6',
        '&times;': '\u00d7',
        '&Oslash;': '\u00d8',
        '&Ugrave;': '\u00d9',
        '&Uacute;': '\u00da',
        '&Ucirc;': '\u00db',
        '&Uuml;': '\u00dc',
        '&Yacute;': '\u00dd',
        '&THORN;': '\u00de',
        '&szlig;': '\u00df',
        '&agrave;': '\u00e0',
        '&aacute;': '\u00e1',
        '&acirc;': '\u00e2',
        '&atilde;': '\u00e3',
        '&auml;': '\u00e4',
        '&aring;': '\u00e5',
        '&aelig;': '\u00e6',
        '&ccedil;': '\u00e7',
        '&egrave;': '\u00e8',
        '&eacute;': '\u00e9',
        '&ecirc;': '\u00ea',
        '&euml;': '\u00eb',
        '&igrave;': '\u00ec',
        '&iacute;': '\u00ed',
        '&icirc;': '\u00ee',
        '&iuml;': '\u00ef',
        '&eth;': '\u00f0',
        '&ntilde;': '\u00f1',
        '&ograve;': '\u00f2',
        '&oacute;': '\u00f3',
        '&ocirc;': '\u00f4',
        '&otilde;': '\u00f5',
        '&ouml;': '\u00f6',
        '&divide;': '\u00f7',
        '&oslash;': '\u00f8',
        '&ugrave;': '\u00f9',
        '&uacute;': '\u00fa',
        '&ucirc;': '\u00fb',
        '&uuml;': '\u00fc',
        '&yacute;': '\u00fd',
        '&thorn;': '\u00fe',
        '&yuml;': '\u00ff',
        '&quot;': '\u0022',
        '&lt;': '\u003c',
        '&gt;': '\u003e',
        '&apos;': '\u0027',
        '&minus;': '\u2212',
        '&circ;': '\u02c6',
        '&tilde;': '\u02dc',
        '&Scaron;': '\u0160',
        '&lsaquo;': '\u2039',
        '&OElig;': '\u0152',
        '&lsquo;': '\u2018',
        '&rsquo;': '\u2019',
        '&ldquo;': '\u201c',
        '&rdquo;': '\u201d',
        '&bull;': '\u2022',
        '&ndash;': '\u2013',
        '&mdash;': '\u2014',
        '&trade;': '\u2122',
        '&scaron;': '\u0161',
        '&rsaquo;': '\u203a',
        '&oelig;': '\u0153',
        '&Yuml;': '\u0178',
        '&fnof;': '\u0192',
        '&Alpha;': '\u0391',
        '&Beta;': '\u0392',
        '&Gamma;': '\u0393',
        '&Delta;': '\u0394',
        '&Epsilon;': '\u0395',
        '&Zeta;': '\u0396',
        '&Eta;': '\u0397',
        '&Theta;': '\u0398',
        '&Iota;': '\u0399',
        '&Kappa;': '\u039a',
        '&Lambda;': '\u039b',
        '&Mu;': '\u039c',
        '&Nu;': '\u039d',
        '&Xi;': '\u039e',
        '&Omicron;': '\u039f',
        '&Pi;': '\u03a0',
        '&Rho;': '\u03a1',
        '&Sigma;': '\u03a3',
        '&Tau;': '\u03a4',
        '&Upsilon;': '\u03a5',
        '&Phi;': '\u03a6',
        '&Chi;': '\u03a7',
        '&Psi;': '\u03a8',
        '&Omega;': '\u03a9',
        '&alpha;': '\u03b1',
        '&beta;': '\u03b2',
        '&gamma;': '\u03b3',
        '&delta;': '\u03b4',
        '&epsilon;': '\u03b5',
        '&zeta;': '\u03b6',
        '&eta;': '\u03b7',
        '&theta;': '\u03b8',
        '&iota;': '\u03b9',
        '&kappa;': '\u03ba',
        '&lambda;': '\u03bb',
        '&mu;': '\u03bc',
        '&nu;': '\u03bd',
        '&xi;': '\u03be',
        '&omicron;': '\u03bf',
        '&pi;': '\u03c0',
        '&rho;': '\u03c1',
        '&sigmaf;': '\u03c2',
        '&sigma;': '\u03c3',
        '&tau;': '\u03c4',
        '&upsilon;': '\u03c5',
        '&phi;': '\u03c6',
        '&chi;': '\u03c7',
        '&psi;': '\u03c8',
        '&omega;': '\u03c9',
        '&thetasym;': '\u03d1',
        '&upsih;': '\u03d2',
        '&piv;': '\u03d6',
        '&ensp;': '\u2002',
        '&emsp;': '\u2003',
        '&thinsp;': '\u2009',
        '&zwnj;': '\u200c',
        '&zwj;': '\u200d',
        '&lrm;': '\u200e',
        '&rlm;': '\u200f',
        '&sbquo;': '\u201a',
        '&bdquo;': '\u201e',
        '&dagger;': '\u2020',
        '&Dagger;': '\u2021',
        '&hellip;': '\u2026',
        '&permil;': '\u2030',
        '&prime;': '\u2032',
        '&Prime;': '\u2033',
        '&oline;': '\u203e',
        '&frasl;': '\u2044',
        '&euro;': '\u20ac',
        '&image;': '\u2111',
        '&weierp;': '\u2118',
        '&real;': '\u211c',
        '&alefsym;': '\u2135',
        '&larr;': '\u2190',
        '&uarr;': '\u2191',
        '&rarr;': '\u2192',
        '&darr;': '\u2193',
        '&harr;': '\u2194',
        '&crarr;': '\u21b5',
        '&lArr;': '\u21d0',
        '&uArr;': '\u21d1',
        '&rArr;': '\u21d2',
        '&dArr;': '\u21d3',
        '&hArr;': '\u21d4',
        '&forall;': '\u2200',
        '&part;': '\u2202',
        '&exist;': '\u2203',
        '&empty;': '\u2205',
        '&nabla;': '\u2207',
        '&isin;': '\u2208',
        '&notin;': '\u2209',
        '&ni;': '\u220b',
        '&prod;': '\u220f',
        '&sum;': '\u2211',
        '&lowast;': '\u2217',
        '&radic;': '\u221a',
        '&prop;': '\u221d',
        '&infin;': '\u221e',
        '&ang;': '\u2220',
        '&and;': '\u2227',
        '&or;': '\u2228',
        '&cap;': '\u2229',
        '&cup;': '\u222a',
        '&int;': '\u222b',
        '&there4;': '\u2234',
        '&sim;': '\u223c',
        '&cong;': '\u2245',
        '&asymp;': '\u2248',
        '&ne;': '\u2260',
        '&equiv;': '\u2261',
        '&le;': '\u2264',
        '&ge;': '\u2265',
        '&sub;': '\u2282',
        '&sup;': '\u2283',
        '&nsub;': '\u2284',
        '&sube;': '\u2286',
        '&supe;': '\u2287',
        '&oplus;': '\u2295',
        '&otimes;': '\u2297',
        '&perp;': '\u22a5',
        '&sdot;': '\u22c5',
        '&lceil;': '\u2308',
        '&rceil;': '\u2309',
        '&lfloor;': '\u230a',
        '&rfloor;': '\u230b',
        '&lang;': '\u2329',
        '&rang;': '\u232a',
        '&loz;': '\u25ca',
        '&spades;': '\u2660',
        '&clubs;': '\u2663',
        '&hearts;': '\u2665',
        '&diams;': '\u2666'
    };

    var decode = function (str) {
        if (!~str.indexOf('&')) return str;

        //Decode literal EntitiesApi
        for (var i in entities) {
            str = str.replace(new RegExp(i, 'g'), entities[i]);
        }

        //Decode hex EntitiesApi
        str = str.replace(/&#x(0*[0-9a-f]{2,5});?/gi, function (m, code) {
            return String.fromCharCode(parseInt(+code, 16));
        });

        //Decode numeric EntitiesApi
        str = str.replace(/&#([0-9]{2,4});?/gi, function (m, code) {
            return String.fromCharCode(+code);
        });

        str = str.replace(/&amp;/g, '&');

        return str;
    }

    var encode = function (str) {
        str = str.replace(/&/g, '&amp;');

        //IE doesn't accept &apos;
        str = str.replace(/'/g, '&#39;');

        //Encode literal EntitiesApi
        for (var i in entities) {
            str = str.replace(new RegExp(entities[i], 'g'), i);
        }

        return str;
    }

    exports.entities = {
        encode: encode,
        decode: decode
    }

    //This module is adapted from the CodeIgniter framework
    //The license is available at http://codeigniter.com/

    var never_allowed_str = {
        'document.cookie':              '[removed]',
        'document.write':               '[removed]',
        '.parentNode':                  '[removed]',
        '.innerHTML':                   '[removed]',
        'window.location':              '[removed]',
        '-moz-binding':                 '[removed]',
        '<!--':                         '&lt;!--',
        '-->':                          '--&gt;',
        '<![CDATA[':                    '&lt;![CDATA['
    };

    var never_allowed_regex = {
        'javascript\\s*:':              '[removed]',
        'expression\\s*(\\(|&\\#40;)':  '[removed]',
        'vbscript\\s*:':                '[removed]',
        'Redirect\\s+302':              '[removed]'
    };

    var non_displayables = [
        /%0[0-8bcef]/g,         // url encoded 00-08, 11, 12, 14, 15
        /%1[0-9a-f]/g,          // url encoded 16-31
        /[\x00-\x08]/g,         // 00-08
        /\x0b/g, /\x0c/g,       // 11,12
        /[\x0e-\x1f]/g,         // 14-31
    ];

    var compact_words = [
        'javascript', 'expression', 'vbscript',
        'script', 'applet', 'alert', 'document',
        'write', 'cookie', 'window'
    ];

    exports.xssClean = function(str, is_image) {

        //Recursively clean objects and arrays
        if (str instanceof Array || typeof str === 'object') {
            for (var i in str) {
                str[i] = exports.xssClean(str[i]);
            }
            return str;
        }

        //Remove invisible characters
        str = remove_invisible_characters(str);

        //Protect query string variables in URLs => 901119URL5918AMP18930PROTECT8198
        str = str.replace(/\&([a-z\_0-9]+)\=([a-z\_0-9]+)/i, xss_hash() + '$1=$2');

        //Validate standard character EntitiesApi - add a semicolon if missing.  We do this to enable
        //the conversion of EntitiesApi to ASCII later.
        str = str.replace(/(&\#?[0-9a-z]{2,})([\x00-\x20])*;?/i, '$1;$2');

        //Validate UTF16 two byte encoding (x00) - just as above, adds a semicolon if missing.
        str = str.replace(/(&\#x?)([0-9A-F]+);?/i, '$1;$2');

        //Un-protect query string variables
        str = str.replace(xss_hash(), '&');

        //Decode just in case stuff like this is submitted:
        //<a href="http://%77%77%77%2E%67%6F%6F%67%6C%65%2E%63%6F%6D">Google</a>
        str = decodeURIComponent(str);

        //Convert character EntitiesApi to ASCII - this permits our tests below to work reliably.
        //We only convert EntitiesApi that are within tags since these are the ones that will pose security problems.
        str = str.replace(/[a-z]+=([\'\"]).*?\\1/gi, function(m, match) {
            return m.replace(match, convert_attribute(match));
        });

        //Remove invisible characters again
        str = remove_invisible_characters(str);

        //Convert tabs to spaces
        str = str.replace('\t', ' ');

        //Captured the converted string for later comparison
        var converted_string = str;

        //Remove strings that are never allowed
        for (var i in never_allowed_str) {
            str = str.replace(i, never_allowed_str[i]);
        }

        //Remove regex patterns that are never allowed
        for (var i in never_allowed_regex) {
            str = str.replace(new RegExp(i, 'i'), never_allowed_regex[i]);
        }

        //Compact any exploded words like:  j a v a s c r i p t
        // We only want to do this when it is followed by a non-word character
        for (var i in compact_words) {
            var spacified = compact_words[i].split('').join('\\s*')+'\\s*';

            str = str.replace(new RegExp('('+spacified+')(\\W)', 'ig'), function(m, compat, after) {
                return compat.replace(/\s+/g, '') + after;
            });
        }

        //Remove disallowed Javascript in links or img tags
        do {
            var original = str;

            if (str.match(/<a/i)) {
                str = str.replace(/<a\\s+([^>]*?)(>|$)/gi, function(m, attributes, end_tag) {
                    attributes = filter_attributes(attributes.replace('<','').replace('>',''));
                    return m.replace(attributes, attributes.replace(/href=.*?(alert\(|alert&\#40;|javascript\:|charset\=|window\.|document\.|\.cookie|<script|<xss|base64\\s*,)/gi, ''));
                });
            }

            if (str.match(/<img/i)) {
                str = str.replace(/<img\\s+([^>]*?)(\\s?\/?>|$)/gi, function(m, attributes, end_tag) {
                    attributes = filter_attributes(attributes.replace('<','').replace('>',''));
                    return m.replace(attributes, attributes.replace(/src=.*?(alert\(|alert&\#40;|javascript\:|charset\=|window\.|document\.|\.cookie|<script|<xss|base64\\s*,)/gi, ''));
                });
            }

            if (str.match(/script/i) || str.match(/xss/i)) {
                str = str.replace(/<(\/*)(script|xss)(.*?)\>/gi, '[removed]');
            }

        } while(original != str);

        //Remove JavaScript Event Handlers - Note: This code is a little blunt.  It removes the event
        //handler and anything up to the closing >, but it's unlikely to be a problem.
        event_handlers = ['[^a-z_\-]on\w*'];

        //Adobe Photoshop puts XML metadata into JFIF images, including namespacing,
        //so we have to allow this for images
        if (!is_image) {
            event_handlers.push('xmlns');
        }

        str = str.replace(new RegExp("<([^><]+?)("+event_handlers.join('|')+")(\\s*=\\s*[^><]*)([><]*)", 'i'), '<$1$4');

        //Sanitize naughty HTML elements
        //If a tag containing any of the words in the list
        //below is found, the tag gets converted to EntitiesApi.
        //So this: <blink>
        //Becomes: &lt;blink&gt;
        naughty = 'alert|applet|audio|basefont|base|behavior|bgsound|blink|body|embed|expression|form|frameset|frame|head|html|ilayer|iframe|input|isindex|layer|link|meta|object|plaintext|style|script|textarea|title|video|xml|xss';
        str = str.replace(new RegExp('<(/*\\s*)('+naughty+')([^><]*)([><]*)', 'gi'), function(m, a, b, c, d) {
            return '&lt;' + a + b + c + d.replace('>','&gt;').replace('<','&lt;');
        });

        //Sanitize naughty scripting elements Similar to above, only instead of looking for
        //tags it looks for PHP and JavaScript commands that are disallowed.  Rather than removing the
        //code, it simply converts the parenthesis to EntitiesApi rendering the code un-executable.
        //For example:  eval('some code')
        //Becomes:      eval&#40;'some code'&#41;
        str = str.replace(/(alert|cmd|passthru|eval|exec|expression|system|fopen|fsockopen|file|file_get_contents|readfile|unlink)(\\s*)\((.*?)\)/gi, '$1$2&#40;$3&#41;');

        //This adds a bit of extra precaution in case something got through the above filters
        for (var i in never_allowed_str) {
            str = str.replace(i, never_allowed_str[i]);
        }
        for (var i in never_allowed_regex) {
            str = str.replace(new RegExp(i, 'i'), never_allowed_regex[i]);
        }

        //Images are handled in a special way
        if (is_image && str !== converted_string) {
            throw new Error('Image may contain XSS');
        }

        return str;
    }

    function remove_invisible_characters(str) {
        for (var i in non_displayables) {
            str = str.replace(non_displayables[i], '');
        }
        return str;
    }

    function xss_hash() {
        //TODO: Create a random hash
        return '!*$^#(@*#&';
    }

    function convert_attribute(str) {
        return str.replace('>','&gt;').replace('<','&lt;').replace('\\','\\\\');
    }

    //Filter Attributes - filters tag attributes for consistency and safety
    function filter_attributes(str) {
        out = '';

        str.replace(/\\s*[a-z\-]+\\s*=\\s*(?:\042|\047)(?:[^\\1]*?)\\1/gi, function(m) {
            $out += m.replace(/\/\*.*?\*\//g, '');
        });

        return out;
    }

    var Validator = exports.Validator = function() {}

    Validator.prototype.check = function(str, fail_msg) {
        this.str = str == null || (isNaN(str) && str.length == undefined) ? '' : str+'';
        this.msg = fail_msg;
        this._errors = [];
        return this;
    }

    //Create some aliases - may help code readability
    Validator.prototype.validate = Validator.prototype.check;
    Validator.prototype.assert = Validator.prototype.check;

    Validator.prototype.error = function(msg) {
        throw new Error(msg);
    }

    Validator.prototype.isEmail = function() {
        if (!this.str.match(/^(?:[\w\!\#\$\%\&\'\*\+\-\/\=\?\^\`\{\|\}\~]+\.)*[\w\!\#\$\%\&\'\*\+\-\/\=\?\^\`\{\|\}\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\-](?!\.)){0,61}[a-zA-Z0-9]?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\[(?:(?:[01]?\d{1,2}|2[0-4]\d|25[0-5])\.){3}(?:[01]?\d{1,2}|2[0-4]\d|25[0-5])\]))$/)) {
            return this.error(this.msg || 'Invalid email');
        }
        return this;
    }

    //Will work against Visa, MasterCard, American Express, Discover, Diners Club, and JCB card numbering formats
    Validator.prototype.isCreditCard = function() {
        this.str.replace(/[^0-9]+/g, ''); //remove all dashes, spaces, etc.
        if (!this.str.match(/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$/)) {
            return this.error(this.msg || 'Invalid credit card');
        }
        return this;
    }

    Validator.prototype.isUrl = function() {
        if (!this.str.match(/^(?:(?:ht|f)tp(?:s?)\:\/\/|~\/|\/)?(?:\w+:\w+@)?((?:(?:[-\w\d{1-3}]+\.)+(?:com|org|net|gov|mil|biz|info|mobi|name|aero|jobs|edu|co\.uk|ac\.uk|it|fr|tv|museum|asia|local|travel|[a-z]{2}))|((\b25[0-5]\b|\b[2][0-4][0-9]\b|\b[0-1]?[0-9]?[0-9]\b)(\.(\b25[0-5]\b|\b[2][0-4][0-9]\b|\b[0-1]?[0-9]?[0-9]\b)){3}))(?::[\d]{1,5})?(?:(?:(?:\/(?:[-\w~!$+|.,=]|%[a-f\d]{2})+)+|\/)+|\?|#)?(?:(?:\?(?:[-\w~!$+|.,*:]|%[a-f\d{2}])+=?(?:[-\w~!$+|.,*:=]|%[a-f\d]{2})*)(?:&(?:[-\w~!$+|.,*:]|%[a-f\d{2}])+=?(?:[-\w~!$+|.,*:=]|%[a-f\d]{2})*)*)*(?:#(?:[-\w~!$ |\/.,*:;=]|%[a-f\d]{2})*)?$/)) {
            return this.error(this.msg || 'Invalid URL');
        }
        return this;
    }

    Validator.prototype.isIP = function() {
        if (!this.str.match(/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/)) {
            return this.error(this.msg || 'Invalid IP');
        }
        return this;
    }

    Validator.prototype.isAlpha = function() {
        if (!this.str.match(/^[a-zA-Z]+$/)) {
            return this.error(this.msg || 'Invalid characters');
        }
        return this;
    }

    Validator.prototype.isAlphanumeric = function() {
        if (!this.str.match(/^[a-zA-Z0-9]+$/)) {
            return this.error(this.msg || 'Invalid characters');
        }
        return this;
    }

    Validator.prototype.isNumeric = function() {
        if (!this.str.match(/^-?[0-9]+$/)) {
            return this.error(this.msg || 'Invalid number');
        }
        return this;
    }

    Validator.prototype.isLowercase = function() {
        if (!this.str.match(/^[a-z0-9]+$/)) {
            return this.error(this.msg || 'Invalid characters');
        }
        return this;
    }

    Validator.prototype.isUppercase = function() {
        if (!this.str.match(/^[A-Z0-9]+$/)) {
            return this.error(this.msg || 'Invalid characters');
        }
        return this;
    }

    Validator.prototype.isInt = function() {
        if (!this.str.match(/^(?:-?(?:0|[1-9][0-9]*))$/)) {
            return this.error(this.msg || 'Invalid integer');
        }
        return this;
    }

    Validator.prototype.isDecimal = function() {
        if (!this.str.match(/^(?:-?(?:0|[1-9][0-9]*))?(?:\.[0-9]*)?$/)) {
            return this.error(this.msg || 'Invalid decimal');
        }
        return this;
    }

    Validator.prototype.isFloat = function() {
        return this.isDecimal();
    }

    Validator.prototype.notNull = function() {
        if (this.str === '') {
            return this.error(this.msg || 'Invalid characters');
        }
        return this;
    }

    Validator.prototype.isNull = function() {
        if (this.str !== '') {
            return this.error(this.msg || 'Invalid characters');
        }
        return this;
    }

    Validator.prototype.notEmpty = function() {
        if (this.str.match(/^[\s\t\r\n]*$/)) {
            return this.error(this.msg || 'String is whitespace');
        }
        return this;
    }

    Validator.prototype.equals = function(equals) {
        if (this.str != equals) {
            return this.error(this.msg || 'Not equal');
        }
        return this;
    }

    Validator.prototype.contains = function(str) {
        if (this.str.indexOf(str) === -1) {
            return this.error(this.msg || 'Invalid characters');
        }
        return this;
    }

    Validator.prototype.notContains = function(str) {
        if (this.str.indexOf(str) >= 0) {
            return this.error(this.msg || 'Invalid characters');
        }
        return this;
    }

    Validator.prototype.regex = Validator.prototype.is = function(pattern, modifiers) {
        if (typeof pattern !== 'function') {
            pattern = new RegExp(pattern, modifiers);
        }
        if (! this.str.match(pattern)) {
            return this.error(this.msg || 'Invalid characters');
        }
        return this;
    }

    Validator.prototype.notRegex = Validator.prototype.not = function(pattern, modifiers) {
        if (typeof pattern !== 'function') {
            pattern = new RegExp(pattern, modifiers);
        }
        if (this.str.match(pattern)) {
            this.error(this.msg || 'Invalid characters');
        }
        return this;
    }

    Validator.prototype.len = function(min, max) {
        if (this.str.length < min) {
            this.error(this.msg || 'String is too small');
        }
        if (typeof max !== undefined && this.str.length > max) {
            return this.error(this.msg || 'String is too large');
        }
        return this;
    }

    //Thanks to github.com/sreuter for the idea.
    Validator.prototype.isUUID = function(version) {
        if (version == 3 || version == 'v3') {
            pattern = /[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i;
        } else if (version == 4 || version == 'v4') {
            pattern = /[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i;
        } else {
            pattern = /[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i;
        }
        if (!this.str.match(pattern)) {
            return this.error(this.msg || 'Not a UUID');
        }
        return this;
    }

    Validator.prototype.isDate = function() {
        var intDate = Date.parse(this.str);
        if (isNaN(intDate)) {
            return this.error(this.msg || 'Not a date');
        }
        return this;
    }

    Validator.prototype.in = function(options) {
        if (options && typeof options.indexOf === 'function') {
            if (!~options.indexOf(this.str)) {
                return this.error(this.msg || 'Unexpected value');
            }
            return this;
        } else {
            return this.error(this.msg || 'Invalid in() argument');
        }
    }

    Validator.prototype.notIn = function(options) {
        if (options && typeof options.indexOf === 'function') {
            if (options.indexOf(this.str) !== -1) {
                return this.error(this.msg || 'Unexpected value');
            }
            return this;
        } else {
            return this.error(this.msg || 'Invalid notIn() argument');
        }
    }

    Validator.prototype.min = function(val) {
        var number = parseFloat(this.str);

        if (!isNaN(number) && number < val) {
            return this.error(this.msg || 'Invalid number');
        }

        return this;
    }

    Validator.prototype.max = function(val) {
        var number = parseFloat(this.str);
        if (!isNaN(number) && number > val) {
            return this.error(this.msg || 'Invalid number');
        }
        return this;
    }

    Validator.prototype.isArray = function() {
        if (!Array.isArray(this.str)) {
            return this.error(this.msg || 'Not an array');
        }
        return this;
    }

    var Filter = exports.Filter = function() {}

    var whitespace = '\\r\\n\\t\\s';

    Filter.prototype.modify = function(str) {
        this.str = str;
    }

    //Create some aliases - may help code readability
    Filter.prototype.convert = Filter.prototype.sanitize = function(str) {
        this.str = str;
        return this;
    }

    Filter.prototype.xss = function(is_image) {
        this.modify(exports.xssClean(this.str, is_image));
        return this.str;
    }

    Filter.prototype.entityDecode = function() {
        this.modify(decode(this.str));
        return this.str;
    }

    Filter.prototype.entityEncode = function() {
        this.modify(encode(this.str));
        return this.str;
    }

    Filter.prototype.ltrim = function(chars) {
        chars = chars || whitespace;
        this.modify(this.str.replace(new RegExp('^['+chars+']+', 'g'), ''));
        return this.str;
    }

    Filter.prototype.rtrim = function(chars) {
        chars = chars || whitespace;
        this.modify(this.str.replace(new RegExp('['+chars+']+$', 'g'), ''));
        return this.str;
    }

    Filter.prototype.trim = function(chars) {
        chars = chars || whitespace;
        this.modify(this.str.replace(new RegExp('^['+chars+']+|['+chars+']+$', 'g'), ''));
        return this.str;
    }

    Filter.prototype.ifNull = function(replace) {
        if (!this.str || this.str === '') {
            this.modify(replace);
        }
        return this.str;
    }

    Filter.prototype.toFloat = function() {
        this.modify(parseFloat(this.str));
        return this.str;
    }

    Filter.prototype.toInt = function(radix) {
        radix = radix || 10;
        this.modify(parseInt(this.str), radix);
        return this.str;
    }

    //Any strings with length > 0 (except for '0' and 'false') are considered true,
    //all other strings are false
    Filter.prototype.toBoolean = function() {
        if (!this.str || this.str == '0' || this.str == 'false' || this.str == '') {
            this.modify(false);
        } else {
            this.modify(true);
        }
        return this.str;
    }

    //String must be equal to '1' or 'true' to be considered true, all other strings
    //are false
    Filter.prototype.toBooleanStrict = function() {
        if (this.str == '1' || this.str == 'true') {
            this.modify(true);
        } else {
            this.modify(false);
        }
        return this.str;
    }

    //Quick access methods
    exports.sanitize = exports.convert = function(str) {
        var filter = new exports.Filter();
        return filter.sanitize(str);
    }

    exports.check = exports.validate = exports.assert = function(str, fail_msg) {
        var validator = new exports.Validator();
        return validator.check(str, fail_msg);
    }

})(typeof(exports) === 'undefined' ? window : exports);

});
define('main.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.main = undefined;

require("./libs/polyfill");

require("./stores");

require("./actions");

var main = exports.main = function main() {
    //application entry point
};
});
define('plugins.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.alert = alert;
exports.confirm = confirm;
exports.showLoader = showLoader;
exports.hideLoader = hideLoader;
exports.toast = toast;

var _aj = require("./aj");

var aj = _interopRequireWildcard(_aj);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var loaderCounter = 0;

function alert(title, message, type) {
    return aj.exec("Alert", "alert", { title: title, message: message, type: type }, function () {}).then(function () {}).catch(function () {});
}

function confirm() {
    return new Promise(function (resolve, reject) {
        var callback = function callback(confirmed) {
            if (confirmed) {
                resolve();
            } else {
                reject();
            }
        };

        aj.exec("Alert", "confirm", {}, callback).then(function () {}).catch(function () {
            return reject();
        });
    });
}

function showLoader() {
    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

    if (loaderCounter <= 0) {
        aj.exec("Loader", "show", { message: message }, function () {}).then(function () {}).catch(function () {});
    }

    loaderCounter++;
}

function hideLoader() {
    loaderCounter--;

    if (loaderCounter <= 0) {
        aj.exec("Loader", "hide", {}, function () {}).then(function () {}).catch(function () {});
    }
}

function toast(message) {
    aj.exec("Toast", "show", { message: message }, function () {}).then(function () {}).catch(function () {});
}
});
define('stores.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SelectStore = exports.SELECT = exports.MenuStore = exports.MENU = exports.LookupStore = exports.LOOKUP = exports.EntitiesStore = exports.ENTITIES = exports.GridsStore = exports.GRIDS = exports.AccountStore = exports.ACCOUNT = exports.SessionStore = exports.SESSION = exports.UIStore = exports.UI = undefined;

var _aj = require("./aj");

var aj = _interopRequireWildcard(_aj);

var _ajex = require("./utils/ajex");

var _actions = require("./actions");

var actions = _interopRequireWildcard(_actions);

var _underscore = require("./libs/underscore");

var _ = _interopRequireWildcard(_underscore);

var _strings = require("./strings");

var _strings2 = _interopRequireDefault(_strings);

var _lang = require("./utils/lang");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var UI = exports.UI = "UI";
var UIStore = exports.UIStore = aj.createStore(UI, function () {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var action = arguments[1];


    switch (action.type) {
        case actions.GET_USER_COVER_IMAGE:
            return _.assign(state, { error: false });

        case (0, _ajex.completed)(actions.GET_USER_COVER_IMAGE):
            return _.assign(state, { error: false, cover: action.data });

        case (0, _ajex.failed)(actions.GET_USER_COVER_IMAGE):
            return _.assign(state, { error: true });

        case actions.GET_USER_PROFILE_IMAGE:
            return _.assign(state, { error: false });

        case (0, _ajex.completed)(actions.GET_USER_PROFILE_IMAGE):
            return _.assign(state, { error: false, profileImage: action.data });

        case (0, _ajex.failed)(actions.GET_USER_PROFILE_IMAGE):
            return _.assign(state, { error: true });
    }
});

var SESSION = exports.SESSION = "SESSION";
var SessionStore = exports.SessionStore = aj.createStore(SESSION, function () {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var action = arguments[1];


    switch (action.type) {
        case actions.LOGIN:
            return _.assign(state, { isLoggedIn: false });

        case (0, _ajex.completed)(actions.LOGIN):
            return _.assign(state, { isLoggedIn: true, user: action.user, error: false });

        case (0, _ajex.failed)(actions.LOGIN):
            return _.assign(state, { isLoggedIn: false, error: true });

        case actions.RESUME_SESSION:
            return _.assign(state, { isLoggedIn: false, resumeComplete: false });

        case (0, _ajex.completed)(actions.RESUME_SESSION):
            return _.assign(state, { isLoggedIn: true, user: action.user, error: false, resumeComplete: true });

        case (0, _ajex.failed)(actions.RESUME_SESSION):
            return _.assign(state, { isLoggedIn: false, error: true, resumeComplete: true });
    }
});

var ACCOUNT = exports.ACCOUNT = "ACCOUNT";
var AccountStore = exports.AccountStore = aj.createStore(ACCOUNT, function () {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { activationCode: "" };
    var action = arguments[1];


    switch (action.type) {
        case actions.REGISTER:
            return _.assign(state, { registered: false, error: false });

        case (0, _ajex.completed)(actions.REGISTER):
            return _.assign(state, { registered: true, error: false, name: action.name, mail: action.mail, message: action.message });

        case (0, _ajex.failed)(actions.REGISTER):
            return _.assign(state, { registered: false, error: true, message: action.message });

        case actions.SET_ACTIVATION_CODE:
            return _.assign(state, { activationCode: action.activationCode });

        case actions.CONFIRM_ACCOUNT:
            return _.assign(state, { confirmed: false, error: false });

        case (0, _ajex.completed)(actions.CONFIRM_ACCOUNT):
            return _.assign(state, { confirmed: true, error: false });

        case (0, _ajex.failed)(actions.CONFIRM_ACCOUNT):
            return _.assign(state, { confirmed: false, error: true, message: action.message });

        case actions.RECOVER_ACCOUNT:
            return _.assign(state, { recovered: false, error: false });

        case (0, _ajex.completed)(actions.RECOVER_ACCOUNT):
            return _.assign(state, { recovered: true, error: false });

        case (0, _ajex.failed)(actions.RECOVER_ACCOUNT):
            return _.assign(state, { recovered: false, error: true });
    }
});

var GRIDS = exports.GRIDS = "GRIDS";
var GridsStore = exports.GridsStore = aj.createStore(GRIDS, function () {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { grid: null };
    var action = arguments[1];


    switch (action.type) {
        case actions.GET_GRID:
            return _.assign(state, { error: false, grid: null });

        case (0, _ajex.completed)(actions.GET_GRID):
            return _.assign(state, { error: false, grid: action.grid });

        case (0, _ajex.failed)(actions.GET_GRID):
            return _.assign(state, { error: true, grid: null });
    }
});

var ENTITIES = exports.ENTITIES = "ENTITIES";
var EntitiesStore = exports.EntitiesStore = aj.createStore(ENTITIES, function () {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var action = arguments[1];


    switch (action.type) {
        case (0, _ajex.completed)(actions.LOAD_ENTITIES):
            return (0, _ajex.discriminate)(state, action.discriminator, { error: false, result: action.result });

        case (0, _ajex.failed)(actions.LOAD_ENTITIES):
            return (0, _ajex.discriminate)(state, action.discriminator, { error: true, result: null });

        case (0, _ajex.completed)(actions.DELETE_ENTITIES):
            return (0, _ajex.discriminate)(state, action.discriminator, { error: false, result: action.result });

        case (0, _ajex.failed)(actions.DELETE_ENTITIES):
            return (0, _ajex.discriminate)(state, action.discriminator, { error: true, result: null });

        case actions.NEW_ENTITY:
            return (0, _ajex.discriminate)(state, action.discriminator, { error: false, data: {}, saved: false });

        case actions.GET_ENTITY:
            return (0, _ajex.discriminate)(state, action.discriminator, { error: false, data: null, saved: false });

        case (0, _ajex.completed)(actions.GET_ENTITY):
            return (0, _ajex.discriminate)(state, action.discriminator, { error: false, data: action.data });

        case (0, _ajex.failed)(actions.GET_ENTITY):
            return (0, _ajex.discriminate)(state, action.discriminator, {
                error: true,
                data: null,
                validationError: false,
                validationResult: null
            });

        case actions.FREE_ENTITIES:
            return _.omit(state, action.discriminator);

        case actions.SAVE_ENTITY:
            return (0, _ajex.discriminate)(state, action.discriminator, { error: false, saved: false });

        case (0, _ajex.completed)(actions.SAVE_ENTITY):
            return (0, _ajex.discriminate)(state, action.discriminator, {
                error: false,
                data: action.data,
                saved: true,
                validationError: false,
                validationResult: null
            });

        case (0, _ajex.failed)(actions.SAVE_ENTITY):
            return (0, _ajex.discriminate)(state, action.discriminator, {
                error: true,
                data: action.data,
                saved: false,
                validationError: action.validationError,
                validationResult: action.validationResult
            });

    }
});

var LOOKUP = exports.LOOKUP = "LOOKUP";
var LookupStore = exports.LookupStore = aj.createStore(LOOKUP, function () {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var action = arguments[1];


    switch (action.type) {
        case (0, _ajex.completed)(actions.GET_LOOKUP_RESULT):
            return (0, _ajex.discriminate)(state, action.discriminator, { error: false, result: action.result });

        case (0, _ajex.failed)(actions.GET_LOOKUP_RESULT):
            return (0, _ajex.discriminate)(state, action.discriminator, { error: true, result: null });

        case (0, _ajex.completed)(actions.GET_LOOKUP_VALUES):
            return (0, _ajex.discriminate)(state, action.discriminator, { error: false, values: action.values });

        case (0, _ajex.failed)(actions.GET_LOOKUP_VALUES):
            return (0, _ajex.discriminate)(state, action.discriminator, { error: true, values: null });

        case actions.FREE_LOOKUP:
            return _.omit(state, action.discriminator);

    }
});

var MENU = exports.MENU = "MENU";
var MenuStore = exports.MenuStore = aj.createStore(MENU, function () {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var action = arguments[1];


    switch (action.type) {
        case actions.SETUP_MENU:
            return _.assign(state, { menu: action.menu });

        case actions.SET_ACTIVE_MENU_ITEM:
            return _.assign(state, { menu: (0, _lang.walk)(state.menu, "children", function (i) {
                    i.active = i == action.item;
                }) });

        case actions.EXPAND_MENU_ITEM:
            return _.assign(state, { menu: (0, _lang.walk)(state.menu, "children", function (i) {
                    if (i == action.item) {
                        i.expanded = !(action.item.expanded || false);
                    }
                }) });
    }
});

var SELECT = exports.SELECT = "SELECT";
var SelectStore = exports.SelectStore = aj.createStore(SELECT, function () {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var action = arguments[1];


    switch (action.type) {

        case actions.GET_SELECT_VALUES:
            return (0, _ajex.discriminate)(state, action.discriminator, { error: false, loading: true });

        case (0, _ajex.completed)(actions.GET_SELECT_VALUES):
            return (0, _ajex.discriminate)(state, action.discriminator, { error: false, loading: false, values: action.values });

        case (0, _ajex.failed)(actions.GET_SELECT_VALUES):
            return (0, _ajex.discriminate)(state, action.discriminator, { error: true, loading: false, values: null });

        case actions.GET_SELECT_ENTITIES:
            return (0, _ajex.discriminate)(state, action.discriminator, { error: false, loading: true });

        case (0, _ajex.completed)(actions.GET_SELECT_ENTITIES):
            return (0, _ajex.discriminate)(state, action.discriminator, { error: false, loading: false, values: action.entities });

        case (0, _ajex.failed)(actions.GET_SELECT_ENTITIES):
            return (0, _ajex.discriminate)(state, action.discriminator, { error: true, loading: false, values: null });

        case actions.FREE_SELECT:
            return _.omit(state, action.discriminator);

    }
});
});
define('strings.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _strings$it;

exports.setLanguage = setLanguage;
exports.getLanguage = getLanguage;
exports.default = M;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var language = "it";

var strings = {};
strings["en"] = {
    appName: "_APPNAME_",
    registering: "Registering...",
    ooops: "Ooops...",
    badLogin: "Cannot login! Please check your email address or password!",
    welcome: "Welcome",
    congratulations: "Congratulations",
    welcomeMessage: "Hi {0}, your registration is complete.\nA confirmation link was sent to {1}.\nPlease confirm before login",
    continue: "Continue",
    register: "Register",
    forgotPassword: "Forgot password",
    signIn: "Sign in",
    mailAddress: "Mail Address",
    name: "Name",
    password: "Password",
    accountConfirmText: "Insert activation code that we sent to your mailbox to confirm your account",
    accountConfirmed: "Your account is confirmed. You can login now",
    mailAndPasswordRequired: "Email and password are required",
    nameMailAndPasswordRequired: "Name, email and password are required",
    mailRequired: "Email is required",
    activationCodeRequired: "Activation code required",
    accountRecoverText: "Please insert your email address to recover password. We will send a new password in your mailbox!",
    problemOccoured: "There is a problem",
    accountRecovered: "A new password was sent to {0}",
    pleaseSpecifyId: "Please specify an ID",
    pleaseSpecifyQuery: "Please specify a query",
    pleaseSpecifyEntity: "Please specify the entity",
    search: "Search",
    close: "Close",
    selectFilterType: "Select filter type",
    filterType: "Filter type",
    typeValueToSearch: "Type value to search",
    value: "Value",
    filters: "Filters",
    pagination: "Showing {0} to {1} of {2}",
    noResults: "there are no results with the specified criteria",
    selectAll: "Select all",
    delete: "Delete",
    create: "Create",
    refresh: "Refresh",
    confirm: "Confirm",
    entityDeleteConfirm: "Are you sure to delete {0} entities?",
    submit: "Submit",
    cancel: "Cancel",
    add: "Add",
    pleaseSpecifyData: "Please specify data",
    ok: "OK",
    security: "Security",
    users: "Users",
    roles: "Roles",
    setup: "Setup",
    categories: "Categories",
    nElementsSelected: "{0} elements selected",
    oneElementSelected: "1 element selected",
    nothingSelected: "Nothing selected",
    usersListDescription: "Create, edit or delete system users",
    mail: "Email",
    active: "Active",
    editUser: "Edit user",
    editUserDescription: "Use this form to edit user informations",
    generalInformations: "General informations",
    rolesListDescription: "A role is an entity that gives to user authorization to do something",
    nameOfRole: "Name of role",
    role: "Role",
    permissions: "Permissions",
    selectPermissions: "Select permissions for role",
    back: "Back",
    save: "Save",
    image: "Image",
    cover: "Cover",
    saveComplete: "Save complete",
    articles: "Articles",
    articlesListDescription: "Articles must exists in Gamma system. Commodo only extends Gamma articles",
    company: "Company",
    id: "ID",
    description: "Description",
    companies: "Companies",
    companiesListDescription: "List of companies, read only!",
    components: "Components",
    componentsListDescription: "Components are base elements of a \"bill of materials\"",
    characteristic: "Characteristic",
    characteristics: "Characteristics",
    nameOfComponent: "Name of component",
    editComponent: "Edit component",
    editComponentDescription: "Use this form to edit component informations",
    optionValue: "Option value",
    nameOfCharacteristic: "Name of characteristic",
    addCharacteristic: "Add characteristic",
    newOption: "New option",
    areYouSureToRemoveCharacteristic: "Are you sure to remove characteristic '{0}'?",
    editArticle: "Edit article",
    editArticleDescription: "Not all article informations are editable in Commodo because is connected to TeamSystem Gamma",
    article: "Article",
    select: "Select",
    component: "Component",
    pleaseSpecifyComponentId: "Please specify component id",
    pleaseSelectComponent: "Please select component",
    characteristicValues: "Characteristic values",
    selectedComponent: "Selected component",
    noComponentSelected: "No component selected",
    versions: "Versions",
    version: "Version",
    versionsListDescription: "Use versions to create configurable associations with models",
    editVersion: "Edit version",
    editVersionDescription: "Use this form to edit version informations",
    nameOfVersion: "Name of version",
    collections: "Collections",
    collection: "Collection",
    collectionsListDescription: "Collections are used in models",
    editCollection: "Edit collection",
    editCollectionDescription: "Use this form to edit collection informations",
    nameOfCollection: "Name of collection",
    countries: "Countries",
    country: "Country",
    countriesListDescription: "Countries are used in models",
    editCountry: "Edit country",
    editCountryDescription: "Use this form to edit country informations",
    nameOfCountry: "Name of country",
    design: "Design",
    state: "State",
    model: "Model",
    models: "Models",
    nameOfModel: "Name of model",
    modelsListDescription: "Models are base entities to create a sofa",
    editModel: "Edit model",
    editModelDescription: "Use this form to edit model informations",
    code: "Code",
    extraSize: "Extra size",
    destinationCountry: "Destination country",
    revision: "Revision",
    lastUpdate: "Last update",
    editedBy: "Edited by",
    yes: "Yes",
    no: "No",
    notes: "Notes",
    makeACopy: "Make a copy",
    associateVersion: "Associate version",
    pleaseSpecifyVersion: "Please specify version",
    versionAlreadyAssociated: "Version already associated",
    areYouSureToRemoveVersion: "Are you sure to remove version '{0}'?",
    duplicate: "Duplicate",
    edit: "Edit",
    pleaseSaveTheModel: "Please save the model to continue",
    configurables: "Configurables",
    configurablesListDescription: "List of versions associated to models. Use Models registry to make new associations",
    nameOfConfigurable: "Name of configurable",
    addComponent: "Add component",
    editRole: "Edit role",
    editRoleDescription: "Use role to manage what an user can do in system",
    unableToExcludeDefaultArticle: "Unable to exclude an article marked as default",
    addArticleToComponent: "Add article to component {0}",
    selectByArticle: "Select by article",
    removeThisComponent: "Remove this component",
    addArticle: "Add article",
    confirmRemoveConfigurableComponent: "Do you want to remove {0}?",
    editConfigurable: "Edit configurable",
    editConfigurableDescription: "A configurable is the base object for a sofa customization. Use this area to design a model-version in all of its parts",
    noArticlesSelected: "No articles selected for component {0}",
    pleaseSelectDefaultArticleForComponent: "Please select default article for component {0}",
    invalidDefaultArticleSelectedForComponent: "Invalid default article selected for component {0}",
    accessories: "Accessories",
    accessoriesListDescription: "Accessories list",
    editAccessory: "Edit accessory",
    editAccessoryDescription: "Use this form to edit accessory informations",
    nameOfAccessory: "Name of accessory",
    unitOfMeasurements: "Unit of measurements",
    unitOfMeasurementsListDescription: "Unit of measurements list",
    shortName: "Short name",
    conversionFactor: "Conversion factor",
    status: "Status",
    quantity: "Quantity",
    remove: "Remove",
    unitOfMeasurement: "Unit of measurements",
    parts: "Parts",
    partsListDescription: "Represents a coverable part of a sofa",
    editPart: "Edit part",
    editPartDescription: "Use this form to edit part informations",
    nameOfPart: "Name of part",
    covers: "Covers",
    addPart: "Add part",
    type: "Type",
    coverTypes: "Cover types",
    coverTypesListDescription: "Types of coverings used for cover sofa",
    nameOfCoverType: "Name of cover type",
    editCoverType: "Edit cover type",
    editCoverTypeDescription: "Use this form to edit cover type informations",
    colors: "Colors",
    colorsListDescription: "List of colors used in your systems",
    nameOfColor: "Name of color",
    editColor: "Edit color",
    editColorDescription: "Use this form to edit color informations",
    removeThisPart: "Remove this part",
    coverOptions: "Cover options",
    addCoverOption: "Add cover option",
    removeThisCoverOption: "Remove this cover option",
    analogousColorArticles: "Analogous articles",
    complementaryColorArticles: "Complementary articles",
    addComplementaryArticleToCoverOption: "Add complementary article to cover option {0}",
    addAnalogousArticleToCoverOption: "Add analogous article to cover option {0}",
    coverType: "Cover type",
    color: "Color",
    characteristicsDisabledForCoverOptions: "Characteristics disabled for cover options",
    compositions: "Compositions",
    customers: "Customers",
    customersListDescription: "Create system customers",
    paymentCode: "Payment code",
    fiscalCode: "Fiscal code",
    editCustomer: "Edit customer",
    firstName: "First name",
    lastName: "Last name",
    companyName: "Company name",
    cityCode: "City code",
    countryCode: "Country code",
    tel1: "Telephonic number 1",
    tel2: "Telephonic number 2",
    fax: "Fax",
    cellNumber: "Cellular number",
    pec: "Pec",
    vatCode: "Vat",
    componentsAccessoriesCovers: "Components accessories covers",
    removeThisPhase: "Remove this phase",
    phases: "Phases",
    addPhase: "Add phase",
    addComponentToPhase: "Add component to phase",
    workingTime: "Working time",
    address: "Address",
    phasesListDescription: "Phases list description",
    defaultTime: "default time",
    editPhase: "Edit phase",
    editPhaseDescription: "Edit phase description",
    nameOfPhase: "Name of phase",
    production: "Production",
    customer: "Customer",
    coverings: "Coverings",
    allCoverings: "All coverings",
    allAccessories: "All accessories",
    confirmRemoveConfigurablePhase: "Confirm remove configurable phase",
    addArticleToPart: "Add article to part",
    email: "Email",
    website: "Web site",
    zipCode: "Zip code",
    city: "City",
    coverOptionColorConfiguration: "Cover option color configuration",
    addComplementaryArticleForColor: "Add complementary article for {0}",
    addAnalogousArticleForColor: "Add analogous article for {0}"
};

strings["it"] = (_strings$it = {
    appName: "_APPNAME_",
    registering: "Registrazione...",
    ooops: "Ooops...",
    badLogin: "Non riesco ad accedere! Per favore controlla il tuo indirizzo email o password!",
    welcome: "Benvenuto",
    congratulations: "Congratulazioni",
    welcomeMessage: "Ciao {0}, la tua registrazione è completa.\nUn link per la conferma è stato inviato a {1}.\nPer favore conferma prima di effettuare l'accesso",
    continue: "Continuare",
    register: "Registrati",
    forgotPassword: "Dimenticato la password",
    signIn: "Rgistrati",
    mailAddress: "Indirizzo mail",
    name: "Nome",
    password: "Password",
    accountConfirmText: "Inserisci il codice di attivazione che abbiamo inviato alla tua casella mail per confermare il tuo account",
    accountConfirmed: "Il tuo account è confermato. Puoi effettuare l'accesso ora",
    mailAndPasswordRequired: "Email e password sono richieste",
    nameMailAndPasswordRequired: "Nome, email e password sono richieste",
    mailRequired: "Email è richiesta",
    activationCodeRequired: "Codice di attivazione richiesto",
    accountRecoverText: "Per favore inserisci il tuo indirizzo email per recuperare la password. Ti invieremo una nuova password al tuo indirizzo mail!",
    problemOccoured: "C'è un problema",
    accountRecovered: "Una nuova password è stata inviata a {0}",
    pleaseSpecifyId: "Per favore specifica il tuo ID",
    pleaseSpecifyQuery: "Per favore specifica la domanda",
    pleaseSpecifyEntity: "Per favore specifica l'entità",
    search: "Ricerca",
    close: "Chiudi",
    selectFilterType: "Seleziona il tipo di filtro",
    filterType: "Tipo di filtro",
    typeValueToSearch: "Tipo di valore da cercare",
    value: "Valore",
    filters: "Filtri",
    pagination: "Mostrando {0} di {1} di {2}",
    noResults: "Non ci sono risultati con i criteri specificati",
    selectAll: "Seleziona tutto",
    delete: "Rimuovi",
    create: "Crea",
    refresh: "Ricarica",
    confirm: "Conferma",
    entityDeleteConfirm: "Sei sicuro di voler eliminare {0} entità?",
    submit: "Invia",
    cancel: "Annulla",
    add: "Aggiungi",
    pleaseSpecifyData: "Per favore specifica la data",
    ok: "OK",
    security: "Securezza",
    users: "Utenti",
    roles: "Ruoli",
    setup: "Setup",
    categories: "Categorie",
    nElementsSelected: "{0} elementi selezionati",
    oneElementSelected: "1 elemento selezionato",
    nothingSelected: "Niente selezionato",
    usersListDescription: "Creare, modificare o eliminare gli utenti di sistema",
    mail: "Email",
    active: "Attivo",
    editUser: "Modifica utente",
    editUserDescription: "Usa questo modulo per modificare le informazioni dell'utente",
    generalInformations: "Informazioni generali",
    rolesListDescription: "Un ruolo è un'entità che da all'utente l'autorizzazione per fare qualcosa",
    nameOfRole: "Nome del ruolo",
    role: "Ruolo",
    permissions: "Permessi",
    selectPermissions: "Seleziona i premessi per il ruolo",
    back: "Indietro",
    save: "Salva",
    image: "Immagine",
    cover: "Rivestimenti",
    saveComplete: "Salvataggio completato",
    articles: "Articoli",
    articlesListDescription: "Gli articoli devono essere presenti sul sistema Gamma. In commodo gli articoli vengono estesi per aggiungere funzionalità richiesta solo a Commodo",
    company: "Azienda",
    id: "ID",
    description: "Descrizione",
    companies: "Aziende",
    companiesListDescription: "Lista delle aziende, sola lettura!",
    components: "Componenti",
    componentsListDescription: "I componenti sono elementi base di una \"distinta di materiali\"",
    characteristic: "Caratteritica",
    characteristics: "Caratteristiche",
    nameOfComponent: "Nome del componente",
    editComponent: "Modifica componente",
    editComponentDescription: "Usa questo modulo per modificare le informazioni del componente",
    optionValue: "Valore di opzione",
    nameOfCharacteristic: "Nome della caratteristica",
    addCharacteristic: "Aggiungi caratteristica",
    newOption: "Nuova opzione",
    areYouSureToRemoveCharacteristic: "Sei sicuro di voler rimuovere la caratteristica '{0}'?",
    editArticle: "Modifica articolo",
    editArticleDescription: "Non tutte le informazini dell'articolo sono modificabili in Commodo perchè è connesso a TeamSystem Gamma",
    article: "Articolo",
    select: "Seleziona",
    component: "Componente",
    pleaseSpecifyComponentId: "Per favore specifica l'id del componente",
    pleaseSelectComponent: "Per favore seleziona il componente",
    characteristicValues: "Valori della caratteristica",
    selectedComponent: "Componente selezionato",
    noComponentSelected: "Nessun componente selezionato",
    versions: "Versioni",
    version: "Versione",
    versionsListDescription: "Usa le versioni per creare associazioni configurabili con i modelli",
    editVersion: "Modifica la versione",
    editVersionDescription: "Usa questo modulo per modificare le informazioni della versione",
    nameOfVersion: "Nome della versione",
    collections: "Collezioni",
    collection: "Collezione",
    collectionsListDescription: "Le collezioni sono usate nei modelli",
    editCollection: "Modifica collezioni",
    editCollectionDescription: "Usa questo modulo per modificare le informazioni delle collezioni",
    nameOfCollection: "Nome delle collezioni",
    countries: "Paesi",
    country: "Paese",
    countriesListDescription: "I paesi sono usati nei modelli",
    editCountry: "Modifica il paese",
    editCountryDescription: "Usa questo modulo per modificare le informazioni del paese",
    nameOfCountry: "Nome del paese",
    design: "Design",
    state: "Stato",
    model: "Modello",
    models: "Modelli",
    nameOfModel: "Nome del modello",
    modelsListDescription: "I modelli sono entità base per creare un divano",
    editModel: "Modifica modello",
    editModelDescription: "Usa questo modulo per modificare le informazioni del modello",
    code: "Codice",
    extraSize: "Extra size",
    destinationCountry: "Paese di destinazione",
    revision: "Revisione",
    lastUpdate: "Ultimo aggiornamento",
    editedBy: "Modificato da",
    yes: "Si",
    no: "No",
    notes: "Appunti",
    makeACopy: "Crea una copia",
    associateVersion: "Associa versione",
    pleaseSpecifyVersion: "Per favore specifica la versione",
    versionAlreadyAssociated: "Versione già associata",
    areYouSureToRemoveVersion: "Sei sicuro di voler rimuovere la versione '{0}'?",
    duplicate: "Duplica",
    edit: "Modifica",
    pleaseSaveTheModel: "Per favore salva il modello per continuare",
    configurables: "Configurabili",
    configurablesListDescription: "Lista delle versioni associate ai modelli. Usa il registro dei modelli per creare nuove associazioni",
    nameOfConfigurable: "Nome del configurabile",
    addComponent: "Aggiungi componente",
    editRole: "Modifica ruolo",
    editRoleDescription: "Usa un ruolo per gestire cosa può fare un utente nel sistema",
    unableToExcludeDefaultArticle: "Incapace di escludere un articolo contrassegnato come predefinito",
    addArticleToComponent: "Aggiungi articolo al componente {0}",
    selectByArticle: "Selezionare dall'articolo",
    removeThisComponent: "Rimuovi questo componente",
    addArticle: "Aggiungi articolo",
    confirmRemoveConfigurableComponent: "Desideri rimuovere {0}?",
    editConfigurable: "Modifica configurabile",
    editConfigurableDescription: "Un configurabile è l'oggetto base per la personalizzazione del divano. Usa quest'area per progettare un modello-versione in tutte le sue parti",
    noArticlesSelected: "Nessun artivolo selezionato per il componente {0}",
    pleaseSelectDefaultArticleForComponent: "Per favore seleziona l'articolo di default per il componente {0}",
    invalidDefaultArticleSelectedForComponent: "L'articolo di default invalido selezionato per il componente {0}",
    accessories: "Accessori",
    accessoriesListDescription: "Lista accessori",
    editAccessory: "Modifica accessori",
    editAccessoryDescription: "Usa questo modulo per modificare le informationi dell'accessorio",
    nameOfAccessory: "Nome dell'accessorio",
    unitOfMeasurements: "Unità di misura",
    unitOfMeasurementsListDescription: "Lista della unità di misura",
    shortName: "Nome breve",
    conversionFactor: "Fattore di conversione",
    status: "Stato",
    quantity: "Quantità",
    remove: "Rimuovi",
    unitOfMeasurement: "Unità di misura",
    parts: "Parti",
    partsListDescription: "Rappresenta una parte rivestibile di un divano",
    editPart: "Modifica parte",
    editPartDescription: "Usa questo modulo per modificare le informazioni della parte",
    nameOfPart: "Nome della parte",
    covers: "Rivestimenti",
    addPart: "Aggiungi parte",
    type: "Tipo",
    coverTypes: "Tipi di rivestimento",
    coverTypesListDescription: "Tipi di rivestimenti usati per rivestire il divano",
    nameOfCoverType: "Nome del tipo di rivestimento",
    editCoverType: "Modifica il tipo di rivestimento",
    editCoverTypeDescription: "Usa questo modulo per modificare il tipo di informazioni del rivestimento",
    colors: "Colori",
    colorsListDescription: "Lista dei colori utilizzati per i tuoi sistemi",
    nameOfColor: "Nome del colore",
    editColor: "Modifica colore",
    editColorDescription: "Usa questo modulo per modificare le informazioni del colore",
    removeThisPart: "Rimuovi questa parte",
    coverOptions: "Opzioni del rivestimento",
    addCoverOption: "Aggiungi opzione del rivestimento",
    removeThisCoverOption: "Rimuovi questa opzione del rivestimento"
}, _defineProperty(_strings$it, "noArticlesSelected", "Nessun articolo selezionato"), _defineProperty(_strings$it, "analogousColorArticles", "Articoli analoghi"), _defineProperty(_strings$it, "complementaryColorArticles", "Articoli complementari"), _defineProperty(_strings$it, "addComplementaryArticleToCoverOption", "Aggiungi articoli complementari per l'opzione del rivestimento {0}"), _defineProperty(_strings$it, "addAnalogousArticleToCoverOption", "Aggiungi articoli analoghi per l'opzione del rivestimento {0}"), _defineProperty(_strings$it, "coverType", "Tipo di rivestimento"), _defineProperty(_strings$it, "color", "Colore"), _defineProperty(_strings$it, "characteristicsDisabledForCoverOptions", "Caratteristiche disabilitate per le opzioni del rivestimento"), _defineProperty(_strings$it, "compositions", "Composizioni"), _defineProperty(_strings$it, "customers", "Clienti"), _defineProperty(_strings$it, "customersListDescription", "Creare clienti del sistema"), _defineProperty(_strings$it, "companyName", "Nome dell'Azienda"), _defineProperty(_strings$it, "paymentCode", "Codice di pagamento"), _defineProperty(_strings$it, "zipCode", "CAP"), _defineProperty(_strings$it, "fiscalCode", "Codice fiscale"), _defineProperty(_strings$it, "vatCode", "I.V.A."), _defineProperty(_strings$it, "componentsAccessoriesCovers", "Componenti dei rivestimenti degli accessori"), _defineProperty(_strings$it, "removeThisPhase", "Rimuovi questa fase"), _defineProperty(_strings$it, "phases", "Fasi"), _defineProperty(_strings$it, "addPhase", "Aggiungi fase"), _defineProperty(_strings$it, "addComponentToPhase", "Aggiungi componente alla fase"), _defineProperty(_strings$it, "workingTime", "Tempo di lavoro"), _defineProperty(_strings$it, "address", "Indirizzo"), _defineProperty(_strings$it, "city", "Città"), _defineProperty(_strings$it, "phasesListDescription", "Lista delle descrizioni della fase"), _defineProperty(_strings$it, "defaultTime", "Tempo predefinito"), _defineProperty(_strings$it, "editPhase", "Modifica fase"), _defineProperty(_strings$it, "editPhaseDescription", "Modifica la descrizione della fase"), _defineProperty(_strings$it, "nameOfPhase", "Nome della fase"), _defineProperty(_strings$it, "production", "Produzione"), _defineProperty(_strings$it, "customer", "Cliente"), _defineProperty(_strings$it, "coverings", "Rivestimenti"), _defineProperty(_strings$it, "allCoverings", "Tutti i rivestimenti"), _defineProperty(_strings$it, "allAccessories", "Tutti gli accessori"), _defineProperty(_strings$it, "confirmRemoveConfigurablePhase", "Conferma la rimozione della fase configurabile"), _defineProperty(_strings$it, "coverOptionColorConfiguration", "Configurazione i colori dell'opzione rivestimento"), _defineProperty(_strings$it, "addComplementaryArticleForColor", "Aggiungi articolo a contrasto a {0}"), _defineProperty(_strings$it, "addAnalogousArticleForColor", "Aggiungi articolo a {0}"), _defineProperty(_strings$it, "usersList", "Lista utenti"), _defineProperty(_strings$it, "rolesList", "Lista ruoli"), _strings$it);

function setLanguage(language_) {
    language = language_;
}

function getLanguage() {
    return language;
}

function M(key) {
    if (strings[language] && strings[language][key]) {
        return strings[language][key];
    } else {
        logger.w("String not found for language " + language + ":", key);
        return key;
    }
}
});
define('utils/ajex.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.completed = completed;
exports.failed = failed;
exports.createAsyncAction = createAsyncAction;
exports.discriminate = discriminate;
exports.discriminated = discriminated;

var _underscore = require("../libs/underscore");

var _ = _interopRequireWildcard(_underscore);

var _aj = require("../aj");

var aj = _interopRequireWildcard(_aj);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function completed(action) {
    return action + "_COMPLETE";
}

function failed(action) {
    return action + "_FAIL";
}

function createAsyncAction(type, action) {
    var normal = aj.createAction(type, action);
    normal.complete = aj.createAction(completed(type), function (data) {
        aj.dispatch(_.assign({ type: completed(type), error: false }, data));
    });
    normal.fail = aj.createAction(failed(type), function (data) {
        aj.dispatch(_.assign({ type: failed(type), error: true }, data));
    });
    return normal;
}

function discriminate(state, discriminator, newValues) {
    var ds = state[discriminator] = state[discriminator] || {};
    _.assign(ds, newValues);
    return state;
}

function discriminated(state, discriminator) {
    return state[discriminator] || {};
}
});
define('utils/datasource.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.DataSource = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.fixed = fixed;
exports.promised = promised;
exports.create = create;
exports.fromEnum = fromEnum;

var _events = require("../aj/events");

var _underscore = require("../libs/underscore");

var _ = _interopRequireWildcard(_underscore);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function normalizeData(data) {
	var result = null;
	if (data) {
		if (_.isArray(data)) {
			result = { rows: data, totalRows: data.length };
		} else if (_.isObject(data)) {
			result = data;
		}
	}
	return result;
}

var DataSource = exports.DataSource = function (_Observable) {
	_inherits(DataSource, _Observable);

	function DataSource(initialData) {
		_classCallCheck(this, DataSource);

		var _this = _possibleConstructorReturn(this, (DataSource.__proto__ || Object.getPrototypeOf(DataSource)).call(this));

		_this.data = normalizeData(initialData);
		return _this;
	}

	_createClass(DataSource, [{
		key: "notifyChanged",
		value: function notifyChanged() {
			this.invoke("change", this.data);
		}
	}, {
		key: "setData",
		value: function setData(data) {
			this.data = normalizeData(data);
			this.notifyChanged();
		}
	}]);

	return DataSource;
}(_events.Observable);

function fixed(data) {
	return new DataSource(data);
}

function promised(promiseFn) {
	var dataSource = new DataSource();

	new Promise(promiseFn).then(function (data) {
		dataSource.setData(data);
	}).catch(function (r) {
		logger.e(r);
	});

	return dataSource;
}

function create() {
	return new DataSource();
}

function fromEnum(Enum) {
	return new DataSource(_.map(_.keys(Enum), function (k) {
		return { label: k, value: Enum[k] };
	}));
}
});
define('utils/lang.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.format = format;
exports.optional = optional;
exports.parseBoolean = parseBoolean;
exports.walk = walk;
exports.use = use;
exports.flatten = flatten;
exports.uuid = uuid;
exports.updatedList = updatedList;

var _underscore = require("../libs/underscore");

var _ = _interopRequireWildcard(_underscore);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Format a string message (es: format("My name is {0}", "Bruno") returns "My name is Brnuo")
 * @param fmt
 * @param values
 * @returns {void|XML|string|*}
 */
function format(fmt) {
    for (var _len = arguments.length, values = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        values[_key - 1] = arguments[_key];
    }

    var args = values;
    return fmt.replace(/{(\d+)}/g, function (match, number) {
        return typeof args[number] != 'undefined' ? args[number] : match;
    });
}

/**
 * Gets checked value (check for null or undefined) and gets the default value in case of fail
 * @param val Value of function to check
 * @param def Default value or function
 */
function optional(val, def) {
    var v = void 0;

    try {
        v = _.isFunction(val) ? val() : val;
    } catch (e) {}

    if (v == undefined || v == null) {
        v = _.isFunction(def) ? def() : def;
    }

    return v;
}

/**
 * Gets a boolean value casting from val if is not null or undefined
 */
function parseBoolean(val) {
    if (val == null) {
        return null;
    }
    if (val == undefined) {
        return undefined;
    }

    return val == true || parseInt(val) > 0 || val == "true";
}

/**
 * Walk in a composite object
 * @param tree
 * @param property
 * @param action
 */
function walk(tree) {
    var property = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "children";
    var action = arguments[2];

    if (_.isArray(tree)) {
        _.each(tree, function (i) {
            action(i);

            if (_.isArray(i[property])) {
                _.each(i[property], function (t) {
                    return walk(t, property, action);
                });
            }
        });
    } else {
        action(tree);

        if (_.isArray(tree[property])) {
            _.each(tree[property], function (t) {
                return walk(t, property, action);
            });
        }
    }

    return tree;
}

var ObjectUser = function () {
    function ObjectUser(o) {
        _classCallCheck(this, ObjectUser);

        this.o = o;
    }

    _createClass(ObjectUser, [{
        key: "run",
        value: function run(fn) {
            fn(this.o);
            return this.o;
        }
    }, {
        key: "get",
        value: function get() {
            return this.o;
        }
    }]);

    return ObjectUser;
}();

/**
 * A strategy to do something with an object and get it
 */


function use(o) {
    return new ObjectUser(o);
}

/**
 * Make a flatten object from plain object
 */

function flatten(target) {
    if (!_.isObject(target)) {
        return {};
    }

    var delimiter = ".";
    var output = {};

    function step(obj, prev, currentKey) {
        var keys = _.keys(obj);
        _.each(keys, function (k) {
            var newKey = prev ? currentKey + delimiter + k : k;
            if (_.isArray(obj)) {
                newKey = currentKey + "[" + k + "]";
            }

            var value = obj[k];
            if (value != null && value != undefined) {
                if (_.isObject(value)) {
                    step(value, obj, newKey);
                } else {
                    output[newKey] = value;
                }
            }
        });
    }

    step(target, null, "");

    return output;
}

/**
 * Generates unique identifier
 * @returns {string}
 */
function uuid() {
    var d = new Date().getTime();
    if (window.performance && typeof window.performance.now === "function") {
        d += performance.now(); //use high-precision timer if available
    }
    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
        var r = (d + Math.random() * 16) % 16 | 0;
        d = Math.floor(d / 16);
        return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);
    });
    return uuid;
}

/**
 * Updates list element found with predicate and return an updated copy of the list
 * @param list
 * @param predicate
 * @param updater
 */
function updatedList(list, predicate, updater) {
    var addIfNotFound = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

    if (_.isArray(list) && _.isFunction(predicate) && _.isFunction(updater)) {
        var result = new Array(list.length);
        var found = false;
        for (var i = 0; i < list.length; i++) {
            var v = list[i];
            if (predicate(v)) {
                result[i] = _.assign(v, updater(v));
                found = true;
            } else {
                result[i] = v;
            }
        }

        if (addIfNotFound && !found) {
            result.push(updater(null));
        }

        return result;
    } else {
        logger.w("Bad parameters in updater. Returning an empty list");
        return [];
    }
}
});
define('utils/notificationCenter.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.addObserver = addObserver;
exports.removeObserver = removeObserver;
exports.invoke = invoke;

var _events = require("../aj/events");

var instance = new _events.Observable();

function addObserver(evt, handler) {
    logger.i("Added observer for event:", evt);
    return instance.on(evt, handler);
}

function removeObserver(evt, handler) {
    logger.i("Removed observer for event:", evt);
    instance.off(evt, handler);
}

function invoke(evt) {
    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

    logger.i("Invoking observers for event:", evt);
    instance.invoke(evt, data);
}
});
define('web/components/common.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.EditableText = exports.ActionsMatcher = exports.FloatingButton = exports.Card = exports.HeaderBlock = exports.Actions = exports.ActionButton = exports.DropdownActionButton = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _lang = require("../../utils/lang");

var _keyboard = require("../utils/keyboard");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DropdownActionButton = exports.DropdownActionButton = function (_React$Component) {
    _inherits(DropdownActionButton, _React$Component);

    function DropdownActionButton() {
        _classCallCheck(this, DropdownActionButton);

        return _possibleConstructorReturn(this, (DropdownActionButton.__proto__ || Object.getPrototypeOf(DropdownActionButton)).apply(this, arguments));
    }

    _createClass(DropdownActionButton, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var button = this.refs.button;
            $(button).dropdown();
        }
    }, {
        key: "onItemClick",
        value: function onItemClick(item) {
            if (_.isFunction(item.action)) {
                item.action.apply(this, this.props.arguments);
            }
        }
    }, {
        key: "render",
        value: function render() {
            var _this2 = this;

            var index = 0;
            var dropdownItems = _.map(this.props.action.items, function (i) {
                return React.createElement(
                    "li",
                    { key: index++ },
                    React.createElement(
                        "a",
                        { role: "menuitem", tabIndex: "-1", href: "javascript:;", onClick: _this2.onItemClick.bind(_this2, i) },
                        !_.isEmpty(i.icon) && React.createElement("i", { className: i.icon }),
                        i.label
                    )
                );
            });

            var dropdownMenuClass = "dropdown-menu pull-left";
            var align = (0, _lang.optional)(this.props.action.align, "left");
            if (align === "right") {
                dropdownMenuClass = "dropdown-menu pull-right";
            }

            return React.createElement(
                "div",
                { className: "dropdown" },
                React.createElement(
                    "a",
                    {
                        ref: "button",
                        href: "javascript:;",
                        className: this.props.className,
                        "data-toggle": "dropdown",
                        "data-placement": "bottom",
                        title: this.props.action.tooltip },
                    React.createElement("i", { className: this.props.action.icon })
                ),
                React.createElement(
                    "ul",
                    { className: dropdownMenuClass },
                    dropdownItems
                )
            );
        }
    }]);

    return DropdownActionButton;
}(React.Component);

var ActionButton = exports.ActionButton = function (_React$Component2) {
    _inherits(ActionButton, _React$Component2);

    function ActionButton() {
        _classCallCheck(this, ActionButton);

        return _possibleConstructorReturn(this, (ActionButton.__proto__ || Object.getPrototypeOf(ActionButton)).apply(this, arguments));
    }

    _createClass(ActionButton, [{
        key: "onClick",
        value: function onClick() {
            var action = this.props.action;
            if (_.isFunction(action.action)) {
                action.action.apply(this, this.props.arguments);
            }
        }
    }, {
        key: "componentDidMount",
        value: function componentDidMount() {
            $(this.refs.button).tooltip({ trigger: "hover" });
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "a",
                {
                    ref: "button",
                    href: "javascript:;",
                    className: this.props.className,
                    "data-toggle": "tooltip",
                    "data-placement": "bottom",
                    title: this.props.action.tooltip,
                    onClick: this.onClick.bind(this) },
                React.createElement("i", { className: this.props.action.icon })
            );
        }
    }]);

    return ActionButton;
}(React.Component);

var Actions = exports.Actions = function (_React$Component3) {
    _inherits(Actions, _React$Component3);

    function Actions() {
        _classCallCheck(this, Actions);

        return _possibleConstructorReturn(this, (Actions.__proto__ || Object.getPrototypeOf(Actions)).apply(this, arguments));
    }

    _createClass(Actions, [{
        key: "render",
        value: function render() {
            var actionKey = 1;

            return !_.isEmpty(this.props.actions) && React.createElement(
                "ul",
                { className: "actions" },
                this.props.actions.map(function (a) {
                    return React.createElement(
                        "li",
                        { key: actionKey++ },
                        React.createElement(Actions.getButtonClass(a), { action: a })
                    );
                })
            );
        }
    }]);

    return Actions;
}(React.Component);

Actions.getButtonClass = function (action) {
    switch (action.type) {
        case "dropdown":
            return DropdownActionButton;
        default:
            return ActionButton;
    }
};

var HeaderBlock = exports.HeaderBlock = function (_React$Component4) {
    _inherits(HeaderBlock, _React$Component4);

    function HeaderBlock() {
        _classCallCheck(this, HeaderBlock);

        return _possibleConstructorReturn(this, (HeaderBlock.__proto__ || Object.getPrototypeOf(HeaderBlock)).apply(this, arguments));
    }

    _createClass(HeaderBlock, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "block-header" },
                (!_.isEmpty(this.props.title) || !_.isEmpty(this.props.actions)) && React.createElement(
                    "h2",
                    null,
                    this.props.title,
                    !_.isEmpty(this.props.subtitle) && React.createElement(
                        "small",
                        null,
                        this.props.subtitle
                    )
                ),
                React.createElement(Actions, { actions: this.props.actions })
            );
        }
    }]);

    return HeaderBlock;
}(React.Component);

var Card = exports.Card = function (_React$Component5) {
    _inherits(Card, _React$Component5);

    function Card() {
        _classCallCheck(this, Card);

        return _possibleConstructorReturn(this, (Card.__proto__ || Object.getPrototypeOf(Card)).apply(this, arguments));
    }

    _createClass(Card, [{
        key: "render",
        value: function render() {
            var actionKey = 1;
            var cardClass = (0, _lang.optional)(this.props.className, "card");
            var bodyClass = "card-body";
            if (this.props.padding) {
                bodyClass += " card-padding";
            }
            var headerClass = "card-header";
            if (this.props.inverseHeader) {
                headerClass += " card-header-inverse";
            }
            return React.createElement(
                "div",
                { className: cardClass },
                !_.isEmpty(this.props.title) || !_.isEmpty(this.props.actions) ? React.createElement(
                    "div",
                    { className: headerClass },
                    React.createElement(
                        "h2",
                        null,
                        this.props.title,
                        !_.isEmpty(this.props.subtitle) ? React.createElement(
                            "small",
                            null,
                            this.props.subtitle
                        ) : null
                    ),
                    React.createElement(Actions, { actions: this.props.actions })
                ) : null,
                React.createElement(
                    "div",
                    { className: bodyClass },
                    this.props.children
                )
            );
        }
    }]);

    return Card;
}(React.Component);

var FloatingButton = exports.FloatingButton = function (_React$Component6) {
    _inherits(FloatingButton, _React$Component6);

    function FloatingButton() {
        _classCallCheck(this, FloatingButton);

        return _possibleConstructorReturn(this, (FloatingButton.__proto__ || Object.getPrototypeOf(FloatingButton)).apply(this, arguments));
    }

    _createClass(FloatingButton, [{
        key: "onClick",
        value: function onClick() {
            if (_.isFunction(this.props.onClick)) {
                this.props.onClick();
            }
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "button",
                { className: "btn btn-float btn-danger m-btn waves-effect waves-circle waves-float", onClick: this.onClick.bind(this) },
                React.createElement("i", { className: this.props.icon })
            );
        }
    }]);

    return FloatingButton;
}(React.Component);

var ActionsMatcher = exports.ActionsMatcher = function () {
    function ActionsMatcher(defaultActions) {
        _classCallCheck(this, ActionsMatcher);

        this.defaultActions = defaultActions;
    }

    _createClass(ActionsMatcher, [{
        key: "match",
        value: function match(userActions) {
            var _this8 = this;

            var actions = [];

            if (userActions) {
                if (!_.isArray(userActions)) {
                    throw new Error("grid.actions must be an array but is " + userActions);
                }

                _.each(userActions, function (a) {
                    if (_.isObject(a)) {
                        actions.push(a);
                    } else if (typeof a === "string") {
                        var defaultAction = _.find(_this8.defaultActions, function (d) {
                            return d.id === a;
                        });
                        if (!_.isEmpty(defaultAction)) {
                            actions.push(defaultAction);
                        } else {
                            logger.w("Default action not found: " + a);
                        }
                    }
                });
            } else {
                actions = this.defaultActions;
            }

            return actions;
        }
    }]);

    return ActionsMatcher;
}();

var EditableText = exports.EditableText = function (_React$Component7) {
    _inherits(EditableText, _React$Component7);

    function EditableText(props) {
        _classCallCheck(this, EditableText);

        var _this9 = _possibleConstructorReturn(this, (EditableText.__proto__ || Object.getPrototypeOf(EditableText)).call(this, props));

        _this9.state = {
            editing: _.isEmpty(props.value),
            value: props.value
        };
        return _this9;
    }

    _createClass(EditableText, [{
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(newProps) {
            this.setState({
                editing: _.isEmpty(newProps.value),
                value: newProps.value
            });
        }
    }, {
        key: "onBlur",
        value: function onBlur() {
            this.setState({ editing: false, value: this.state.lastValue });
        }
    }, {
        key: "onValueChange",
        value: function onValueChange(e) {
            e.preventDefault();
            e.stopPropagation();

            this.setState(_.assign(this.state, { editing: true, value: e.target.value }));
        }
    }, {
        key: "onKeyDown",
        value: function onKeyDown(e) {
            if ((0, _keyboard.isEnter)(e.which)) {
                e.preventDefault();
                e.stopPropagation();

                this.setState(_.assign(this.state, { editing: false, lastValue: this.state.value }));

                if (_.isFunction(this.props.onChange)) {
                    this.props.onChange(this.state.value);
                }
            }
        }
    }, {
        key: "edit",
        value: function edit() {
            this.setState(_.assign(this.state, { editing: true, lastValue: this.state.value }));
        }
    }, {
        key: "render",
        value: function render() {
            var className = this.props.className;
            return this.state.editing || _.isEmpty(this.state.value) ? React.createElement(
                "div",
                { className: "fg-line editable-text " + (0, _lang.optional)(className, "") },
                React.createElement("input", {
                    ref: "name",
                    type: "text",
                    className: "form-control",
                    onKeyDown: this.onKeyDown.bind(this),
                    onChange: this.onValueChange.bind(this),
                    value: (0, _lang.optional)(this.state.value, ""),
                    placeholder: this.props.placeholder,
                    autoFocus: "autoFocus",
                    onBlur: this.onBlur.bind(this) })
            ) : React.createElement(
                "span",
                { className: (0, _lang.optional)(className, ""), onClick: this.edit.bind(this) },
                this.state.value
            );
        }
    }]);

    return EditableText;
}(React.Component);
});
define('web/components/containers.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.EntitiesSelectContainer = exports.ValuesSelectContainer = exports.ValuesLookupContainer = exports.EntitiesLookupContainer = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _datasource = require("../../utils/datasource");

var datasource = _interopRequireWildcard(_datasource);

var _stores = require("../../stores");

var _actions = require("../../actions");

var _ajex = require("../../../utils/ajex");

var _query = require("../../api/query");

var query = _interopRequireWildcard(_query);

var _forms = require("./forms");

var _lang = require("../../utils/lang");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LOOKUP_DISCRIMINATOR = 1;
function nextLookupDiscriminator() {
    return "lookup_" + LOOKUP_DISCRIMINATOR++;
}

var EntitiesLookupContainer = exports.EntitiesLookupContainer = function (_Control) {
    _inherits(EntitiesLookupContainer, _Control);

    function EntitiesLookupContainer(props) {
        _classCallCheck(this, EntitiesLookupContainer);

        var _this = _possibleConstructorReturn(this, (EntitiesLookupContainer.__proto__ || Object.getPrototypeOf(EntitiesLookupContainer)).call(this, props));

        _this.discriminator = props.id;
        if (_.isEmpty(_this.discriminator)) {
            throw new Error("Please specify an id of this lookup");
        }

        _this.query = query.create();
        _this.query.setPage(1);
        _this.query.setRowsPerPage(20);
        _this.__queryOnChange = function () {
            (0, _actions.getLookupResult)({ discriminator: _this.discriminator, entity: _this.props.entity, query: _this.query });
        };

        _this.datasource = datasource.create();

        _this.state = { result: {} };
        return _this;
    }

    _createClass(EntitiesLookupContainer, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var _this2 = this;

            _stores.LookupStore.subscribe(this, function (state) {
                _this2.datasource.setData((0, _ajex.discriminated)(state, _this2.discriminator).result);
            });

            this.query.on("change", this.__queryOnChange);
        }
    }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            _stores.LookupStore.unsubscribe(this);

            this.query.off("change", this.__queryOnChange);

            (0, _actions.freeLookup)({ discriminator: this.discriminator });
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(_forms.Lookup, _.assign({}, this.props, { query: this.query, datasource: this.datasource }));
        }
    }]);

    return EntitiesLookupContainer;
}(_forms.Control);

var ValuesLookupContainer = exports.ValuesLookupContainer = function (_Control2) {
    _inherits(ValuesLookupContainer, _Control2);

    function ValuesLookupContainer(props) {
        _classCallCheck(this, ValuesLookupContainer);

        var _this3 = _possibleConstructorReturn(this, (ValuesLookupContainer.__proto__ || Object.getPrototypeOf(ValuesLookupContainer)).call(this, props));

        _this3.discriminator = props.id;
        if (_.isEmpty(_this3.discriminator)) {
            throw new Error("Please specify an id for lookup");
        }

        if (_.isEmpty(_this3.props.collection)) {
            throw new Error("Please specify a collection for lookup");
        }

        _this3.__queryOnChange = function () {
            (0, _actions.getLookupValues)({ discriminator: _this3.discriminator, collection: _this3.props.collection, keyword: _this3.query.keyword });
        };

        _this3.query = query.create();
        _this3.datasource = datasource.create();

        _this3.state = { values: {} };
        return _this3;
    }

    _createClass(ValuesLookupContainer, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var _this4 = this;

            _stores.LookupStore.subscribe(this, function (state) {
                _this4.datasource.setData((0, _ajex.discriminated)(state, _this4.discriminator).values);
            });

            this.query.on("change", this.__queryOnChange);
        }
    }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            _stores.LookupStore.unsubscribe(this);

            this.query.off("change", this.__queryOnChange);

            (0, _actions.freeLookup)({ discriminator: this.discriminator });
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(_forms.Lookup, _.assign({}, this.props, { query: this.query, datasource: this.datasource }));
        }
    }]);

    return ValuesLookupContainer;
}(_forms.Control);

var ValuesSelectContainer = exports.ValuesSelectContainer = function (_Control3) {
    _inherits(ValuesSelectContainer, _Control3);

    function ValuesSelectContainer(props) {
        _classCallCheck(this, ValuesSelectContainer);

        var _this5 = _possibleConstructorReturn(this, (ValuesSelectContainer.__proto__ || Object.getPrototypeOf(ValuesSelectContainer)).call(this, props));

        _this5.discriminator = props.id;

        if (_.isEmpty(_this5.discriminator)) {
            throw new Error("Please specify an id for select");
        }

        if (_.isEmpty(_this5.props.collection)) {
            throw new Error("Please specify a collection for select");
        }

        _this5.datasource = datasource.create();
        return _this5;
    }

    _createClass(ValuesSelectContainer, [{
        key: "reload",
        value: function reload() {
            (0, _actions.getSelectValues)({ discriminator: this.discriminator, collection: this.props.collection, params: this.getParams() });
        }
    }, {
        key: "componentDidMount",
        value: function componentDidMount() {
            var _this6 = this;

            _stores.SelectStore.subscribe(this, function (state) {
                _this6.datasource.setData((0, _ajex.discriminated)(state, _this6.discriminator).values);
            });

            this.reload();
        }
    }, {
        key: "getParams",
        value: function getParams() {
            return (0, _lang.optional)(this.props.params, {});
        }
    }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            _stores.SelectStore.unsubscribe(this);

            (0, _actions.freeSelect)({ discriminator: this.discriminator });
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(_forms.Select, _.assign({}, this.props, { datasource: this.datasource }));
        }
    }]);

    return ValuesSelectContainer;
}(_forms.Control);

var EntitiesSelectContainer = exports.EntitiesSelectContainer = function (_Control4) {
    _inherits(EntitiesSelectContainer, _Control4);

    function EntitiesSelectContainer(props) {
        _classCallCheck(this, EntitiesSelectContainer);

        var _this7 = _possibleConstructorReturn(this, (EntitiesSelectContainer.__proto__ || Object.getPrototypeOf(EntitiesSelectContainer)).call(this, props));

        if (_.isEmpty(_this7.props.entity)) {
            throw new Error("Please specify an entity for select");
        }

        _this7.discriminator = "entity_select_" + _this7.props.entity;
        _this7.datasource = datasource.create();
        _this7.query = null;
        return _this7;
    }

    _createClass(EntitiesSelectContainer, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var _this8 = this;

            _stores.SelectStore.subscribe(this, function (state) {
                _this8.datasource.setData((0, _ajex.discriminated)(state, _this8.discriminator).values);
            });

            var model = this.props.model;

            this.query = null;
            if (this.props.query) {
                if (_.isFunction(this.props.query)) {
                    this.query = this.props.query(model);
                } else {
                    this.query = this.props.query;
                }
            }

            if (!_.isEmpty(this.query)) {
                this.__onQueryChange = function () {
                    (0, _actions.getSelectEntities)({ discriminator: _this8.discriminator, entity: _this8.props.entity, query: _this8.query });
                };

                this.query.on("change", this.__onQueryChange);
            }

            (0, _actions.getSelectEntities)({ discriminator: this.discriminator, entity: this.props.entity, query: this.query });
        }
    }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            _stores.SelectStore.unsubscribe(this);
            if (this.query) {
                this.query.off("change", this.__onQueryChange);
            }
            (0, _actions.freeSelect)({ discriminator: this.discriminator });
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(_forms.Select, _.assign({}, this.props, { datasource: this.datasource }));
        }
    }]);

    return EntitiesSelectContainer;
}(_forms.Control);
});
define('web/components/dialogs.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Dialog = exports.DIALOG_RESULT_CANCEL = exports.DIALOG_RESULT_OK = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _lang = require("../../utils/lang");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

"use strict";

var DIALOG_RESULT_OK = exports.DIALOG_RESULT_OK = 0;
var DIALOG_RESULT_CANCEL = exports.DIALOG_RESULT_CANCEL = 1;

var Dialog = exports.Dialog = function (_React$Component) {
    _inherits(Dialog, _React$Component);

    function Dialog(props) {
        _classCallCheck(this, Dialog);

        var _this = _possibleConstructorReturn(this, (Dialog.__proto__ || Object.getPrototypeOf(Dialog)).call(this, props));

        _this.opened = false;
        _this.dialogResult = DIALOG_RESULT_CANCEL;
        return _this;
    }

    _createClass(Dialog, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var _this2 = this;

            var me = ReactDOM.findDOMNode(this);
            $(me).modal({ show: false }).on("show.bs.modal", function () {
                return _this2.opened = true;
            }).on("hide.bs.modal", function () {
                _this2.opened = false;
                if (_.isFunction(_this2.props.onClose)) {
                    _this2.props.onClose(_this2.dialogResult);
                }
            });

            if (!this.props.hidden) {
                if (!this.opened) {
                    this.opened = true;
                    this.show();
                }
            } else {
                if (this.opened) {
                    this.opened = false;
                    this.hide();
                }
            }
        }
    }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate() {
            if (!this.props.hidden) {
                if (!this.opened) {
                    this.opened = true;
                    this.show();
                }
            } else {
                if (this.opened) {
                    this.opened = false;
                    this.hide();
                }
            }
        }
    }, {
        key: "show",
        value: function show() {
            var me = ReactDOM.findDOMNode(this);
            $(me).modal("show");
        }
    }, {
        key: "hide",
        value: function hide() {
            var me = ReactDOM.findDOMNode(this);
            $(me).modal("hide");
        }
    }, {
        key: "runButtonAction",
        value: function runButtonAction(button) {
            this.dialogResult = (0, _lang.optional)(button.dialogResult, DIALOG_RESULT_CANCEL);
            button.action(this);
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            var buttons = (0, _lang.optional)(this.props.buttons, []).map(function (b) {
                return React.createElement(
                    "button",
                    { key: b.text, type: "button", className: "btn btn-link waves-effect", onClick: _this3.runButtonAction.bind(_this3, b) },
                    b.text
                );
            });
            var style = {
                //display: this.props.hidden ? "none" : "block"
            };

            var bodyStyle = {
                padding: this.props.noPadding ? "0px" : undefined
            };

            var modalDialogClassName = "modal-dialog";
            modalDialogClassName += (0, _lang.parseBoolean)(this.props.large) ? " modal-lg" : "";

            return React.createElement(
                "div",
                { className: "modal fade", role: "dialog", tabIndex: "-1", style: style },
                React.createElement(
                    "div",
                    { className: modalDialogClassName },
                    React.createElement(
                        "div",
                        { className: "modal-content" },
                        React.createElement(
                            "div",
                            { className: "modal-header" },
                            React.createElement(
                                "h4",
                                { className: "modal-title" },
                                this.props.title
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "modal-body", style: bodyStyle },
                            this.props.children
                        ),
                        React.createElement(
                            "div",
                            { className: "modal-footer" },
                            buttons
                        )
                    )
                )
            );
        }
    }]);

    return Dialog;
}(React.Component);
});
define('web/components/forms.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Image = exports.File = exports.Lookup = exports.Select = exports.Number = exports.Switch = exports.YesNo = exports.DateTime = exports.Mail = exports.Spacer = exports.Color = exports.ReadOnlyText = exports.TextArea = exports.Text = exports.Control = exports.InlineField = exports.Field = exports.Form = exports.FormBody = exports.FormSubmitEvent = exports.Tabs = exports.AreaNoCard = exports.Area = exports.Label = exports.Model = exports.VALIDATION_ERROR = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _strings = require("../../strings");

var _strings2 = _interopRequireDefault(_strings);

var _common = require("./common");

var _lang = require("../../../utils/lang");

var _events = require("../../../aj/events");

var _grids = require("./grids");

var _query = require("../../api/query");

var query = _interopRequireWildcard(_query);

var _keyboard = require("../utils/keyboard");

var _inputfile = require("../utils/inputfile");

var inputfile = _interopRequireWildcard(_inputfile);

var _datasource = require("../../utils/datasource");

var datasource = _interopRequireWildcard(_datasource);

var _lang2 = require("../../utils/lang");

var _dialogs = require("./dialogs");

var _moment = require("../../libs/moment");

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var VALIDATION_ERROR = exports.VALIDATION_ERROR = {};

var Model = exports.Model = function (_Observable) {
    _inherits(Model, _Observable);

    function Model(form) {
        _classCallCheck(this, Model);

        var _this = _possibleConstructorReturn(this, (Model.__proto__ || Object.getPrototypeOf(Model)).call(this));

        _this.descriptor = null;
        _this.data = {};
        _this.validationResult = {};
        _this.initialized = false;
        _this.form = form;
        _this.changes = [];
        _this.changesTrackingDisabled = false;
        return _this;
    }

    _createClass(Model, [{
        key: "invalidatForm",
        value: function invalidatForm() {
            if (this.form) {
                this.form.forceUpdate();
            }
        }
    }, {
        key: "load",
        value: function load(data) {
            this.data = data ? data : {};
            if (!this.initialized && data != null) {
                this.invoke("load", this);
                this.initialized = true;
            }
        }
    }, {
        key: "findField",
        value: function findField(property) {
            if (this.descriptor == null) {
                throw new Error("Please specify a descriptor");
            }

            var Break = {};
            var field = null;
            try {
                if (!_.isEmpty(this.descriptor.areas)) {
                    this.descriptor.areas.forEach(function (a) {
                        if (!_.isEmpty(a.tabs)) {
                            a.tabs.forEach(function (t) {
                                if (!_.isEmpty(t.fields)) {
                                    t.fields.forEach(function (f) {
                                        if (f.property == property) {
                                            field = f;
                                            throw Break;
                                        }
                                    });
                                }
                                if (field != null) {
                                    throw Break;
                                }
                            });
                        }
                        if (field != null) {
                            return;
                        }
                        if (!_.isEmpty(a.fields)) {
                            a.fields.forEach(function (f) {
                                if (f.property == property) {
                                    field = f;
                                    throw Break;
                                }
                            });
                        }
                        if (field != null) {
                            throw Break;
                        }
                    });
                }

                if (field == null) {
                    if (!_.isEmpty(this.descriptor.tabs)) {
                        this.descriptor.tabs.forEach(function (t) {
                            if (!_.isEmpty(t.fields)) {
                                t.fields.forEach(function (f) {
                                    if (f.property == property) {
                                        field = f;
                                        throw Break;
                                    }
                                });
                            }
                            if (field != null) {
                                throw Break;
                            }
                        });
                    }
                }

                if (field == null) {
                    if (!_.isEmpty(this.descriptor.fields)) {
                        this.descriptor.fields.forEach(function (f) {
                            if (f.property == property) {
                                field = f;
                                throw Break;
                            }
                        });
                    }
                }
            } catch (e) {
                if (e !== Break) {
                    throw e;
                }
            }

            return field;
        }
    }, {
        key: "hasChanges",
        value: function hasChanges() {
            return this.changes.length > 0;
        }
    }, {
        key: "trackChanges",
        value: function trackChanges() {
            this.changesTrackingDisabled = false;
        }
    }, {
        key: "untrackChanges",
        value: function untrackChanges() {
            this.changesTrackingDisabled = true;
        }
    }, {
        key: "resetChanges",
        value: function resetChanges() {
            this.changes = [];
        }
    }, {
        key: "set",
        value: function set(property, value) {
            var initialValue = this.data[property];
            this.data[property] = value;

            if (!this.changesTrackingDisabled) {
                if (initialValue !== value) {
                    var change = _.find(this.changes, function (c) {
                        return c.property === property;
                    });
                    if (change) {
                        change.value = value;
                    } else {
                        this.changes.push({ property: property, initialValue: initialValue, value: value });
                    }
                }
            }

            this.invoke("property:change", property, value);
        }
    }, {
        key: "assign",
        value: function assign(property, value) {
            var actual = (0, _lang.optional)(this.get(property), {});
            this.set(property, _.assign(actual, value));
        }
    }, {
        key: "get",
        value: function get(property) {
            if (_.has(this.data, property)) {
                return this.data[property];
            } else {
                return null;
            }
        }
    }, {
        key: "validateField",
        value: function validateField(validationResult, field) {
            var value = this.data[field.property];
            try {
                if (_.isFunction(field.validator)) {
                    field.validator(value);
                }

                validationResult[field.property] = {
                    valid: true,
                    message: null
                };
            } catch (e) {
                validationResult[field.property] = {
                    valid: false,
                    message: e.message
                };
            }
        }
    }, {
        key: "sanitized",
        value: function sanitized() {
            var _this2 = this;

            var sanitized = {};

            _.each(_.keys(this.data), function (property) {
                var value = _this2.data[property];
                var field = _this2.findField(property);
                if (field) {
                    if (_.isFunction(field.sanitizer)) {
                        value = field.sanitizer(value);
                    }
                }
                sanitized[property] = value;
            });

            return sanitized;
        }
    }, {
        key: "validate",
        value: function validate() {
            var _this3 = this;

            this.validationResult = {};
            if (!_.isEmpty(this.descriptor.areas)) {
                this.descriptor.areas.forEach(function (a) {
                    if (!_.isEmpty(a.tabs)) {
                        a.tabs.forEach(function (t) {
                            if (!_.isEmpty(t.fields)) {
                                t.fields.forEach(function (f) {
                                    _this3.validateField(_this3.validationResult, f);
                                });
                            }
                        });
                    }
                    if (!_.isEmpty(a.fields)) {
                        a.fields.forEach(function (f) {
                            _this3.validateField(_this3.validationResult, f);
                        });
                    }
                });
            }

            if (!_.isEmpty(this.descriptor.tabs)) {
                this.descriptor.tabs.forEach(function (t) {
                    if (!_.isEmpty(t.fields)) {
                        t.fields.forEach(function (f) {
                            _this3.validateField(_this3.validationResult, f);
                        });
                    }
                });
            }

            if (!_.isEmpty(this.descriptor.fields)) {
                this.descriptor.fields.forEach(function (f) {
                    _this3.validateField(_this3.validationResult, f);
                });
            }

            var invalid = _.any(this.validationResult, function (v) {
                return !v.valid;
            });
            if (invalid) {
                throw VALIDATION_ERROR;
            }
        }
    }, {
        key: "resetValidation",
        value: function resetValidation() {
            this.validationResult = {};
        }
    }, {
        key: "setError",
        value: function setError(property, message) {
            this.validationResult[property] = {
                valid: false,
                message: message
            };
        }
    }, {
        key: "resetError",
        value: function resetError(property) {
            this.validationResult[property] = {
                valid: true
            };
        }
    }]);

    return Model;
}(_events.Observable);

var Label = exports.Label = function (_React$Component) {
    _inherits(Label, _React$Component);

    function Label() {
        _classCallCheck(this, Label);

        return _possibleConstructorReturn(this, (Label.__proto__ || Object.getPrototypeOf(Label)).apply(this, arguments));
    }

    _createClass(Label, [{
        key: "render",
        value: function render() {
            var field = this.props.field;
            var className = (0, _lang.optional)(this.props.className, "");

            return !_.isEmpty(field.label) && React.createElement(
                "label",
                { style: { width: "100%" }, htmlFor: field.property, className: className },
                field.label
            );
        }
    }]);

    return Label;
}(React.Component);

var Area = exports.Area = function (_React$Component2) {
    _inherits(Area, _React$Component2);

    function Area() {
        _classCallCheck(this, Area);

        return _possibleConstructorReturn(this, (Area.__proto__ || Object.getPrototypeOf(Area)).apply(this, arguments));
    }

    _createClass(Area, [{
        key: "isFieldVisible",
        value: function isFieldVisible(field) {
            var descriptor = this.props.descriptor;
            var model = this.props.model;

            if (_.isFunction(descriptor.visibility)) {
                return descriptor.visibility(field, model, descriptor);
            }

            return true;
        }
    }, {
        key: "getExtra",
        value: function getExtra() {
            return null;
        }
    }, {
        key: "render",
        value: function render() {
            var _this6 = this;

            var descriptor = this.props.descriptor;
            var area = this.props.area;
            var inline = (0, _lang.optional)(descriptor.inline, false);
            inline = (0, _lang.optional)(area.inline, inline);
            var defaultFieldCass = inline ? InlineField : Field;
            var tabs = !_.isEmpty(area.tabs) && React.createElement(Tabs, { tabs: area.tabs, model: this.props.model, descriptor: descriptor });
            var fields = !_.isEmpty(area.fields) && _.filter(area.fields, function (f) {
                return _this6.isFieldVisible(f);
            }).map(function (f) {
                return React.createElement((0, _lang.optional)(function () {
                    return f.component;
                }, function () {
                    return defaultFieldCass;
                }), { key: f.property, model: _this6.props.model, field: f });
            });

            return React.createElement(
                _common.Card,
                { padding: "true", title: area.title, subtitle: area.subtitle, actions: area.actions },
                tabs,
                React.createElement(
                    "div",
                    { className: "row" },
                    fields
                ),
                React.createElement("div", { className: "clearfix" }),
                this.getExtra()
            );
        }
    }]);

    return Area;
}(React.Component);

var AreaNoCard = exports.AreaNoCard = function (_React$Component3) {
    _inherits(AreaNoCard, _React$Component3);

    function AreaNoCard() {
        _classCallCheck(this, AreaNoCard);

        return _possibleConstructorReturn(this, (AreaNoCard.__proto__ || Object.getPrototypeOf(AreaNoCard)).apply(this, arguments));
    }

    _createClass(AreaNoCard, [{
        key: "isFieldVisible",
        value: function isFieldVisible(field) {
            var descriptor = this.props.descriptor;
            var model = this.props.model;

            if (_.isFunction(descriptor.visibility)) {
                return descriptor.visibility(field, model, descriptor);
            }

            return true;
        }
    }, {
        key: "render",
        value: function render() {
            var _this8 = this;

            var area = this.props.area;
            var tabs = !_.isEmpty(area.tabs) && React.createElement(Tabs, { tabs: area.tabs, model: this.props.model });
            var fields = !_.isEmpty(area.fields) && _.filter(area.fields, function (f) {
                return _this8.isFieldVisible(f);
            }).map(function (f) {
                return React.createElement((0, _lang.optional)(function () {
                    return f.component;
                }, function () {
                    return Field;
                }), { key: f.property, model: _this8.props.model, field: f });
            });
            var actionKey = 1;

            return React.createElement(
                "div",
                { className: "area-no-card" },
                React.createElement(
                    "div",
                    { className: "area-no-card-header" },
                    area.title && React.createElement(
                        "h2",
                        null,
                        area.title,
                        " ",
                        area.subtitle && React.createElement(
                            "small",
                            null,
                            area.subtitle
                        )
                    ),
                    React.createElement(_common.Actions, { actions: area.actions })
                ),
                React.createElement(
                    "div",
                    { className: "area-no-card-body" },
                    tabs,
                    React.createElement(
                        "div",
                        { className: "row" },
                        fields
                    )
                )
            );
        }
    }]);

    return AreaNoCard;
}(React.Component);

var Tabs = exports.Tabs = function (_React$Component4) {
    _inherits(Tabs, _React$Component4);

    function Tabs() {
        _classCallCheck(this, Tabs);

        return _possibleConstructorReturn(this, (Tabs.__proto__ || Object.getPrototypeOf(Tabs)).apply(this, arguments));
    }

    _createClass(Tabs, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var _this10 = this;

            var me = ReactDOM.findDOMNode(this);
            $(me).find(".tab-button").click(function (e) {
                e.preventDefault();
                $(_this10).tab("show");
            });
        }
    }, {
        key: "isFieldVisible",
        value: function isFieldVisible(field) {
            var descriptor = this.props.descriptor;
            var model = this.props.model;

            if (_.isFunction(descriptor.visibility)) {
                return descriptor.visibility(field, model, descriptor);
            }

            return true;
        }
    }, {
        key: "render",
        value: function render() {
            var _this11 = this;

            var descriptor = this.props.descriptor;
            var first = true;
            var tabs = this.props.tabs;
            var nav = tabs.map(function (n) {
                var el = React.createElement(
                    "li",
                    { key: "nav_" + n.key, className: first ? "active" : "" },
                    React.createElement(
                        "a",
                        { className: "tab-button", role: "tab", "data-toggle": "tab", href: "#" + n.key },
                        n.title
                    )
                );
                first = false;
                return el;
            });
            first = true;
            var panes = tabs.map(function (c) {
                var inline = (0, _lang.optional)(descriptor.inline, false);
                inline = (0, _lang.optional)(c.inline, inline);
                var defaultFieldClass = inline ? InlineField : Field;
                var fields = !_.isEmpty(c.fields) && _.filter(c.fields, function (f) {
                    return _this11.isFieldVisible(f);
                }).map(function (f) {
                    return React.createElement((0, _lang.optional)(function () {
                        return f.component;
                    }, function () {
                        return defaultFieldClass;
                    }), { key: f.property, model: _this11.props.model, field: f });
                });
                var el = React.createElement(
                    "div",
                    { key: "pane_" + c.key, role: "tabpanel", className: "tab-pane" + (first ? " active" : ""), id: "" + c.key },
                    React.createElement(
                        "div",
                        { className: "row" },
                        fields
                    ),
                    React.createElement("div", { className: "clearfix" })
                );
                first = false;
                return el;
            });

            return React.createElement(
                "div",
                null,
                React.createElement(
                    "ul",
                    { className: "tab-nav", role: "tablist" },
                    nav
                ),
                React.createElement(
                    "div",
                    { className: "tab-content" },
                    panes
                )
            );
        }
    }]);

    return Tabs;
}(React.Component);

var AREA_KEY = 1;
var TAB_KEY = 1;

function generateKeys(descriptor) {
    if (!descriptor.hasKeys) {
        if (!_.isEmpty(descriptor.areas)) {
            descriptor.areas.forEach(function (a) {
                if (_.isEmpty(a.key)) {
                    a.key = "area" + AREA_KEY++;
                }

                if (!_.isEmpty(a.tabs)) {
                    a.tabs.forEach(function (t) {
                        if (_.isEmpty(t.key)) {
                            t.key = "tab" + TAB_KEY++;
                        }
                    });
                }
            });
        }

        if (!_.isEmpty(descriptor.tabs)) {
            descriptor.tabs.forEach(function (t) {
                if (_.isEmpty(t.key)) {
                    t.key = "tab" + TAB_KEY++;
                }
            });
        }

        descriptor.hasKeys = true;
    }
}

var FormSubmitEvent = exports.FormSubmitEvent = function () {
    function FormSubmitEvent(form, model) {
        _classCallCheck(this, FormSubmitEvent);

        this.form = form;
        this.model = model;
        this.stopped = false;
    }

    _createClass(FormSubmitEvent, [{
        key: "stop",
        value: function stop() {
            this.stopped = true;
        }
    }, {
        key: "forceSubmit",
        value: function forceSubmit() {
            this.form.forceSubmit();
        }
    }]);

    return FormSubmitEvent;
}();

var FormBody = exports.FormBody = function (_React$Component5) {
    _inherits(FormBody, _React$Component5);

    function FormBody() {
        _classCallCheck(this, FormBody);

        return _possibleConstructorReturn(this, (FormBody.__proto__ || Object.getPrototypeOf(FormBody)).apply(this, arguments));
    }

    _createClass(FormBody, [{
        key: "isFieldVisible",
        value: function isFieldVisible(field) {
            var descriptor = this.props.descriptor;
            var model = this.props.model;

            if (_.isFunction(descriptor.visibility)) {
                return descriptor.visibility(field, model, descriptor);
            }

            return true;
        }
    }, {
        key: "render",
        value: function render() {
            var _this13 = this;

            var descriptor = this.props.descriptor;
            generateKeys(descriptor);
            var model = this.props.model;
            var inline = (0, _lang.optional)(descriptor.inline, false);
            var defaultFieldCass = inline ? InlineField : Field;
            var areas = !_.isEmpty(descriptor.areas) && descriptor.areas.map(function (a) {
                return React.createElement((0, _lang.optional)(function () {
                    return a.component;
                }, function () {
                    return Area;
                }), { key: a.key, model: model, area: a, descriptor: descriptor });
            });
            var tabs = !_.isEmpty(descriptor.tabs) && React.createElement(Tabs, { tabs: descriptor.tabs, model: model, descriptor: descriptor });
            var fields = !_.isEmpty(descriptor.fields) && _.filter(descriptor.fields, function (f) {
                return _this13.isFieldVisible(f);
            }).map(function (f) {
                return React.createElement((0, _lang.optional)(function () {
                    return f.component;
                }, function () {
                    return defaultFieldCass;
                }), { key: f.property, model: model, field: f });
            });
            var showInCard = (0, _lang.optional)(descriptor.showInCard, true);

            return React.createElement(
                "div",
                { className: "form-body" },
                areas,
                (tabs.length > 0 || fields.length > 0) && (showInCard ? React.createElement(
                    _common.Card,
                    { padding: "true" },
                    tabs,
                    fields,
                    React.createElement("div", { className: "clearfix" })
                ) : React.createElement(
                    "div",
                    { className: "form-body-content" },
                    tabs,
                    fields,
                    React.createElement("div", { className: "clearfix" })
                ))
            );
        }
    }]);

    return FormBody;
}(React.Component);

var Form = exports.Form = function (_React$Component6) {
    _inherits(Form, _React$Component6);

    function Form(props) {
        _classCallCheck(this, Form);

        var _this14 = _possibleConstructorReturn(this, (Form.__proto__ || Object.getPrototypeOf(Form)).call(this, props));

        _this14.model = new Model(_this14);
        return _this14;
    }

    _createClass(Form, [{
        key: "submit",
        value: function submit() {
            this.onSubmit();
        }
    }, {
        key: "forceSubmit",
        value: function forceSubmit() {
            if (_.isFunction(this.props.onSubmit)) {
                this.props.onSubmit(this.model.sanitized());
            }
        }
    }, {
        key: "onSubmit",
        value: function onSubmit(e) {
            if (e) {
                e.preventDefault();
            }

            var event = new FormSubmitEvent(this, this.model);

            try {
                var descriptor = this.props.descriptor;
                if (_.isFunction(descriptor.beforeSubmit)) {
                    descriptor.beforeSubmit(event);

                    if (event.stopped) {
                        return;
                    }
                }
            } catch (e) {
                if (e === VALIDATION_ERROR) {
                    this.forceUpdate();
                    return;
                } else {
                    throw e;
                }
            }

            try {
                this.model.validate();
                if (_.isFunction(this.props.onSubmit)) {
                    this.props.onSubmit(this.model.sanitized());
                }
            } catch (e) {
                if (e === VALIDATION_ERROR) {
                    this.forceUpdate();
                } else {
                    throw e;
                }
            }
        }
    }, {
        key: "onCancel",
        value: function onCancel(e) {
            if (_.isFunction(this.props.onCancel)) {
                this.props.onCancel();
            }
        }
    }, {
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(nextProps) {
            this.model.descriptor = nextProps.descriptor;
            this.model.load(nextProps.data);
        }
    }, {
        key: "isFieldVisible",
        value: function isFieldVisible(field) {
            var descriptor = this.props.descriptor;
            var model = this.model;

            if (_.isFunction(descriptor.visibility)) {
                return descriptor.visibility(field, model, descriptor);
            }

            return true;
        }
    }, {
        key: "getExtra",
        value: function getExtra() {
            return null;
        }
    }, {
        key: "render",
        value: function render() {
            var descriptor = this.props.descriptor;
            var model = this.model;

            var inline = (0, _lang.optional)(descriptor.inline, false);
            var className = inline ? "form-horizontal" : "";

            return React.createElement(
                "div",
                { className: "form" },
                React.createElement(
                    "form",
                    { action: "javascript:;", className: className, role: "form", onSubmit: this.onSubmit.bind(this) },
                    React.createElement(FormBody, { descriptor: descriptor, model: model }),
                    React.createElement(
                        "div",
                        { className: "row" },
                        React.createElement(
                            "div",
                            { className: "text-right col-sm-12" },
                            React.createElement(
                                "button",
                                { type: "button", className: "btn btn-default waves-effect m-r-10", onClick: this.onCancel.bind(this) },
                                React.createElement("i", { className: "zmdi zmdi-arrow-back" }),
                                " ",
                                descriptor.cancelText || (0, _strings2.default)("back")
                            ),
                            React.createElement(
                                "button",
                                { type: "submit", className: "btn btn-primary waves-effect" },
                                React.createElement("i", { className: "zmdi zmdi-save" }),
                                " ",
                                descriptor.submitText || (0, _strings2.default)("save")
                            )
                        )
                    ),
                    React.createElement("div", { className: "clearfix" }),
                    this.getExtra()
                )
            );
        }
    }]);

    return Form;
}(React.Component);

/************************
    Controls and Fields
 ************************/

var Field = exports.Field = function (_React$Component7) {
    _inherits(Field, _React$Component7);

    function Field() {
        _classCallCheck(this, Field);

        return _possibleConstructorReturn(this, (Field.__proto__ || Object.getPrototypeOf(Field)).apply(this, arguments));
    }

    _createClass(Field, [{
        key: "render",
        value: function render() {
            var model = this.props.model;
            var className = "form-group " + (this.props.field.size ? this.props.field.size : "col-sm-12");
            var control = React.createElement(this.props.field.control, _.assign({ field: this.props.field, model: this.props.model }, this.props.field.props));
            var hasLabel = this.props.field.label != undefined && this.props.field.label != null;
            var validationResult = (0, _lang.optional)(model.validationResult[this.props.field.property], { valid: true });
            if (!validationResult.valid) {
                className += " has-error";
            }
            if (!_.isEmpty(this.props.field.className)) {
                className += " " + this.props.field.className;
            }
            return React.createElement(
                "div",
                { className: className, style: { minHeight: 58 } },
                hasLabel && React.createElement(Label, { field: this.props.field }),
                control,
                !validationResult.valid && !_.isEmpty(validationResult.message) && React.createElement(
                    "small",
                    { className: "help-block" },
                    validationResult.message
                )
            );
        }
    }]);

    return Field;
}(React.Component);

var InlineField = exports.InlineField = function (_React$Component8) {
    _inherits(InlineField, _React$Component8);

    function InlineField() {
        _classCallCheck(this, InlineField);

        return _possibleConstructorReturn(this, (InlineField.__proto__ || Object.getPrototypeOf(InlineField)).apply(this, arguments));
    }

    _createClass(InlineField, [{
        key: "render",
        value: function render() {
            var model = this.props.model;
            var className = "form-group " + (this.props.field.size ? this.props.field.size : "col-sm-12");
            var control = React.createElement(this.props.field.control, _.assign({ field: this.props.field, model: this.props.model }, this.props.field.props));
            var hasLabel = this.props.field.label != undefined && this.props.field.label != null;
            var inline = (0, _lang.optional)(this.props.inline, false);
            var controlSize = hasLabel ? "col-sm-10" : "col-sm-12";
            var validationResult = (0, _lang.optional)(model.validationResult[this.props.field.property], { valid: true });
            if (!validationResult.valid) {
                className += " has-error";
            }
            if (!_.isEmpty(this.props.field.className)) {
                className += " " + this.props.field.className;
            }
            return React.createElement(
                "div",
                { className: className },
                hasLabel && React.createElement(
                    "div",
                    { className: "col-sm-2" },
                    React.createElement(Label, { field: this.props.field, className: "control-label" })
                ),
                React.createElement(
                    "div",
                    { className: controlSize },
                    control,
                    !validationResult.valid && !_.isEmpty(validationResult.message) && React.createElement(
                        "small",
                        { className: "help-block" },
                        validationResult.message
                    )
                )
            );
        }
    }]);

    return InlineField;
}(React.Component);

var Control = exports.Control = function (_React$Component9) {
    _inherits(Control, _React$Component9);

    function Control(props) {
        _classCallCheck(this, Control);

        return _possibleConstructorReturn(this, (Control.__proto__ || Object.getPrototypeOf(Control)).call(this, props));
    }

    _createClass(Control, [{
        key: "onValueChange",
        value: function onValueChange(e) {
            var value = e.target.value;
            var model = this.props.model;
            var field = this.props.field;
            model.set(field.property, value);
            this.forceUpdate();
        }
    }]);

    return Control;
}(React.Component);

var Text = exports.Text = function (_Control) {
    _inherits(Text, _Control);

    function Text() {
        _classCallCheck(this, Text);

        return _possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).apply(this, arguments));
    }

    _createClass(Text, [{
        key: "render",
        value: function render() {
            var field = this.props.field;

            return React.createElement(
                "div",
                { className: "fg-line" },
                React.createElement("input", {
                    type: "text",
                    className: "form-control input-sm",
                    id: field.property,
                    "data-property": field.property,
                    placeholder: field.placeholder,
                    value: (0, _lang.optional)(this.props.model.get(field.property), ""),
                    onChange: this.onValueChange.bind(this) })
            );
        }
    }]);

    return Text;
}(Control);

var TextArea = exports.TextArea = function (_Control2) {
    _inherits(TextArea, _Control2);

    function TextArea() {
        _classCallCheck(this, TextArea);

        return _possibleConstructorReturn(this, (TextArea.__proto__ || Object.getPrototypeOf(TextArea)).apply(this, arguments));
    }

    _createClass(TextArea, [{
        key: "render",
        value: function render() {
            var field = this.props.field;
            var style = {
                height: (0, _lang.optional)(this.props.height, "150px")
            };
            return React.createElement(
                "div",
                { className: "fg-line" },
                React.createElement("textarea", {
                    style: style,
                    className: "form-control",
                    id: field.property,
                    "data-property": field.property,
                    placeholder: field.placeholder,
                    value: (0, _lang.optional)(this.props.model.get(field.property), ""),
                    onChange: this.onValueChange.bind(this) })
            );
        }
    }]);

    return TextArea;
}(Control);

var ReadOnlyText = exports.ReadOnlyText = function (_Control3) {
    _inherits(ReadOnlyText, _Control3);

    function ReadOnlyText() {
        _classCallCheck(this, ReadOnlyText);

        return _possibleConstructorReturn(this, (ReadOnlyText.__proto__ || Object.getPrototypeOf(ReadOnlyText)).apply(this, arguments));
    }

    _createClass(ReadOnlyText, [{
        key: "getText",
        value: function getText() {
            var _this21 = this;

            var field = this.props.field;
            var model = this.props.model;
            var formatter = (0, _lang.optional)(function () {
                return _this21.props.formatter;
            }, function () {
                return function (v) {
                    return v;
                };
            });
            return (0, _lang.optional)(formatter(model.get(field.property)), "");
        }
    }, {
        key: "render",
        value: function render() {
            var field = this.props.field;

            return React.createElement(
                "div",
                { className: "fg-line" },
                React.createElement("input", {
                    disabled: "disabled",
                    readOnly: "readOnly",
                    type: "text",
                    className: "form-control input-sm",
                    id: field.property,
                    "data-property": field.property,
                    placeholder: field.placeholder,
                    value: this.getText(),
                    onChange: this.onValueChange.bind(this) })
            );
        }
    }]);

    return ReadOnlyText;
}(Control);

var Color = exports.Color = function (_Control4) {
    _inherits(Color, _Control4);

    function Color() {
        _classCallCheck(this, Color);

        return _possibleConstructorReturn(this, (Color.__proto__ || Object.getPrototypeOf(Color)).apply(this, arguments));
    }

    _createClass(Color, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var _this23 = this;

            var field = this.props.field;
            var model = this.props.model;
            var me = ReactDOM.findDOMNode(this);
            var input = $(me).find("#" + field.property);
            $(me).find(".color-picker").farbtastic(function (v) {
                model.set(field.property, v);
                _this23.forceUpdate();
            });
        }
    }, {
        key: "render",
        value: function render() {
            var field = this.props.field;
            var value = this.props.model.get(field.property);
            var colorStyle = { backgroundColor: "" + (0, _lang.optional)(value, "#000000") };

            return React.createElement(
                "div",
                { className: "cp-container" },
                React.createElement(
                    "div",
                    { className: "" },
                    React.createElement(
                        "div",
                        { className: "fg-line dropdown" },
                        React.createElement("input", {
                            type: "text",
                            className: "form-control cp-value",
                            "data-toggle": "dropdown",
                            "aria-expanded": "false",
                            id: field.property,
                            "data-property": field.property,
                            placeholder: field.placeholder,
                            value: (0, _lang.optional)(this.props.model.get(field.property), ""),
                            onChange: this.onValueChange.bind(this) }),
                        React.createElement(
                            "div",
                            { className: "dropdown-menu" },
                            React.createElement("div", { className: "color-picker", "data-cp-default": "#000000" })
                        ),
                        React.createElement("i", { className: "cp-value", style: colorStyle })
                    )
                )
            );
        }
    }]);

    return Color;
}(Control);

var Spacer = exports.Spacer = function (_Control5) {
    _inherits(Spacer, _Control5);

    function Spacer() {
        _classCallCheck(this, Spacer);

        return _possibleConstructorReturn(this, (Spacer.__proto__ || Object.getPrototypeOf(Spacer)).apply(this, arguments));
    }

    _createClass(Spacer, [{
        key: "render",
        value: function render() {
            return React.createElement("div", { className: "form-spacer-control" });
        }
    }]);

    return Spacer;
}(Control);

var Mail = exports.Mail = function (_Control6) {
    _inherits(Mail, _Control6);

    function Mail() {
        _classCallCheck(this, Mail);

        return _possibleConstructorReturn(this, (Mail.__proto__ || Object.getPrototypeOf(Mail)).apply(this, arguments));
    }

    _createClass(Mail, [{
        key: "render",
        value: function render() {
            var field = this.props.field;

            return React.createElement(
                "div",
                { className: "fg-line" },
                React.createElement("input", {
                    type: "email",
                    className: "form-control input-sm",
                    id: field.property,
                    "data-property": field.property,
                    placeholder: field.placeholder,
                    value: (0, _lang.optional)(this.props.model.get(field.property), ""),
                    onChange: this.onValueChange.bind(this) })
            );
        }
    }]);

    return Mail;
}(Control);

var DateTime = exports.DateTime = function (_Control7) {
    _inherits(DateTime, _Control7);

    function DateTime() {
        _classCallCheck(this, DateTime);

        return _possibleConstructorReturn(this, (DateTime.__proto__ || Object.getPrototypeOf(DateTime)).apply(this, arguments));
    }

    _createClass(DateTime, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var me = ReactDOM.findDOMNode(this);
            $(me).datetimepicker({
                locale: this.props.locale,
                format: this.props.format
            });

            var field = this.props.field;
            var model = this.props.model;

            $(me).on("dp.change", function (e) {
                var date = e.date.toDate();
                var time = date.getTime();
                model.set(field.property, time);
            });

            model.once("load", function () {
                var value = model.get(field.property);
                var date = new Date();
                if (value) {
                    date.setTime(value);
                }
                $(me).data("DateTimePicker").date(date);
            });
        }
    }, {
        key: "render",
        value: function render() {
            var field = this.props.field;

            return React.createElement(
                "div",
                { className: "input-group" },
                React.createElement(
                    "div",
                    { className: "fg-line" },
                    React.createElement("input", {
                        type: "text",
                        className: "form-control input-sm",
                        id: field.property,
                        "data-property": field.property,
                        placeholder: field.placeholder })
                ),
                React.createElement(
                    "div",
                    { className: "input-group-addon" },
                    React.createElement("span", { className: "zmdi zmdi-calendar" })
                )
            );
        }
    }]);

    return DateTime;
}(Control);

var YesNo = exports.YesNo = function (_Control8) {
    _inherits(YesNo, _Control8);

    function YesNo() {
        _classCallCheck(this, YesNo);

        return _possibleConstructorReturn(this, (YesNo.__proto__ || Object.getPrototypeOf(YesNo)).apply(this, arguments));
    }

    _createClass(YesNo, [{
        key: "onValueChange",
        value: function onValueChange(e) {
            var value = (0, _lang2.parseBoolean)(e.target.value);
            var model = this.props.model;
            var field = this.props.field;
            model.set(field.property, value);
            this.forceUpdate();
        }
    }, {
        key: "componentDidMount",
        value: function componentDidMount() {
            var model = this.props.model;
            var field = this.props.field;
            var fn = function fn() {
                var value = (0, _lang2.parseBoolean)(model.get(field.property));
                if (value === null || value === undefined) {
                    value = false;
                }
                model.untrackChanges();
                model.set(field.property, value);
                model.trackChanges();
            };

            model.once("load", fn);
            fn();
        }
    }, {
        key: "render",
        value: function render() {
            var field = this.props.field;
            var yesText = (0, _lang.optional)(this.props.yesText, "Yes");
            var noText = (0, _lang.optional)(this.props.noText, "No");

            return React.createElement(
                "div",
                { className: "yesno" },
                React.createElement(
                    "label",
                    { className: "radio radio-inline m-r-5" },
                    React.createElement("input", { type: "radio", name: field.property, value: "true", checked: (0, _lang.optional)(this.props.model.get(field.property), false), onChange: this.onValueChange.bind(this) }),
                    React.createElement(
                        "i",
                        { className: "input-helper" },
                        yesText
                    )
                ),
                React.createElement(
                    "label",
                    { className: "radio radio-inline m-r-5" },
                    React.createElement("input", { type: "radio", name: field.property, value: "false", checked: !(0, _lang.optional)(this.props.model.get(field.property), false), onChange: this.onValueChange.bind(this) }),
                    React.createElement(
                        "i",
                        { className: "input-helper" },
                        noText
                    )
                )
            );
        }
    }]);

    return YesNo;
}(Control);

var Switch = exports.Switch = function (_Control9) {
    _inherits(Switch, _Control9);

    function Switch() {
        _classCallCheck(this, Switch);

        return _possibleConstructorReturn(this, (Switch.__proto__ || Object.getPrototypeOf(Switch)).apply(this, arguments));
    }

    _createClass(Switch, [{
        key: "onValueChange",
        value: function onValueChange(e) {
            var value = e.target.checked;
            var model = this.props.model;
            var field = this.props.field;
            model.set(field.property, value);
            this.forceUpdate();
        }
    }, {
        key: "render",
        value: function render() {
            var field = this.props.field;

            return React.createElement(
                "div",
                { className: "toggle-switch" },
                React.createElement("input", {
                    type: "checkbox",
                    hidden: "hidden",
                    name: field.property,
                    id: field.property,
                    "data-property": field.property,
                    checked: (0, _lang.optional)(this.props.model.get(field.property), false),
                    onChange: this.onValueChange.bind(this) }),
                React.createElement("label", { htmlFor: field.property, className: "ts-helper" }),
                React.createElement(
                    "label",
                    { htmlFor: field.property, className: "ts-label" },
                    field.placeholder
                )
            );
        }
    }]);

    return Switch;
}(Control);

var Number = exports.Number = function (_Control10) {
    _inherits(Number, _Control10);

    function Number() {
        _classCallCheck(this, Number);

        return _possibleConstructorReturn(this, (Number.__proto__ || Object.getPrototypeOf(Number)).apply(this, arguments));
    }

    _createClass(Number, [{
        key: "render",
        value: function render() {
            var field = this.props.field;

            return React.createElement(
                "div",
                { className: "fg-line" },
                React.createElement("input", {
                    type: "number",
                    className: "form-control input-sm",
                    id: field.property,
                    "data-property": field.property,
                    placeholder: field.placeholder,
                    value: (0, _lang.optional)(this.props.model.get(field.property), 0),
                    onChange: this.onValueChange.bind(this) })
            );
        }
    }]);

    return Number;
}(Control);

var Select = exports.Select = function (_Control11) {
    _inherits(Select, _Control11);

    function Select(props) {
        _classCallCheck(this, Select);

        var _this30 = _possibleConstructorReturn(this, (Select.__proto__ || Object.getPrototypeOf(Select)).call(this, props));

        _this30.__dataSourceOnChange = function (data) {
            _this30.forceUpdate();
        };
        return _this30;
    }

    _createClass(Select, [{
        key: "onValueChange",
        value: function onValueChange(e) {
            var multiple = (0, _lang.optional)(this.props.multiple, false);
            var value = $(e.target).val();
            var model = this.props.model;
            var field = this.props.field;

            if (multiple) {
                if (value == null) {
                    value = [];
                }
            }

            model.set(field.property, value);
            this.forceUpdate();
        }
    }, {
        key: "componentDidMount",
        value: function componentDidMount() {
            if (!_.isEmpty(this.props.datasource)) {
                this.props.datasource.on("change", this.__dataSourceOnChange);
            }

            var me = ReactDOM.findDOMNode(this);
            var model = this.props.model;
            var field = this.props.field;
            var multiple = (0, _lang.optional)(this.props.multiple, false);

            $(me).focus(function () {
                $(me).addClass("fg-toggled");
            }).blur(function () {
                $(me).removeClass("fg-toggled");
            });

            $(me).find("select").selectpicker({
                liveSearch: (0, _lang.optional)(this.props.searchEnabled, false)
            }).on("loaded.bs.select", function () {
                var value = $(this).val();

                if (multiple) {
                    if (_.isEmpty(value)) {
                        value = [];
                    }
                }

                model.untrackChanges();
                model.set(field.property, value);
                model.trackChanges();
            });
        }
    }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate() {
            var model = this.props.model;
            var field = this.props.field;
            var me = ReactDOM.findDOMNode(this);

            $(me).find("select").selectpicker("refresh");
        }
    }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            if (!_.isEmpty(this.props.datasource)) {
                this.props.datasource.off("change", this.__dataSourceOnChange);
            }
        }
    }, {
        key: "render",
        value: function render() {
            var model = this.props.model;
            var field = this.props.field;
            var datasource = this.props.datasource;
            var options = (0, _lang.optional)(function () {
                return datasource.data.rows;
            }, []).map(function (o) {
                return React.createElement(
                    "option",
                    { key: o.value, value: o.value },
                    o.label
                );
            });
            var multiple = (0, _lang.optional)(this.props.multiple, false);

            return React.createElement(
                "div",
                { className: "fg-line" },
                React.createElement(
                    "select",
                    {
                        id: field.property,
                        className: "form-control",
                        "data-property": field.property,
                        onChange: this.onValueChange.bind(this),
                        title: field.placeholder,
                        value: (0, _lang.optional)(model.get(field.property), multiple ? [] : ""),
                        multiple: multiple },
                    this.props.allowNull && React.createElement(
                        "option",
                        { key: "empty", value: "", style: { color: "#999999" } },
                        (0, _lang.optional)(this.props.nullText, "(none)")
                    ),
                    options
                )
            );
        }
    }]);

    return Select;
}(Control);

var Lookup = exports.Lookup = function (_Control12) {
    _inherits(Lookup, _Control12);

    function Lookup(props) {
        _classCallCheck(this, Lookup);

        var _this31 = _possibleConstructorReturn(this, (Lookup.__proto__ || Object.getPrototypeOf(Lookup)).call(this, props));

        _this31.datasource = _this31.props.datasource || datasource.create();
        _this31.query = _this31.props.query || query.create();

        _this31.__dataSourceOnChange = function (data) {
            _this31.forceUpdate();
        };

        _this31.__queryChange = function () {
            if (_.isFunction(_this31.props.loader)) {
                _this31.props.loader(_this31.query, _this31.datasource);
            }
        };
        return _this31;
    }

    _createClass(Lookup, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            this.datasource.on("change", this.__dataSourceOnChange);
            this.query.on("change", this.__queryChange);

            var me = ReactDOM.findDOMNode(this);
            $(me).find(".selection-row").mouseenter(function () {
                $(this).find(".action").stop().fadeIn(250);
            }).mouseleave(function () {
                $(this).find(".action").stop().fadeOut(250);
            }).find(".action").hide();

            $(me).focus(function () {
                $(me).addClass("fg-toggled");
            }).blur(function () {
                $(me).removeClass("fg-toggled");
            });

            $(me).find(".lookup-grid").modal({ show: false });

            if (_.isFunction(this.props.loader)) {
                this.props.loader(this.query, this.datasource);
            }
        }
    }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            this.datasource.off("change", this.__dataSourceOnChange);
            this.query.off("change", this.__queryChange);
        }
    }, {
        key: "showEntities",
        value: function showEntities(e) {
            e.stopPropagation();

            if (!this.dialogAlreadyOpened) {
                if (this.props.query) {
                    this.props.query.invokeChange();
                }
            }
            this.dialogAlreadyOpened = true;

            var me = ReactDOM.findDOMNode(this);
            $(me).find(".lookup-grid").modal("show");
        }
    }, {
        key: "select",
        value: function select() {
            var me = ReactDOM.findDOMNode(this);
            $(me).find(".lookup-grid").modal("hide");

            var model = this.props.model;
            var field = this.props.field;
            var grid = this.refs.searchGrid;
            var current = (0, _lang.optional)(model.get(field.property), []);
            var selection = (0, _lang.optional)(grid.getSelection(), []);
            var mode = this.checkedMode();
            var result = null;
            if (mode == "single") {
                if (selection.length == 0) {
                    return;
                }

                result = selection[0];
            } else if (mode == "multiple") {
                result = _.union(current, []);
                selection.forEach(function (s) {
                    var comparer = function comparer(r) {
                        if (_.has(s, "id")) {
                            return s.id == r.id;
                        } else {
                            return _.isEqual(s, r);
                        }
                    };
                    if (!_.any(result, comparer)) {
                        result.push(s);
                    }
                });
            }

            model.set(field.property, result);

            this.forceUpdate();
        }
    }, {
        key: "remove",
        value: function remove(e) {
            e.stopPropagation();

            var mode = this.checkedMode();
            if (mode == "single") {
                this.removeAll();
            } else if (mode == "multiple") {
                this.removeSelection();
            }
        }
    }, {
        key: "removeRow",
        value: function removeRow(row) {
            var model = this.props.model;
            var field = this.props.field;
            var current = (0, _lang.optional)(model.get(field.property), []);
            var result = _.filter(current, function (r) {
                if (_.has(row, "id")) {
                    return row.id != r.id;
                } else {
                    return !_.isEqual(row, r);
                }
            });
            model.set(field.property, result);

            this.forceUpdate();
        }
    }, {
        key: "removeSelection",
        value: function removeSelection() {
            var model = this.props.model;
            var field = this.props.field;
            var grid = this.refs.selectionGrid;
            var selection = grid.getSelection();
            var current = (0, _lang.optional)(model.get(field.property), []);
            var result = _.filter(current, function (c) {
                return !_.any(selection, function (r) {
                    if (_.has(c, "id")) {
                        return c.id == r.id;
                    } else {
                        return _.isEqual(c, r);
                    }
                });
            });
            model.set(field.property, result);

            this.forceUpdate();
        }
    }, {
        key: "removeAll",
        value: function removeAll() {
            var mode = this.checkedMode();
            var model = this.props.model;
            var field = this.props.field;
            var v = null;
            if (mode == "single") {
                v = null;
            } else if (mode == "multiple") {
                v = [];
            }
            model.set(field.property, v);

            this.forceUpdate();
        }
    }, {
        key: "checkedMode",
        value: function checkedMode() {
            var mode = this.props.mode;
            if ("multiple" != mode && "single" != mode) {
                throw new Error("Please specify a mode for lookup: [single|multiple]");
            }
            return mode;
        }
    }, {
        key: "getHeaderText",
        value: function getHeaderText() {
            var field = this.props.field;
            var mode = this.checkedMode();
            var model = this.props.model;
            var value = model.get(field.property);

            if (_.isEmpty(value)) {
                return React.createElement(
                    "span",
                    { className: "placeholder" },
                    this.getPlaceholderText()
                );
            } else {
                return this.getCurrentValueDescription();
            }
        }
    }, {
        key: "getCurrentValueDescription",
        value: function getCurrentValueDescription() {
            var model = this.props.model;
            var field = this.props.field;
            var mode = this.checkedMode();

            if (mode == "multiple") {
                var rows = model.get(field.property);
                return rows.length == 1 ? (0, _strings2.default)("oneElementSelected") : (0, _lang.format)((0, _strings2.default)("nElementsSelected"), rows.length);
            } else if (mode == "single") {
                var row = model.get(field.property);
                if (row == null) {
                    return "";
                }

                var customFormatter = field.formatter || this.props.formatter;
                var formatter = _.isFunction(customFormatter) ? customFormatter : function (row) {
                    if (_.has(row, "name")) {
                        return row["name"];
                    } else if (_.has(row, "description")) {
                        return row["description"];
                    } else {
                        return JSON.stringify(row);
                    }
                };

                return formatter(row);
            }
        }
    }, {
        key: "onGridKeyDown",
        value: function onGridKeyDown(e) {
            if ((0, _keyboard.isCancel)(e.which)) {
                this.remove(e);
                e.preventDefault();
            }
        }
    }, {
        key: "getPlaceholderText",
        value: function getPlaceholderText() {
            var field = this.props.field;

            if (field.placeholder) {
                return field.placeholder;
            } else {
                return (0, _strings2.default)("nothingSelected");
            }
        }
    }, {
        key: "render",
        value: function render() {
            var _this32 = this;

            var mode = this.checkedMode();
            var model = this.props.model;
            var field = this.props.field;
            var rows = model.get(field.property) || [];
            var selectionGrid = mode == "multiple" ? _.assign({}, this.props.selectionGrid, { columns: _.union(this.props.selectionGrid.columns, [{
                    cell: _grids.ActionsCell,
                    tdClassName: "grid-actions",
                    actions: [{ icon: "zmdi zmdi-delete", action: function action(row) {
                            return _this32.removeRow(row);
                        } }]
                }]) }) : null;
            var addClassName = void 0;
            if (mode == "single") {
                addClassName = "zmdi zmdi-more";
            } else if (mode == "multiple") {
                addClassName = "zmdi zmdi-plus";
            }

            return React.createElement(
                "div",
                { className: "fg-line", tabIndex: "0" },
                React.createElement(
                    "div",
                    { className: "lookup" },
                    React.createElement(
                        "div",
                        { className: "lookup-header", onClick: this.showEntities.bind(this) },
                        React.createElement(
                            "div",
                            { className: "actions" },
                            React.createElement(
                                "a",
                                { href: "javascript:;", title: (0, _strings2.default)("remove"), onClick: this.remove.bind(this), className: "m-r-0" },
                                React.createElement("i", { className: "zmdi zmdi-close" })
                            ),
                            React.createElement(
                                "a",
                                { href: "javascript:;", title: (0, _strings2.default)("add"), onClick: this.showEntities.bind(this) },
                                React.createElement("i", { className: addClassName })
                            )
                        ),
                        React.createElement(
                            "span",
                            { className: "lookup-current-value" },
                            this.getHeaderText()
                        ),
                        React.createElement("div", { className: "clearfix" })
                    ),
                    mode == "multiple" && React.createElement(_grids.Grid, {
                        ref: "selectionGrid",
                        descriptor: selectionGrid,
                        data: (0, _grids.resultToGridData)({ rows: rows, totalRows: rows.length }),
                        showInCard: "false",
                        quickSearchEnabled: "false",
                        headerVisible: "false",
                        footerVisible: "false",
                        summaryVisible: "false",
                        noResultsVisible: "false",
                        paginationEnabled: "false",
                        tableClassName: "table table-condensed table-hover",
                        onKeyDown: this.onGridKeyDown.bind(this)
                    })
                ),
                React.createElement(
                    "div",
                    { className: "lookup-grid modal fade", id: "myModal", tabIndex: "-1", role: "dialog", "aria-labelledby": "myModalLabel" },
                    React.createElement(
                        "div",
                        { className: "modal-dialog modal-lg", role: "document" },
                        React.createElement(
                            "div",
                            { className: "modal-content" },
                            React.createElement(
                                "div",
                                { className: "modal-header" },
                                React.createElement(
                                    "button",
                                    { type: "button", className: "close", "data-dismiss": "modal", "aria-label": "Close" },
                                    React.createElement(
                                        "span",
                                        { "aria-hidden": "true" },
                                        "\xD7"
                                    )
                                ),
                                React.createElement(
                                    "h4",
                                    { className: "modal-title", id: "myModalLabel" },
                                    field.label
                                )
                            ),
                            React.createElement(
                                "div",
                                { className: "modal-body" },
                                React.createElement(_grids.Grid, {
                                    ref: "searchGrid",
                                    descriptor: this.props.popupGrid,
                                    data: (0, _grids.resultToGridData)(this.datasource.data),
                                    query: this.props.query,
                                    showInCard: "false",
                                    quickSearchEnabled: "true",
                                    footerVisible: "true",
                                    summaryVisible: "true",
                                    paginationEnabled: "true",
                                    tableClassName: "table table-condensed table-striped table-hover",
                                    onRowDoubleClick: this.select.bind(this)
                                })
                            ),
                            React.createElement(
                                "div",
                                { className: "modal-footer" },
                                React.createElement(
                                    "button",
                                    { type: "button", className: "btn btn-link", onClick: this.select.bind(this) },
                                    (0, _strings2.default)("ok")
                                ),
                                React.createElement(
                                    "button",
                                    { type: "button", className: "btn btn-link", "data-dismiss": "modal" },
                                    (0, _strings2.default)("cancel")
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return Lookup;
}(Control);

var File = exports.File = function (_Control13) {
    _inherits(File, _Control13);

    function File(props) {
        _classCallCheck(this, File);

        var _this33 = _possibleConstructorReturn(this, (File.__proto__ || Object.getPrototypeOf(File)).call(this, props));

        _this33.state = { filename: null };
        return _this33;
    }

    _createClass(File, [{
        key: "onFileSelected",
        value: function onFileSelected(e) {
            var _this34 = this;

            var model = this.props.model;
            var field = this.props.field;
            var file = e.target.files[0];
            inputfile.readDataUrl(file).then(function (result) {
                model.set(field.property, result);
                _this34.setState({ filename: file.name });
            });
        }
    }, {
        key: "remove",
        value: function remove(e) {
            e.preventDefault();
            e.stopPropagation();

            var model = this.props.model;
            var field = this.props.field;
            model.set(field.property, null);
            this.setState({ filename: null });
        }
    }, {
        key: "search",
        value: function search(e) {
            e.preventDefault();
            e.stopPropagation();

            var me = ReactDOM.findDOMNode(this);
            $(me).find("input[type=file]").click();
        }
    }, {
        key: "render",
        value: function render() {
            var model = this.props.model;
            var field = this.props.field;
            var value = model.get(field.property);
            var hasValue = !_.isEmpty(value);

            return React.createElement(
                "div",
                { className: "input-file fg-line", tabIndex: "0" },
                React.createElement(
                    "div",
                    { onClick: this.search.bind(this) },
                    !hasValue ? React.createElement(
                        "div",
                        null,
                        React.createElement(
                            "div",
                            { className: "actions pull-right" },
                            React.createElement(
                                "a",
                                { href: "javascript:;", title: (0, _strings2.default)("search"), onClick: this.search.bind(this), className: "m-r-0" },
                                React.createElement("i", { className: "zmdi zmdi-search" })
                            )
                        ),
                        React.createElement(
                            "span",
                            { className: "placeholder" },
                            field.placeholder
                        )
                    ) : React.createElement(
                        "div",
                        null,
                        React.createElement(
                            "div",
                            { className: "actions pull-right" },
                            React.createElement(
                                "a",
                                { href: "javascript:;", title: (0, _strings2.default)("remove"), onClick: this.remove.bind(this), className: "m-r-0" },
                                React.createElement("i", { className: "zmdi zmdi-close" })
                            )
                        ),
                        React.createElement(
                            "span",
                            { className: "input-file-name" },
                            React.createElement("span", { className: "zmdi zmdi-file" }),
                            " ",
                            this.state.filename
                        )
                    )
                ),
                React.createElement("input", { type: "file", accept: field.accept, onChange: this.onFileSelected.bind(this) })
            );
        }
    }]);

    return File;
}(Control);

var Image = exports.Image = function (_Control14) {
    _inherits(Image, _Control14);

    function Image(props) {
        _classCallCheck(this, Image);

        return _possibleConstructorReturn(this, (Image.__proto__ || Object.getPrototypeOf(Image)).call(this, props));
    }

    _createClass(Image, [{
        key: "onFileSelected",
        value: function onFileSelected(e) {
            var _this36 = this;

            var model = this.props.model;
            var field = this.props.field;
            var file = e.target.files[0];
            inputfile.readDataUrl(file).then(function (result) {
                model.set(field.property, result);
                _this36.forceUpdate();
            });
        }
    }, {
        key: "delete",
        value: function _delete(e) {
            e.stopPropagation();
            e.preventDefault();

            var model = this.props.model;
            var field = this.props.field;
            var me = ReactDOM.findDOMNode(this);
            $(me).find("input[type=file]").val(null);

            model.set(field.property, null);
            this.forceUpdate();
        }
    }, {
        key: "search",
        value: function search(e) {
            e.preventDefault();
            e.stopPropagation();

            var me = ReactDOM.findDOMNode(this);
            $(me).find("input[type=file]").click();
        }
    }, {
        key: "render",
        value: function render() {
            var model = this.props.model;
            var field = this.props.field;
            var accept = field.accept || ".jpg,.png,.jpeg,.gif,.bmp";

            var imgStyle = {
                "backgroundRepeat": "no-repeat",
                "backgroundSize": "contain",
                "backgroundPosition": "center",
                "height": "150px",
                "backgroundColor": "#F2F2F2"
            };
            if (this.props.width) {
                imgStyle.width = this.props.width;
            }
            if (this.props.height) {
                imgStyle.height = this.props.height;
            }

            var imageData = model.get(field.property);

            return React.createElement(
                "div",
                { className: "input-image fg-line" },
                React.createElement(
                    "div",
                    { onClick: this.search.bind(this) },
                    !_.isEmpty(imageData) ? React.createElement(
                        "div",
                        { className: "input-image-container" },
                        React.createElement(
                            "div",
                            { className: "actions" },
                            React.createElement(
                                "a",
                                { href: "javascript:;", onClick: this.delete.bind(this), className: "delete-button" },
                                React.createElement("i", { className: "zmdi zmdi-close" })
                            )
                        ),
                        React.createElement("div", { className: "input-image", style: _.assign(imgStyle, { "backgroundImage": "url(\"" + imageData + "\")" }) })
                    ) : React.createElement("div", { className: "input-image", style: _.assign(imgStyle, { "backgroundImage": "url(\"resources/images/noimage.png\")" }) })
                ),
                React.createElement("input", { type: "file", accept: accept, onChange: this.onFileSelected.bind(this) })
            );
        }
    }]);

    return Image;
}(Control);
});
define('web/components/grids.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Grid = exports.QuickSearch = exports.NoCard = exports.ResultSummary = exports.Pagination = exports.Filters = exports.Filter = exports.KeywordSearch = exports.ActionsCell = exports.CheckCell = exports.TextCell = exports.EditTextCell = exports.Cell = exports.GridFooter = exports.FooterCell = exports.GridBody = exports.Row = exports.GridHeader = exports.HeaderCell = exports.SearchDialog = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.resultToGridData = resultToGridData;
exports.createCell = createCell;

var _query = require("../../api/query");

var query = _interopRequireWildcard(_query);

var _strings = require("../../strings");

var _strings2 = _interopRequireDefault(_strings);

var _common = require("./common");

var _lang = require("../../utils/lang");

var _events = require("../../aj/events");

var _keyboard = require("../utils/keyboard");

var _mobile = require("../utils/mobile");

var mobile = _interopRequireWildcard(_mobile);

var _datasource = require("../../utils/datasource");

var datasource = _interopRequireWildcard(_datasource);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var EXPAND_ANIMATION_TIME = 250;
var CELL_PADDING_TOP = 15;
var CELL_PADDING_BOTTOM = 15;

/* 
 * hack to load forms when is useful but prevent circular references of modules. forms.jsx uses grids.jsx 
 */

var _forms = null;
function forms() {
    if (_forms == null) {
        //from this, the url is not absolute
        _forms = require("./web/components/forms");
    }

    return _forms;
}

function eachChildren(root, action) {
    if (_.isArray(root)) {
        root.forEach(function (c) {
            action(c);

            eachChildren(c.children, action);
        });
    }
}

function clearSelection() {
    if (document.selection && document.selection.empty) {
        document.selection.empty();
    } else if (window.getSelection) {
        var sel = window.getSelection();
        sel.removeAllRanges();
    }
}

function resultToGridData(result) {
    if (!result || !result.rows) {
        return { rows: [], totalRows: 0 };
    }
    var index = 0;
    return {
        totalRows: result.totalRows,
        rows: result.rows.map(function (r) {
            return {
                data: r,
                index: index++,
                children: null,
                selected: false
            };
        })
    };
}

var Selection = function (_Observable) {
    _inherits(Selection, _Observable);

    function Selection(rows) {
        _classCallCheck(this, Selection);

        var _this = _possibleConstructorReturn(this, (Selection.__proto__ || Object.getPrototypeOf(Selection)).call(this));

        _this.rows = rows;
        _this.shiftPressed = false;
        _this.controlPressed = false;
        _this.lastSelected = null;
        _this.rangeStartRow = null;
        _this.allSelected = false;
        _this.single = false;
        return _this;
    }

    _createClass(Selection, [{
        key: "flatRows",
        value: function flatRows() {
            var flatRows = [];

            var addRows = function addRows(children) {
                if (!children) {
                    return;
                }
                children.forEach(function (c) {
                    flatRows.push(c);

                    if (c.expanded) {
                        addRows(c.children);
                    }
                });
            };

            addRows(this.rows);

            return flatRows;
        }
    }, {
        key: "handle",
        value: function handle(row) {
            var flatRows = this.flatRows();

            if (this.shiftPressed && !this.single) {
                flatRows.forEach(function (r) {
                    return r.selected = false;
                });
                if (this.rangeStartRow == null) {
                    this.rangeStartRow = this.lastSelected;
                    if (this.rangeStartRow == null) {
                        this.rangeStartRow = row;
                    }
                    this.lastSelected = row;
                    row.selected = true;
                } else {
                    var startIndex = Math.min(this.rangeStartRow.index, row.index);
                    var endIndex = Math.max(this.rangeStartRow.index, row.index);
                    flatRows.forEach(function (r) {
                        if (r.index >= startIndex && r.index <= endIndex) {
                            r.selected = true;
                        }
                    });
                    this.lastSelected = row;
                }
            } else if (this.controlPressed && !this.singleF) {
                row.selected = !row.selected;
                this.rangeStartRow = row;
                this.lastSelected = row;
            } else {
                flatRows.forEach(function (r) {
                    return r.selected = false;
                });
                row.selected = true;
                this.rangeStartRow = row;
                this.lastSelected = row;
            }

            this.invoke("change");
        }
    }, {
        key: "getSelectedData",
        value: function getSelectedData() {
            return _.map(_.filter(this.flatRows(), function (r) {
                return r.selected;
            }), function (r) {
                return r.data;
            });
        }
    }, {
        key: "toggleAll",
        value: function toggleAll() {
            var _this2 = this;

            this.flatRows().forEach(function (r) {
                return r.selected = !_this2.allSelected;
            });
            this.allSelected = !this.allSelected;
            this.lastSelected = null;
            this.rangeStartRow = null;

            this.invoke("change");
        }
    }, {
        key: "clear",
        value: function clear() {
            this.flatRows().forEach(function (r) {
                return r.selected = false;
            });
            this.allSelected = false;
            this.lastSelected = null;
            this.rangeStartRow = null;

            this.invoke("change");
        }
    }, {
        key: "down",
        value: function down() {
            var flatRows = this.flatRows();

            if (!flatRows || flatRows.length == 0) {
                return;
            }

            var index = -1;
            if (this.lastSelected != null) {
                index = flatRows.indexOf(this.lastSelected);
            }

            index++;
            if (index >= flatRows.length) {
                index = 0;
            }
            var newRow = flatRows[index];
            this.handle(newRow);
        }
    }, {
        key: "up",
        value: function up() {
            var flatRows = this.flatRows();

            if (!flatRows || flatRows.length == 0) {
                return;
            }

            var index = -1;
            if (this.lastSelected != null) {
                index = flatRows.indexOf(this.lastSelected);
            }

            index--;
            if (index < 0) {
                index = flatRows.length - 1;
            }
            var newRow = flatRows[index];
            this.handle(newRow);
        }
    }]);

    return Selection;
}(_events.Observable);

var STANDARD_SEARCH_FORM_DESCRIPTOR = function STANDARD_SEARCH_FORM_DESCRIPTOR(column) {
    return _.assign({}, {
        showInCard: false,
        fields: [{
            property: column.property,
            label: (0, _strings2.default)("value"),
            placeholder: (0, _strings2.default)("value"),
            control: forms().Text
        }, {
            property: "_filterType",
            label: (0, _strings2.default)("filterType"),
            control: forms().Select,
            props: {
                allowNull: false,
                datasource: datasource.fixed([{ label: "Equals", value: "eq" }, { label: "Like", value: "like" }])
            }
        }]
    });
};

var SearchDialog = exports.SearchDialog = function (_React$Component) {
    _inherits(SearchDialog, _React$Component);

    function SearchDialog(props) {
        _classCallCheck(this, SearchDialog);

        var _this3 = _possibleConstructorReturn(this, (SearchDialog.__proto__ || Object.getPrototypeOf(SearchDialog)).call(this, props));

        _this3.model = new (forms().Model)();
        return _this3;
    }

    _createClass(SearchDialog, [{
        key: "componentDidMount",
        value: function componentDidMount() {}
    }, {
        key: "onChangeValue",
        value: function onChangeValue(e) {
            var value = e.target.value;
            this.setState(_.assign(this.state, { value: value }));
        }
    }, {
        key: "onTypeChange",
        value: function onTypeChange(e) {
            var type = e.target.value;
            this.setState(_.assign(this.state, { type: type }));
        }
    }, {
        key: "close",
        value: function close() {
            var me = ReactDOM.findDOMNode(this);
            $(me).modal("hide");
        }
    }, {
        key: "getFilterType",
        value: function getFilterType() {
            return (0, _lang.optional)(this.props.column.filterType, "eq");
        }
    }, {
        key: "filter",
        value: function filter() {
            var _this4 = this;

            if (this.props.query && this.props.column && this.props.column.property) {
                var filterType = (0, _lang.optional)(this.model.get("_filterType"), this.getFilterType());
                var data = this.model.sanitized();
                _.each(_.keys(data), function (k) {
                    if (k !== "_filterType") {
                        _this4.props.query.filter(filterType, k, data[k]);
                    }
                });

                this.close();
            }
        }
    }, {
        key: "render",
        value: function render() {
            var column = this.props.column;
            var searchForm = STANDARD_SEARCH_FORM_DESCRIPTOR(column);
            if (!_.isEmpty(column.searchForm)) {
                searchForm = column.searchForm;
            }
            this.model.descriptor = searchForm;

            var FormBody = forms().FormBody;

            return React.createElement(
                "div",
                { className: "search-dialog modal fade", role: "dialog", tabIndex: "-1", style: { display: "none", zIndex: 1500 } },
                React.createElement(
                    "div",
                    { className: "modal-dialog" },
                    React.createElement(
                        "div",
                        { className: "modal-content" },
                        React.createElement(
                            "div",
                            { className: "modal-header" },
                            React.createElement(
                                "h4",
                                { className: "modal-title" },
                                this.props.column.header
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "modal-body" },
                            React.createElement(
                                "div",
                                { className: "row" },
                                React.createElement(FormBody, { model: this.model, descriptor: searchForm })
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "modal-footer" },
                            React.createElement(
                                "button",
                                { type: "button", className: "btn btn-link waves-effect", onClick: this.filter.bind(this) },
                                (0, _strings2.default)("search")
                            ),
                            React.createElement(
                                "button",
                                { type: "button", className: "btn btn-link waves-effect", "data-dismiss": "modal" },
                                (0, _strings2.default)("close")
                            )
                        )
                    )
                )
            );
        }
    }]);

    return SearchDialog;
}(React.Component);

var HeaderCell = exports.HeaderCell = function (_React$Component2) {
    _inherits(HeaderCell, _React$Component2);

    function HeaderCell(props) {
        _classCallCheck(this, HeaderCell);

        var _this5 = _possibleConstructorReturn(this, (HeaderCell.__proto__ || Object.getPrototypeOf(HeaderCell)).call(this, props));

        _this5.state = { sorting: false, sortDescending: false };
        return _this5;
    }

    _createClass(HeaderCell, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var me = $(ReactDOM.findDOMNode(this));
            var button = $(this.refs.search);

            me.mouseenter(function () {
                button.css({ opacity: 0 }).show().stop().animate({ opacity: 1 }, 250);
            }).mouseleave(function () {
                button.stop().animate({ opacity: 0 }, 250);
            });
        }
    }, {
        key: "changeSort",
        value: function changeSort() {
            if (!this.props.column.sortable) {
                return;
            }

            var newState = null;

            if (this.state.sorting == false) {
                newState = { sorting: true, sortDescending: false };
            } else if (this.state.sortDescending == false) {
                newState = { sorting: true, sortDescending: true };
            } else {
                newState = { sorting: false, sortDescending: false };
            }

            if (this.props.query) {
                if (newState.sorting) {
                    this.props.query.sort(this.props.column.property, newState.sortDescending);
                } else {
                    this.props.query.unsort(this.props.column.property);
                }
            }

            this.setState(newState);
        }
    }, {
        key: "search",
        value: function search() {
            var me = ReactDOM.findDOMNode(this);
            $(me).find(".search-dialog").modal();
        }
    }, {
        key: "render",
        value: function render() {
            var sortIcon = "zmdi zmdi-unfold-more";
            if (this.state.sorting && this.state.sortDescending) {
                sortIcon = "zmdi zmdi-caret-down";
            } else if (this.state.sorting && !this.state.sortDescending) {
                sortIcon = "zmdi zmdi-caret-up";
            }

            return React.createElement(
                "th",
                { className: "hover", style: { position: "relative" } },
                React.createElement(
                    "span",
                    { onClick: this.changeSort.bind(this), className: "pointer-cursor" },
                    this.props.column.header
                ),
                this.props.column.sortable && React.createElement(
                    "a",
                    { className: "pull-right", href: "javascript:;", onClick: this.changeSort.bind(this) },
                    React.createElement("i", { className: sortIcon })
                ),
                this.props.column.searchable && React.createElement(
                    "a",
                    { ref: "search", className: "btn btn-primary btn-no-shadow", href: "javascript:;", onClick: this.search.bind(this), style: { display: "none", marginTop: "-5px", position: "absolute", right: "30px" } },
                    React.createElement("i", { className: "zmdi zmdi-search" })
                ),
                this.props.column.searchable && React.createElement(SearchDialog, { column: this.props.column, query: this.props.query })
            );
        }
    }]);

    return HeaderCell;
}(React.Component);

var GridHeader = exports.GridHeader = function (_React$Component3) {
    _inherits(GridHeader, _React$Component3);

    function GridHeader() {
        _classCallCheck(this, GridHeader);

        return _possibleConstructorReturn(this, (GridHeader.__proto__ || Object.getPrototypeOf(GridHeader)).apply(this, arguments));
    }

    _createClass(GridHeader, [{
        key: "render",
        value: function render() {
            var _this7 = this;

            if (_.isEmpty(this.props.descriptor)) {
                return null;
            }

            var id = 1;
            var headerCells = this.props.descriptor.columns.map(function (c) {
                return React.createElement(HeaderCell, { key: id++, column: c, query: _this7.props.query });
            });

            return React.createElement(
                "thead",
                null,
                React.createElement(
                    "tr",
                    null,
                    headerCells
                )
            );
        }
    }]);

    return GridHeader;
}(React.Component);

var Row = exports.Row = function (_React$Component4) {
    _inherits(Row, _React$Component4);

    function Row(props) {
        _classCallCheck(this, Row);

        return _possibleConstructorReturn(this, (Row.__proto__ || Object.getPrototypeOf(Row)).call(this, props));
    }

    _createClass(Row, [{
        key: "doubleClick",
        value: function doubleClick(e) {
            if (_.isFunction(this.props.onDoubleClick)) {
                this.props.onDoubleClick(this.props.row);
                e.stopPropagation();
                e.preventDefault();
                clearSelection();
            }
        }
    }, {
        key: "onMouseDown",
        value: function onMouseDown(e) {
            if (_.isFunction(this.props.onMouseDown)) {
                this.props.onMouseDown(this.props.row);
                e.stopPropagation();
            }
        }
    }, {
        key: "componentDidMount",
        value: function componentDidMount() {
            var expandedNow = this.props.row.expandedNow || false;
            if (expandedNow) {
                var me = ReactDOM.findDOMNode(this);
                this.props.row.expandedNow = undefined;
                $(me).find("td").css({ paddingTop: 0, paddingBottom: 0 }).stop().animate({ paddingTop: CELL_PADDING_TOP, paddingBottom: CELL_PADDING_BOTTOM }, EXPAND_ANIMATION_TIME).end().find(".grid-cell-container").hide().slideDown(EXPAND_ANIMATION_TIME);
            }
        }
    }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate() {
            var collapsedNow = this.props.row.collapsedNow || false;
            if (collapsedNow) {
                var me = ReactDOM.findDOMNode(this);
                this.props.row.collapsedNow = undefined;
                $(me).find("td").stop().animate({ paddingTop: 0, paddingBottom: 0 }, EXPAND_ANIMATION_TIME).end().find(".grid-cell-container").slideUp(EXPAND_ANIMATION_TIME);
            }
        }
    }, {
        key: "render",
        value: function render() {
            var _this9 = this;

            if (_.isEmpty(this.props.descriptor)) {
                return null;
            }

            var onExpand = function onExpand(row) {
                if (_.isFunction(_this9.props.onExpand)) {
                    _this9.props.onExpand(row);
                }
            };

            var firstElement = true;
            var key = 1;
            var cells = this.props.descriptor.columns.map(function (c) {
                var cell = createCell(c, _this9.props.row, firstElement, onExpand, c.props);
                firstElement = false;
                return React.createElement(
                    "td",
                    { key: key++, className: c.tdClassName },
                    React.createElement(
                        "div",
                        { className: "grid-cell-container" },
                        cell
                    )
                );
            });
            var className = "level-" + this.props.row.level + " " + (this.props.row.selected ? "selected" : "");
            var rowClassName = this.props.descriptor.rowClassName;
            if (rowClassName) {
                if (_.isFunction(rowClassName)) {
                    className += " " + rowClassName(this.props.row.data);
                } else {
                    className += " " + rowClassName;
                }
            }

            return React.createElement(
                "tr",
                { onMouseDown: this.onMouseDown.bind(this), onDoubleClick: this.doubleClick.bind(this), className: className },
                cells
            );
        }
    }]);

    return Row;
}(React.Component);

var GridBody = exports.GridBody = function (_React$Component5) {
    _inherits(GridBody, _React$Component5);

    function GridBody() {
        _classCallCheck(this, GridBody);

        return _possibleConstructorReturn(this, (GridBody.__proto__ || Object.getPrototypeOf(GridBody)).apply(this, arguments));
    }

    _createClass(GridBody, [{
        key: "onRowMouseDown",
        value: function onRowMouseDown(row) {
            if (_.isFunction(this.props.onRowMouseDown)) {
                this.props.onRowMouseDown(row);
            }
        }
    }, {
        key: "onRowDoubleClick",
        value: function onRowDoubleClick(row) {
            if (_.isFunction(this.props.onRowDoubleClick)) {
                this.props.onRowDoubleClick(row);
            }
        }
    }, {
        key: "onRowExpand",
        value: function onRowExpand(row) {
            if (_.isFunction(this.props.onRowExpand)) {
                this.props.onRowExpand(row);
            }
        }
    }, {
        key: "render",
        value: function render() {
            var _this11 = this;

            if (_.isEmpty(this.props.descriptor)) {
                return null;
            }

            var rows = this.props.data.rows || [];
            var rowElements = [];
            var level = this.props.level || 0;
            var index = 0;
            var addElements = function addElements(children, level, parentKey) {
                var key = 1;
                children.forEach(function (r) {
                    r.index = index++;
                    r.level = level;
                    var element = React.createElement(Row, {
                        key: parentKey + "_" + key++,
                        descriptor: _this11.props.descriptor,
                        row: r,
                        query: _this11.props.query,
                        onMouseDown: _this11.onRowMouseDown.bind(_this11),
                        onDoubleClick: _this11.onRowDoubleClick.bind(_this11),
                        onExpand: _this11.onRowExpand.bind(_this11) });

                    rowElements.push(element);

                    if (!_.isEmpty(r.children)) {
                        if (r.expanded) {
                            addElements(r.children, level + 1, parentKey + "_" + key);
                        }
                    }
                });
            };

            addElements(rows, level, "root");

            return React.createElement(
                "tbody",
                null,
                rowElements
            );
        }
    }]);

    return GridBody;
}(React.Component);

var FooterCell = exports.FooterCell = function (_React$Component6) {
    _inherits(FooterCell, _React$Component6);

    function FooterCell() {
        _classCallCheck(this, FooterCell);

        return _possibleConstructorReturn(this, (FooterCell.__proto__ || Object.getPrototypeOf(FooterCell)).apply(this, arguments));
    }

    _createClass(FooterCell, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "th",
                null,
                this.props.column.header
            );
        }
    }]);

    return FooterCell;
}(React.Component);

var GridFooter = exports.GridFooter = function (_React$Component7) {
    _inherits(GridFooter, _React$Component7);

    function GridFooter() {
        _classCallCheck(this, GridFooter);

        return _possibleConstructorReturn(this, (GridFooter.__proto__ || Object.getPrototypeOf(GridFooter)).apply(this, arguments));
    }

    _createClass(GridFooter, [{
        key: "render",
        value: function render() {
            var _this14 = this;

            if (_.isEmpty(this.props.descriptor)) {
                return null;
            }

            var id = 1;
            var footerCells = this.props.descriptor.columns.map(function (c) {
                return React.createElement(FooterCell, { key: id++, column: c, query: _this14.props.query });
            });

            return React.createElement(
                "tfoot",
                null,
                React.createElement(
                    "tr",
                    null,
                    footerCells
                )
            );
        }
    }]);

    return GridFooter;
}(React.Component);

var Cell = exports.Cell = function (_React$Component8) {
    _inherits(Cell, _React$Component8);

    function Cell() {
        _classCallCheck(this, Cell);

        return _possibleConstructorReturn(this, (Cell.__proto__ || Object.getPrototypeOf(Cell)).apply(this, arguments));
    }

    return Cell;
}(React.Component);

var EditTextCell = exports.EditTextCell = function (_Cell) {
    _inherits(EditTextCell, _Cell);

    function EditTextCell(props) {
        _classCallCheck(this, EditTextCell);

        var _this16 = _possibleConstructorReturn(this, (EditTextCell.__proto__ || Object.getPrototypeOf(EditTextCell)).call(this, props));

        _this16.state = { value: "" };
        return _this16;
    }

    _createClass(EditTextCell, [{
        key: "componentWillUpdate",
        value: function componentWillUpdate(nextProps, nextState) {
            if (nextProps.value != nextState.value) {
                this.setState({ value: nextProps.value });
            }
        }
    }, {
        key: "componentDidMount",
        value: function componentDidMount() {
            this.setState({ value: this.props.value });
        }
    }, {
        key: "onValueChange",
        value: function onValueChange(e) {
            var newValue = e.target.value;
            this.setState({ value: newValue });

            if (_.isFunction(this.props.onValueChange)) {
                var column = this.props.column;
                var property = this.props.property;
                var row = this.props.row;
                this.props.onValueChange(column, row.data, newValue);
            }
        }
    }, {
        key: "render",
        value: function render() {
            var column = this.props.column;
            var property = this.props.property;
            var row = this.props.row;

            return React.createElement(
                "div",
                { className: "edit-text-cell" },
                React.createElement("input", {
                    type: (0, _lang.optional)(this.props.type, "text"),
                    className: "form-control input-sm",
                    "data-property": property,
                    placeholder: this.props.placeholder,
                    value: (0, _lang.optional)(this.state.value, ""),
                    onChange: this.onValueChange.bind(this) })
            );
        }
    }]);

    return EditTextCell;
}(Cell);

var TextCell = exports.TextCell = function (_Cell2) {
    _inherits(TextCell, _Cell2);

    function TextCell() {
        _classCallCheck(this, TextCell);

        return _possibleConstructorReturn(this, (TextCell.__proto__ || Object.getPrototypeOf(TextCell)).apply(this, arguments));
    }

    _createClass(TextCell, [{
        key: "toggleExpand",
        value: function toggleExpand(e) {
            if (_.isFunction(this.props.onExpand)) {
                this.props.onExpand(this.props.row);
                e.preventDefault();
                e.stopPropagation();
                e.nativeEvent.stopImmediatePropagation();
            }
        }
    }, {
        key: "render",
        value: function render() {
            var marginLeft = 30 * (this.props.row.level || 0);
            var icon = "zmdi ";
            if (!this.props.row.expanded) {
                icon += " zmdi-plus";
            } else {
                icon += " zmdi-minus";
            }

            var formatter = _.isFunction(this.props.formatter) ? this.props.formatter : function (v) {
                return v;
            };

            var caret = !_.isEmpty(this.props.row.children) && this.props.firstElement ? React.createElement(
                "a",
                { style: { marginLeft: marginLeft, marginRight: 20 }, href: "javascript:;", className: "expand-button", onClick: this.toggleExpand.bind(this), onMouseDown: function onMouseDown(e) {
                        return e.stopPropagation();
                    } },
                React.createElement("i", { className: "c-black " + icon })
            ) : null;

            var style = {};
            if (caret == null && this.props.row.level > 0 && this.props.firstElement) {
                style.marginLeft = marginLeft + 20;
            }

            return React.createElement(
                "div",
                null,
                caret,
                React.createElement(
                    "span",
                    { style: style },
                    formatter(this.props.value)
                )
            );
        }
    }]);

    return TextCell;
}(Cell);

var CheckCell = exports.CheckCell = function (_Cell3) {
    _inherits(CheckCell, _Cell3);

    function CheckCell() {
        _classCallCheck(this, CheckCell);

        return _possibleConstructorReturn(this, (CheckCell.__proto__ || Object.getPrototypeOf(CheckCell)).apply(this, arguments));
    }

    _createClass(CheckCell, [{
        key: "render",
        value: function render() {
            var checked = this.props.value === true || this.props.value === "true" || parseInt(this.props.value) > 0;
            var icon = checked ? "zmdi zmdi-check" : "zmdi zmdi-square-o";

            return React.createElement("i", { className: icon });
        }
    }]);

    return CheckCell;
}(Cell);

var ActionsCell = exports.ActionsCell = function (_Cell4) {
    _inherits(ActionsCell, _Cell4);

    function ActionsCell() {
        _classCallCheck(this, ActionsCell);

        return _possibleConstructorReturn(this, (ActionsCell.__proto__ || Object.getPrototypeOf(ActionsCell)).apply(this, arguments));
    }

    _createClass(ActionsCell, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var me = ReactDOM.findDOMNode(this);
            var showAlways = (0, _lang.parseBoolean)(this.props.showAlways);
            if (!showAlways) {
                $(me).closest("tr").mouseenter(function () {
                    $(me).find(".grid-action").stop().fadeIn(250);
                }).mouseleave(function () {
                    $(me).find(".grid-action").stop().fadeOut(250);
                });
            }
        }
    }, {
        key: "render",
        value: function render() {
            var _this20 = this;

            var actionKey = 1;
            var actions = this.props.column.actions.map(function (a) {
                return React.createElement(_common.Actions.getButtonClass(a), { key: actionKey++, action: a, arguments: [_this20.props.row.data], className: "grid-action" });
            });

            return React.createElement(
                "div",
                { className: "grid-actions-container" },
                actions
            );
        }
    }]);

    return ActionsCell;
}(Cell);

var KeywordSearch = exports.KeywordSearch = function (_React$Component9) {
    _inherits(KeywordSearch, _React$Component9);

    function KeywordSearch() {
        _classCallCheck(this, KeywordSearch);

        return _possibleConstructorReturn(this, (KeywordSearch.__proto__ || Object.getPrototypeOf(KeywordSearch)).apply(this, arguments));
    }

    _createClass(KeywordSearch, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "col-md-offset-8 col-md-4 keyword-search" },
                React.createElement(
                    "form",
                    { action: "javascript:;" },
                    React.createElement(
                        "div",
                        { className: "input-group" },
                        React.createElement(
                            "span",
                            { className: "input-group-addon" },
                            React.createElement("i", { className: "zmdi zmdi-search" })
                        ),
                        React.createElement(
                            "div",
                            { className: "fg-line" },
                            React.createElement("input", { type: "text", className: "form-control", placeholder: "Search..." })
                        )
                    )
                )
            );
        }
    }]);

    return KeywordSearch;
}(React.Component);

var Filter = exports.Filter = function (_React$Component10) {
    _inherits(Filter, _React$Component10);

    function Filter() {
        _classCallCheck(this, Filter);

        return _possibleConstructorReturn(this, (Filter.__proto__ || Object.getPrototypeOf(Filter)).apply(this, arguments));
    }

    _createClass(Filter, [{
        key: "unfilter",
        value: function unfilter() {
            if (!this.props.query) {
                return;
            }

            this.props.query.unfilter(this.props.data.property);
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "button",
                { onClick: this.unfilter.bind(this), className: "btn btn-no-shadow btn-primary waves-effect m-r-10" },
                this.props.data.property,
                " ",
                React.createElement("i", { className: "zmdi zmdi-close" })
            );
        }
    }]);

    return Filter;
}(React.Component);

var Filters = exports.Filters = function (_React$Component11) {
    _inherits(Filters, _React$Component11);

    function Filters() {
        _classCallCheck(this, Filters);

        return _possibleConstructorReturn(this, (Filters.__proto__ || Object.getPrototypeOf(Filters)).apply(this, arguments));
    }

    _createClass(Filters, [{
        key: "clearFilters",
        value: function clearFilters() {
            if (!this.props.query) {
                return;
            }

            this.props.query.clearFilters();
        }
    }, {
        key: "render",
        value: function render() {
            var _this24 = this;

            var filters = [];
            if (this.props.query) {
                filters = this.props.query.filters.map(function (f) {
                    return React.createElement(Filter, { key: f.property + f.type + f.value, data: f, query: _this24.props.query });
                });
            }

            var actions = [{ icon: "zmdi zmdi-delete", action: this.clearFilters.bind(this) }];

            return React.createElement(
                "div",
                { className: "filters p-30" },
                React.createElement(
                    "button",
                    { type: "button", onClick: this.clearFilters.bind(this), className: "btn btn-no-shadow btn-primary waves-effect m-r-10" },
                    React.createElement("i", { className: "zmdi zmdi-delete" })
                ),
                filters
            );
        }
    }]);

    return Filters;
}(React.Component);

var Pagination = exports.Pagination = function (_React$Component12) {
    _inherits(Pagination, _React$Component12);

    function Pagination() {
        _classCallCheck(this, Pagination);

        return _possibleConstructorReturn(this, (Pagination.__proto__ || Object.getPrototypeOf(Pagination)).apply(this, arguments));
    }

    _createClass(Pagination, [{
        key: "changePage",
        value: function changePage(page) {
            this.props.query.setPage(page);
        }
    }, {
        key: "getTotalPages",
        value: function getTotalPages() {
            if (!this.props.data || !this.props.data.rows || !this.props.query) {
                return 1;
            }

            var totalPages = parseInt(Math.ceil(this.props.data.totalRows / this.props.query.rowsPerPage));
            return totalPages;
        }
    }, {
        key: "nextPage",
        value: function nextPage() {
            var totalPages = this.getTotalPages();
            if (this.props.query.page < totalPages) {
                this.props.query.setPage(this.props.query.page + 1);
            }
        }
    }, {
        key: "previousPage",
        value: function previousPage() {
            if (this.props.query.page > 1) {
                this.props.query.setPage(this.props.query.page - 1);
            }
        }
    }, {
        key: "firstPage",
        value: function firstPage() {
            this.props.query.setPage(1);
        }
    }, {
        key: "lastPage",
        value: function lastPage() {
            this.props.query.setPage(this.getTotalPages());
        }
    }, {
        key: "render",
        value: function render() {
            var _this26 = this;

            if (_.isEmpty(this.props.query) || _.isEmpty(this.props.data.rows)) {
                return null;
            }

            var totalPages = this.getTotalPages();
            var visible = totalPages > 1;
            var page = parseInt(this.props.query.page || 1);
            var pages = [];
            var visiblePages = [];
            if (totalPages > 10) {
                if (page > 1) {
                    visiblePages.push(page - 1);
                }
                visiblePages.push(page);
                if (page < totalPages) {
                    visiblePages.push(page + 1);
                }

                var range = 10;
                if (totalPages > 100) {
                    range = 100;
                } else if (totalPages > 1000) {
                    range = 1000;
                }

                visiblePages = _.sortBy(_.union(visiblePages, _.range(range, totalPages, range)), function (i) {
                    return i;
                });
            } else {
                visiblePages = _.range(1, totalPages + 1);
            }
            visiblePages.forEach(function (i) {
                var active = i === page ? "active" : "";
                pages.push(React.createElement(
                    "li",
                    { key: i, className: active },
                    React.createElement(
                        "a",
                        { href: "javascript:;", onClick: _this26.changePage.bind(_this26, i) },
                        i
                    )
                ));
            });

            return React.createElement(
                "ul",
                { className: "pagination", hidden: !visible },
                React.createElement(
                    "li",
                    null,
                    React.createElement(
                        "a",
                        { href: "javascript:;", onClick: this.firstPage.bind(this), "aria-label": "First" },
                        React.createElement("i", { className: "zmdi zmdi-arrow-left" })
                    )
                ),
                React.createElement(
                    "li",
                    null,
                    React.createElement(
                        "a",
                        { href: "javascript:;", onClick: this.previousPage.bind(this), "aria-label": "Previous" },
                        React.createElement("i", { className: "zmdi zmdi-chevron-left" })
                    )
                ),
                pages,
                React.createElement(
                    "li",
                    null,
                    React.createElement(
                        "a",
                        { href: "javascript:;", onClick: this.nextPage.bind(this), "aria-label": "Next" },
                        React.createElement("i", { className: "zmdi zmdi-chevron-right" })
                    )
                ),
                React.createElement(
                    "li",
                    null,
                    React.createElement(
                        "a",
                        { href: "javascript:;", onClick: this.lastPage.bind(this), "aria-label": "First" },
                        React.createElement("i", { className: "zmdi zmdi-arrow-right" })
                    )
                )
            );
        }
    }]);

    return Pagination;
}(React.Component);

var ResultSummary = exports.ResultSummary = function (_React$Component13) {
    _inherits(ResultSummary, _React$Component13);

    function ResultSummary() {
        _classCallCheck(this, ResultSummary);

        return _possibleConstructorReturn(this, (ResultSummary.__proto__ || Object.getPrototypeOf(ResultSummary)).apply(this, arguments));
    }

    _createClass(ResultSummary, [{
        key: "render",
        value: function render() {
            var totalRows = 0;
            var start = 0;
            var stop = 0;
            var rowsPerPage = 0;
            var page = 0;
            if (this.props.query && this.props.data.rows) {
                rowsPerPage = this.props.query.rowsPerPage || 0;
                totalRows = this.props.data.totalRows;
                page = parseInt(this.props.query.page || 1);
                start = (page - 1) * rowsPerPage + 1;
                stop = Math.min(page * rowsPerPage, totalRows);
            }

            return React.createElement(
                "p",
                { className: "result-summary" },
                (0, _lang.format)((0, _strings2.default)("pagination"), start, stop, totalRows)
            );
        }
    }]);

    return ResultSummary;
}(React.Component);

var NoCard = exports.NoCard = function (_React$Component14) {
    _inherits(NoCard, _React$Component14);

    function NoCard() {
        _classCallCheck(this, NoCard);

        return _possibleConstructorReturn(this, (NoCard.__proto__ || Object.getPrototypeOf(NoCard)).apply(this, arguments));
    }

    _createClass(NoCard, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                null,
                this.props.children
            );
        }
    }]);

    return NoCard;
}(React.Component);

var QuickSearch = exports.QuickSearch = function (_React$Component15) {
    _inherits(QuickSearch, _React$Component15);

    function QuickSearch(props) {
        _classCallCheck(this, QuickSearch);

        var _this29 = _possibleConstructorReturn(this, (QuickSearch.__proto__ || Object.getPrototypeOf(QuickSearch)).call(this, props));

        _this29._onChange = _.debounce(function (keyword) {
            if (!_.isEmpty(_this29.props.query)) {
                _this29.props.query.setKeyword(keyword);
            }
        }, 250);

        return _this29;
    }

    _createClass(QuickSearch, [{
        key: "onChange",
        value: function onChange(e) {
            this._onChange(e.target.value);
        }
    }, {
        key: "onKeyDown",
        value: function onKeyDown(e) {
            if ((0, _keyboard.isEnter)(e.which)) {
                e.preventDefault();
            }
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "quick-search-container" },
                React.createElement(
                    "div",
                    { className: "quick-search" },
                    React.createElement("i", { className: "zmdi zmdi-search pull-right" }),
                    React.createElement(
                        "div",
                        { className: "quick-search-input-container" },
                        React.createElement("input", { type: "search", onKeyDown: this.onKeyDown.bind(this), onChange: this.onChange.bind(this) })
                    )
                )
            );
        }
    }]);

    return QuickSearch;
}(React.Component);

var Grid = exports.Grid = function (_React$Component16) {
    _inherits(Grid, _React$Component16);

    function Grid(props) {
        _classCallCheck(this, Grid);

        var _this30 = _possibleConstructorReturn(this, (Grid.__proto__ || Object.getPrototypeOf(Grid)).call(this, props));

        _this30.selection = null;
        _this30.state = { rows: null };

        _this30.initSelection(props);
        return _this30;
    }

    _createClass(Grid, [{
        key: "getTotalRows",
        value: function getTotalRows() {
            var totalRows = parseInt(this.props.data.totalRows);
            return totalRows;
        }
    }, {
        key: "onKeyPress",
        value: function onKeyPress(e) {}
    }, {
        key: "onBlur",
        value: function onBlur() {
            //if (this.selection) this.selection.clear()
        }
    }, {
        key: "onKeyDown",
        value: function onKeyDown(e) {
            var me = ReactDOM.findDOMNode(this);
            if (this.selection != null) {
                if ((0, _keyboard.isShift)(e.which)) {
                    me.onselectstart = function () {
                        return false;
                    };
                    this.selection.shiftPressed = true;
                    e.preventDefault();
                    return;
                } else if ((0, _keyboard.isControl)(e.which)) {
                    this.selection.controlPressed = true;
                    e.preventDefault();
                    return;
                } else if ((0, _keyboard.isUp)(e.which)) {
                    this.selection.up();
                    e.preventDefault();
                    return;
                } else if ((0, _keyboard.isDown)(e.which)) {
                    this.selection.down();
                    e.preventDefault();
                    return;
                } else if ((0, _keyboard.isEsc)(e.which)) {
                    this.selection.clear();
                    e.preventDefault();
                    return;
                }
            }

            if (_.isFunction(this.props.onKeyDown)) {
                this.props.onKeyDown(e);
            }
        }
    }, {
        key: "onKeyUp",
        value: function onKeyUp(e) {
            var me = ReactDOM.findDOMNode(this);
            if (this.selection != null) {
                if ((0, _keyboard.isShift)(e.which)) {
                    me.onselectstart = null;
                    this.selection.shiftPressed = false;
                    e.preventDefault();
                    return;
                } else if ((0, _keyboard.isControl)(e.which)) {
                    this.selection.controlPressed = false;
                    e.preventDefault();
                    return;
                }
            }

            if (_.isFunction(this.props.onKeyUp)) {
                this.props.onKeyUp(e);
            }
        }
    }, {
        key: "onRowMouseDown",
        value: function onRowMouseDown(row) {
            var selectionEnabled = (0, _lang.optional)((0, _lang.parseBoolean)(this.props.selectionEnabled), true);
            if (!selectionEnabled) {
                return;
            }

            this.selection.handle(row);
        }
    }, {
        key: "onRowDoubleClick",
        value: function onRowDoubleClick(row) {
            if (_.isFunction(this.props.onRowDoubleClick)) {
                this.props.onRowDoubleClick(row.data);
            }
        }
    }, {
        key: "onRowExpand",
        value: function onRowExpand(row) {
            var _this31 = this;

            var expanded = !row.expanded;

            if (expanded) {
                eachChildren(row.children, function (r) {
                    return r.expandedNow = true;
                });
            } else {
                eachChildren(row.children, function (r) {
                    return r.collapsedNow = true;
                });
            }
            if (!expanded) {
                this.forceUpdate();

                setTimeout(function () {
                    row.expanded = expanded;
                    _this31.forceUpdate();
                }, EXPAND_ANIMATION_TIME);
            } else {
                row.expanded = expanded;
                this.forceUpdate();
            }
        }
    }, {
        key: "initSelection",
        value: function initSelection(props) {
            var _this32 = this;

            var selectionEnabled = (0, _lang.optional)((0, _lang.parseBoolean)(props.selectionEnabled), true);
            if (!selectionEnabled) {
                return;
            }

            var rows = props.data && props.data.rows;
            if (rows) {
                this.selection = new Selection(rows);
                this.selection.single = props.selectionMode === "single";
                this.selection.on("change", function () {
                    _this32.setState(_this32.state);
                    if (_.isFunction(_this32.props.onSelectionChanged)) {
                        _this32.props.onSelectionChanged(_this32.selection.getSelectedData());
                    }
                });
            }
        }
    }, {
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(nextProps) {
            this.initSelection(nextProps);

            var rows = nextProps.data && nextProps.data.rows;
            this.setState(_.assign(this.state, { rows: rows }));
        }
    }, {
        key: "toggleSelectAll",
        value: function toggleSelectAll() {
            var selectionEnabled = (0, _lang.optional)((0, _lang.parseBoolean)(this.props.selectionEnabled), true);
            if (!selectionEnabled) {
                return;
            }

            if (this.selection) {
                this.selection.toggleAll();
            }
        }
    }, {
        key: "clearSelection",
        value: function clearSelection() {
            var selectionEnabled = (0, _lang.optional)((0, _lang.parseBoolean)(this.props.selectionEnabled), true);
            if (!selectionEnabled) {
                return;
            }

            if (this.selection) {
                this.selection.clear();
            }
        }
    }, {
        key: "getSelection",
        value: function getSelection() {
            var selectionEnabled = (0, _lang.optional)((0, _lang.parseBoolean)(this.props.selectionEnabled), true);
            if (!selectionEnabled) {
                return;
            }

            if (this.selection) {
                return this.selection.getSelectedData();
            } else {
                return null;
            }
        }
    }, {
        key: "getTotalPages",
        value: function getTotalPages() {
            if (!this.props.data || !this.props.data.rows || !this.props.query) {
                return 1;
            }

            var totalPages = parseInt(Math.ceil(this.props.data.totalRows / this.props.query.rowsPerPage));
            return totalPages;
        }
    }, {
        key: "render",
        value: function render() {
            var _this33 = this;

            if (_.isEmpty(this.props.descriptor)) {
                return null;
            }

            //customization properties
            var quickSearchEnabled = (0, _lang.optional)((0, _lang.parseBoolean)(this.props.quickSearchEnabled), false);
            var headerVisible = (0, _lang.optional)((0, _lang.parseBoolean)(this.props.headerVisible), true);
            var footerVisible = (0, _lang.optional)((0, _lang.parseBoolean)(this.props.footerVisible), true);
            var summaryVisible = (0, _lang.optional)((0, _lang.parseBoolean)(this.props.summaryVisible), true);
            var noResultsVisible = (0, _lang.optional)((0, _lang.parseBoolean)(this.props.noResultsVisible), true);
            //let selectionEnabled = optional(parseBoolean(this.props.selectionEnabled), true)
            var paginationEnabled = (0, _lang.optional)((0, _lang.parseBoolean)(this.props.paginationEnabled), true);
            var tableClassName = (0, _lang.optional)(this.props.tableClassName, "table table-striped table-hover");
            var noResultsText = (0, _lang.optional)(this.props.noResultsText, (0, _strings2.default)("noResults"));

            var myQuery = (0, _lang.optional)(this.props.query, query.create());
            var showFilters = myQuery.filters.length > 0;
            var hasResults = this.props.data && this.props.data.rows ? this.props.data.rows.length > 0 : false;
            var hasPagination = this.getTotalPages() > 1;
            var Container = (0, _lang.optional)((0, _lang.parseBoolean)(this.props.showInCard), true) ? _common.Card : NoCard;
            var descriptor = mobile.isMobile() ? _.assign({}, this.props.descriptor, { columns: _.union(this.props.descriptor.columns, [{
                    cell: ActionsCell,
                    tdClassName: "grid-actions",
                    actions: [{ icon: "zmdi zmdi-edit", action: function action(row) {
                            if (_.isFunction(_this33.props.onRowDoubleClick)) {
                                _this33.props.onRowDoubleClick(row);
                            }
                        } }],
                    props: {
                        showAlways: true
                    }
                }]) }) : this.props.descriptor;

            return React.createElement(
                "div",
                { className: "grid", tabIndex: "0", onBlur: this.onBlur.bind(this), onKeyPress: this.onKeyPress.bind(this), onKeyUp: this.onKeyUp.bind(this), onKeyDown: this.onKeyDown.bind(this) },
                React.createElement(
                    Container,
                    null,
                    React.createElement(
                        "div",
                        null,
                        quickSearchEnabled && React.createElement(QuickSearch, { query: myQuery }),
                        showFilters && React.createElement(Filters, { query: myQuery }),
                        React.createElement("div", { className: "clearfix" }),
                        hasResults ? React.createElement(
                            "div",
                            { className: "with-result" },
                            React.createElement(
                                "table",
                                { className: tableClassName },
                                headerVisible && React.createElement(GridHeader, { descriptor: descriptor, query: myQuery }),
                                React.createElement(GridBody, { descriptor: descriptor, data: this.props.data, query: myQuery, onRowExpand: this.onRowExpand.bind(this), onRowMouseDown: this.onRowMouseDown.bind(this), onRowDoubleClick: this.onRowDoubleClick.bind(this) }),
                                footerVisible && React.createElement(GridFooter, { descriptor: descriptor })
                            ),
                            hasPagination && paginationEnabled && React.createElement(
                                "div",
                                { className: "pull-right m-20" },
                                React.createElement(Pagination, { data: this.props.data, query: myQuery })
                            ),
                            summaryVisible && React.createElement(ResultSummary, { query: myQuery, data: this.props.data }),
                            React.createElement("div", { className: "clearfix" })
                        ) : //no results
                        noResultsVisible && React.createElement(
                            "div",
                            { className: "no-results text-center p-30" },
                            React.createElement(
                                "h1",
                                null,
                                React.createElement("i", { className: "zmdi zmdi-info-outline" })
                            ),
                            React.createElement(
                                "h4",
                                null,
                                noResultsText
                            )
                        )
                    )
                )
            );
        }
    }]);

    return Grid;
}(React.Component);

function createCell(column, row, firstElement, onExpand) {
    var props = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};

    var key = column.property + "" + row.index;
    var value = row.data[column.property];

    return React.createElement(column.cell, _.assign({ key: key, column: column, property: column.property, row: row, value: value, firstElement: firstElement, onExpand: onExpand }, props));
}
});
define('web/components/layout.js', function(module, exports) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _stores = require("../../stores");

var _actions = require("../../actions");

var _ui = require("../utils/ui");

var ui = _interopRequireWildcard(_ui);

var _loader = require("./loader");

var _aj = require("../utils/aj");

var _lang = require("../../utils/lang");

var _strings = require("../../strings");

var _strings2 = _interopRequireDefault(_strings);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function showPageLoader() {
    $(".page-loader").show();
}

function hidePageLoader() {
    $(".page-loader").fadeOut(500);
}

var Header = function (_React$Component) {
    _inherits(Header, _React$Component);

    function Header() {
        _classCallCheck(this, Header);

        return _possibleConstructorReturn(this, (Header.__proto__ || Object.getPrototypeOf(Header)).apply(this, arguments));
    }

    _createClass(Header, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "header",
                { id: "header", className: "clearfix", "data-ma-theme": "blue" },
                React.createElement(
                    "ul",
                    { className: "h-inner" },
                    React.createElement(
                        "li",
                        { className: "hi-trigger ma-trigger", "data-ma-action": "sidebar-open", "data-ma-target": "#sidebar" },
                        React.createElement(
                            "div",
                            { className: "line-wrap" },
                            React.createElement("div", { className: "line top" }),
                            React.createElement("div", { className: "line center" }),
                            React.createElement("div", { className: "line bottom" })
                        )
                    ),
                    React.createElement(
                        "li",
                        { className: "hi-logo hidden-xs" },
                        React.createElement(
                            "a",
                            { href: "index.html" },
                            (0, _strings2.default)("appName")
                        )
                    ),
                    React.createElement(
                        "li",
                        { className: "pull-right" },
                        React.createElement(
                            "ul",
                            { className: "hi-menu" },
                            React.createElement(
                                "li",
                                { "data-ma-action": "search-open" },
                                React.createElement(
                                    "a",
                                    { href: "" },
                                    React.createElement("i", { className: "him-icon zmdi zmdi-search" })
                                )
                            ),
                            React.createElement(
                                "li",
                                { className: "dropdown" },
                                React.createElement(
                                    "a",
                                    { "data-toggle": "dropdown", href: "" },
                                    React.createElement("i", { className: "him-icon zmdi zmdi-more-vert" })
                                ),
                                React.createElement(
                                    "ul",
                                    { className: "dropdown-menu pull-right" },
                                    React.createElement(
                                        "li",
                                        { className: "hidden-xs" },
                                        React.createElement(
                                            "a",
                                            { "data-ma-action": "fullscreen", href: "" },
                                            "Toggle Fullscreen"
                                        )
                                    ),
                                    React.createElement(
                                        "li",
                                        null,
                                        React.createElement(
                                            "a",
                                            { href: "" },
                                            "Privacy Settings"
                                        )
                                    ),
                                    React.createElement(
                                        "li",
                                        null,
                                        React.createElement(
                                            "a",
                                            { href: "" },
                                            "Other Settings"
                                        )
                                    )
                                )
                            )
                        )
                    )
                ),
                React.createElement(
                    "div",
                    { className: "h-search-wrap" },
                    React.createElement(
                        "div",
                        { className: "hsw-inner" },
                        React.createElement("i", { className: "hsw-close zmdi zmdi-arrow-left", "data-ma-action": "search-close" }),
                        React.createElement("input", { type: "text" })
                    )
                )
            );
        }
    }]);

    return Header;
}(React.Component);

var ProfileBox = function (_React$Component2) {
    _inherits(ProfileBox, _React$Component2);

    function ProfileBox(props) {
        _classCallCheck(this, ProfileBox);

        var _this2 = _possibleConstructorReturn(this, (ProfileBox.__proto__ || Object.getPrototypeOf(ProfileBox)).call(this, props));

        (0, _aj.connect)(_this2, [_stores.SessionStore, _stores.UIStore]);

        _this2.state = {};
        return _this2;
    }

    _createClass(ProfileBox, [{
        key: "logout",
        value: function logout() {
            (0, _actions.logout)();
            ui.navigate("/login");
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            return React.createElement(
                "div",
                { className: "s-profile" },
                React.createElement(
                    "a",
                    { href: "", "data-ma-action": "profile-menu-toggle" },
                    this.state.cover && React.createElement("img", { src: this.state.cover, className: "cover", alt: "" }),
                    React.createElement(
                        "div",
                        { className: "sp-pic" },
                        this.state.profileImage ? React.createElement("img", { src: this.state.profileImage, alt: "" }) : React.createElement("img", { src: "theme/img/demo/profile-pics/1.jpg", alt: "" })
                    ),
                    React.createElement(
                        "div",
                        { className: "sp-info" },
                        (0, _lang.optional)(function () {
                            return _this3.state.user.name;
                        }, "NA"),
                        React.createElement("i", { className: "zmdi zmdi-caret-down" })
                    )
                ),
                React.createElement(
                    "ul",
                    { className: "main-menu" },
                    React.createElement(
                        "li",
                        null,
                        React.createElement(
                            "a",
                            { href: "" },
                            React.createElement("i", { className: "zmdi zmdi-account" }),
                            " View Profile"
                        )
                    ),
                    React.createElement(
                        "li",
                        null,
                        React.createElement(
                            "a",
                            { href: "" },
                            React.createElement("i", { className: "zmdi zmdi-input-antenna" }),
                            " Privacy Settings"
                        )
                    ),
                    React.createElement(
                        "li",
                        null,
                        React.createElement(
                            "a",
                            { href: "" },
                            React.createElement("i", { className: "zmdi zmdi-settings" }),
                            " Settings"
                        )
                    ),
                    React.createElement(
                        "li",
                        null,
                        React.createElement(
                            "a",
                            { href: "javascript:", onClick: this.logout.bind(this) },
                            React.createElement("i", { className: "zmdi zmdi-time-restore" }),
                            " Logout"
                        )
                    )
                )
            );
        }
    }]);

    return ProfileBox;
}(React.Component);

var MenuLevel = function (_React$Component3) {
    _inherits(MenuLevel, _React$Component3);

    function MenuLevel() {
        _classCallCheck(this, MenuLevel);

        return _possibleConstructorReturn(this, (MenuLevel.__proto__ || Object.getPrototypeOf(MenuLevel)).apply(this, arguments));
    }

    _createClass(MenuLevel, [{
        key: "onSelect",
        value: function onSelect(item) {
            if (item.href) {
                location.href = item.href;
            }

            if (_.isFunction(this.props.onSelect)) {
                this.props.onSelect(item);
            }

            var hasChildren = !_.isEmpty(item.children);
            if (hasChildren) {
                this.onExpand(item);
            }
        }
    }, {
        key: "onExpand",
        value: function onExpand(item) {
            if (_.isFunction(this.props.onExpand)) {
                this.props.onExpand(item);
            }
        }
    }, {
        key: "render",
        value: function render() {
            var _this5 = this;

            var menu = (0, _lang.optional)(this.props.menu, []);
            var isMainMenu = (0, _lang.optional)((0, _lang.parseBoolean)(this.props.isMainMenu), false);

            var key = 1;
            var items = menu.map(function (i) {
                var className = "";
                if (i.active) {
                    className += "active";
                }
                var hasChildren = !_.isEmpty(i.children);
                if (hasChildren) {
                    className += " sub-menu";
                }
                if (i.expanded) {
                    className += " toggled";
                }

                return React.createElement(
                    "li",
                    { key: key++, className: className },
                    React.createElement(
                        "a",
                        { href: "javascript:;", onClick: _this5.onSelect.bind(_this5, i), "data-ma-action": hasChildren ? "submenu-toggle" : undefined },
                        React.createElement("i", { className: i.icon }),
                        " ",
                        i.text
                    ),
                    hasChildren && React.createElement(MenuLevel, { parent: i, menu: i.children, onExpand: _this5.onExpand.bind(_this5, i), onSelect: _this5.onSelect.bind(_this5) })
                );
            });

            var expanded = !isMainMenu && this.props.parent.expanded === true;
            var style = {};
            if (expanded) {
                style.display = "block";
            }

            return React.createElement(
                "ul",
                { className: isMainMenu ? "main-menu" : undefined, style: style },
                items
            );
        }
    }]);

    return MenuLevel;
}(React.Component);

var MainMenu = function (_React$Component4) {
    _inherits(MainMenu, _React$Component4);

    function MainMenu() {
        _classCallCheck(this, MainMenu);

        return _possibleConstructorReturn(this, (MainMenu.__proto__ || Object.getPrototypeOf(MainMenu)).apply(this, arguments));
    }

    _createClass(MainMenu, [{
        key: "onExpand",
        value: function onExpand(item) {
            if (_.isFunction(this.props.onExpand)) {
                this.props.onExpand(item);
            }
        }
    }, {
        key: "onSelect",
        value: function onSelect(item) {
            if (_.isFunction(this.props.onSelect)) {
                this.props.onSelect(item);
            }
        }
    }, {
        key: "render",
        value: function render() {
            var menu = this.props.menu;

            return React.createElement(MenuLevel, { menu: menu, isMainMenu: "true", onExpand: this.onExpand.bind(this), onSelect: this.onSelect.bind(this) });
        }
    }]);

    return MainMenu;
}(React.Component);

var SideBar = function (_React$Component5) {
    _inherits(SideBar, _React$Component5);

    function SideBar() {
        _classCallCheck(this, SideBar);

        return _possibleConstructorReturn(this, (SideBar.__proto__ || Object.getPrototypeOf(SideBar)).apply(this, arguments));
    }

    _createClass(SideBar, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "aside",
                { id: "sidebar", className: "sidebar c-overflow" },
                React.createElement(ProfileBox, null),
                React.createElement(MainMenuContainer, null)
            );
        }
    }]);

    return SideBar;
}(React.Component);

var MainMenuContainer = function (_React$Component6) {
    _inherits(MainMenuContainer, _React$Component6);

    function MainMenuContainer(props) {
        _classCallCheck(this, MainMenuContainer);

        var _this8 = _possibleConstructorReturn(this, (MainMenuContainer.__proto__ || Object.getPrototypeOf(MainMenuContainer)).call(this, props));

        (0, _aj.connect)(_this8, _stores.MenuStore, { menu: [] });

        logger.i("Menu created");
        return _this8;
    }

    _createClass(MainMenuContainer, [{
        key: "onSelect",
        value: function onSelect(item) {
            (0, _actions.setActiveMenuItem)({ item: item });
        }
    }, {
        key: "onExpand",
        value: function onExpand(item) {
            (0, _actions.expandMenuItem)({ item: item });
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(MainMenu, { menu: this.state.menu, onExpand: this.onExpand.bind(this), onSelect: this.onSelect.bind(this) });
        }
    }]);

    return MainMenuContainer;
}(React.Component);

var Footer = function (_React$Component7) {
    _inherits(Footer, _React$Component7);

    function Footer() {
        _classCallCheck(this, Footer);

        return _possibleConstructorReturn(this, (Footer.__proto__ || Object.getPrototypeOf(Footer)).apply(this, arguments));
    }

    _createClass(Footer, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "footer",
                { id: "footer" },
                "Copyright 2017 Applica srl",
                React.createElement(
                    "ul",
                    { className: "f-menu" },
                    React.createElement(
                        "li",
                        null,
                        React.createElement(
                            "a",
                            { href: "" },
                            "Home"
                        )
                    ),
                    React.createElement(
                        "li",
                        null,
                        React.createElement(
                            "a",
                            { href: "" },
                            "Dashboard"
                        )
                    ),
                    React.createElement(
                        "li",
                        null,
                        React.createElement(
                            "a",
                            { href: "" },
                            "Reports"
                        )
                    ),
                    React.createElement(
                        "li",
                        null,
                        React.createElement(
                            "a",
                            { href: "" },
                            "Support"
                        )
                    ),
                    React.createElement(
                        "li",
                        null,
                        React.createElement(
                            "a",
                            { href: "" },
                            "Contact"
                        )
                    )
                )
            );
        }
    }]);

    return Footer;
}(React.Component);

var Layout = function (_React$Component8) {
    _inherits(Layout, _React$Component8);

    function Layout() {
        _classCallCheck(this, Layout);

        return _possibleConstructorReturn(this, (Layout.__proto__ || Object.getPrototypeOf(Layout)).apply(this, arguments));
    }

    _createClass(Layout, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                null,
                React.createElement(Header, null),
                React.createElement(
                    "section",
                    { id: "main" },
                    React.createElement(SideBar, null),
                    React.createElement(
                        "section",
                        { id: "content" },
                        React.createElement(
                            "div",
                            { className: "container" },
                            this.props.children
                        )
                    )
                ),
                React.createElement(Footer, null)
            );
        }
    }]);

    return Layout;
}(React.Component);

var FullScreenLayout = function (_React$Component9) {
    _inherits(FullScreenLayout, _React$Component9);

    function FullScreenLayout() {
        _classCallCheck(this, FullScreenLayout);

        return _possibleConstructorReturn(this, (FullScreenLayout.__proto__ || Object.getPrototypeOf(FullScreenLayout)).apply(this, arguments));
    }

    _createClass(FullScreenLayout, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                null,
                this.props.children
            );
        }
    }]);

    return FullScreenLayout;
}(React.Component);

var ScreenContainer = function (_React$Component10) {
    _inherits(ScreenContainer, _React$Component10);

    function ScreenContainer(props) {
        _classCallCheck(this, ScreenContainer);

        var _this12 = _possibleConstructorReturn(this, (ScreenContainer.__proto__ || Object.getPrototypeOf(ScreenContainer)).call(this, props));

        _this12.state = {
            currentScreen: null
        };
        return _this12;
    }

    _createClass(ScreenContainer, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var _this13 = this;

            ui.addScreenChangeListener(function (screen) {
                //showPageLoader()
                _this13.setState(_.assign(_this13.state, { currentScreen: screen }));
                //hidePageLoader()
            });
        }
    }, {
        key: "render",
        value: function render() {
            if (_.isEmpty(this.state.currentScreen)) {
                return React.createElement("div", null);
            }
            return this.state.currentScreen;
        }
    }]);

    return ScreenContainer;
}(React.Component);

var Screen = function (_React$Component11) {
    _inherits(Screen, _React$Component11);

    function Screen() {
        _classCallCheck(this, Screen);

        return _possibleConstructorReturn(this, (Screen.__proto__ || Object.getPrototypeOf(Screen)).apply(this, arguments));
    }

    return Screen;
}(React.Component);

var Index = function (_React$Component12) {
    _inherits(Index, _React$Component12);

    function Index(props) {
        _classCallCheck(this, Index);

        var _this15 = _possibleConstructorReturn(this, (Index.__proto__ || Object.getPrototypeOf(Index)).call(this, props));

        _this15.state = {};
        return _this15;
    }

    _createClass(Index, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                null,
                React.createElement(_loader.PageLoader, null),
                React.createElement(_loader.GlobalLoader, null),
                React.createElement(ScreenContainer, null)
            );
        }
    }]);

    return Index;
}(React.Component);

exports.Index = Index;
exports.Screen = Screen;
exports.FullScreenLayout = FullScreenLayout;
exports.Layout = Layout;
exports.Header = Header;
exports.Footer = Footer;
});
define('web/components/lists.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ListItem = exports.ListItem = function (_React$Component) {
    _inherits(ListItem, _React$Component);

    function ListItem(props) {
        _classCallCheck(this, ListItem);

        return _possibleConstructorReturn(this, (ListItem.__proto__ || Object.getPrototypeOf(ListItem)).call(this, props));
    }

    _createClass(ListItem, [{
        key: "onClick",
        value: function onClick() {
            if (_.isFunction(this.props.onClick)) {
                this.props.onClick(this.props.item);
            }
        }
    }, {
        key: "render",
        value: function render() {
            var view = React.createElement(this.props.view, { item: this.props.item, list: this.props.list });
            return React.createElement(
                "div",
                { className: "list-group-item hover pointer-cursor", onClick: this.onClick.bind(this) },
                view
            );
        }
    }]);

    return ListItem;
}(React.Component);

var List = exports.List = function (_React$Component2) {
    _inherits(List, _React$Component2);

    function List(props) {
        _classCallCheck(this, List);

        return _possibleConstructorReturn(this, (List.__proto__ || Object.getPrototypeOf(List)).call(this, props));
    }

    _createClass(List, [{
        key: "invokeAction",
        value: function invokeAction(action, data) {
            if (_.isFunction(this.props.onAction)) {
                this.props.onAction(action, data);
            }
        }
    }, {
        key: "getKey",
        value: function getKey(item) {
            if (_.isFunction(this.props.keygen)) {
                return this.props.keygen(item);
            } else {
                return item.id;
            }
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            var view = this.props.view;
            var data = this.props.data;
            var onItemClick = this.props.onItemClick;
            var items = data.map(function (i) {
                return React.createElement(ListItem, { key: _this3.getKey(i), view: view, item: i, list: _this3, onClick: onItemClick });
            });
            return React.createElement(
                "div",
                { className: "list-group lg-odd-black" },
                items
            );
        }
    }]);

    return List;
}(React.Component);
});
define('web/components/loader.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.hidePageLoader = hidePageLoader;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function hidePageLoader() {
    $(".page-loader").fadeOut(500);
}

var PageLoader = function (_React$Component) {
    _inherits(PageLoader, _React$Component);

    function PageLoader() {
        _classCallCheck(this, PageLoader);

        return _possibleConstructorReturn(this, (PageLoader.__proto__ || Object.getPrototypeOf(PageLoader)).apply(this, arguments));
    }

    _createClass(PageLoader, [{
        key: "componentDidUpdate",
        value: function componentDidUpdate() {
            if (this.state.loading) {
                $(this.refs.page_loader).show();
            } else {
                $(this.refs.page_loader).fadeOut(500);
            }
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "page-loader", style: { display: "block" } },
                React.createElement(
                    "div",
                    { className: "preloader" },
                    React.createElement(
                        "svg",
                        { className: "pl-circular", viewBox: "25 25 50 50" },
                        React.createElement("circle", { className: "plc-path", cx: "50", cy: "50", r: "20" })
                    ),
                    React.createElement(
                        "p",
                        null,
                        "Please wait..."
                    )
                )
            );
        }
    }]);

    return PageLoader;
}(React.Component);

var GlobalLoader = function (_React$Component2) {
    _inherits(GlobalLoader, _React$Component2);

    function GlobalLoader() {
        _classCallCheck(this, GlobalLoader);

        return _possibleConstructorReturn(this, (GlobalLoader.__proto__ || Object.getPrototypeOf(GlobalLoader)).apply(this, arguments));
    }

    _createClass(GlobalLoader, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "global-loader", style: { display: "none" } },
                React.createElement("div", { className: "layer" }),
                React.createElement(
                    "div",
                    { className: "preloader" },
                    React.createElement(
                        "svg",
                        { className: "pl-circular", viewBox: "25 25 50 50" },
                        React.createElement("circle", { className: "plc-path", cx: "50", cy: "50", r: "20" })
                    )
                ),
                React.createElement(
                    "p",
                    { className: "message" },
                    "Please wait..."
                )
            );
        }
    }]);

    return GlobalLoader;
}(React.Component);

var Preloader = function (_React$Component3) {
    _inherits(Preloader, _React$Component3);

    function Preloader() {
        _classCallCheck(this, Preloader);

        return _possibleConstructorReturn(this, (Preloader.__proto__ || Object.getPrototypeOf(Preloader)).apply(this, arguments));
    }

    _createClass(Preloader, [{
        key: "render",
        value: function render() {
            return this.props.visible || true ? React.createElement(
                "div",
                { className: "preloader" },
                React.createElement(
                    "svg",
                    { className: "pl-circular", viewBox: "25 25 50 50" },
                    React.createElement("circle", { className: "plc-path", cx: "50", cy: "50", r: "20" })
                )
            ) : null;
        }
    }]);

    return Preloader;
}(React.Component);

exports.PageLoader = PageLoader;
exports.GlobalLoader = GlobalLoader;
exports.Preloader = Preloader;
});
define('web/components/secure.js', function(module, exports) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _login = require("../screens/login");

var _login2 = _interopRequireDefault(_login);

var _stores = require("../../stores");

var _aj = require("../utils/aj");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Secure = function (_React$Component) {
    _inherits(Secure, _React$Component);

    function Secure(props) {
        _classCallCheck(this, Secure);

        var _this = _possibleConstructorReturn(this, (Secure.__proto__ || Object.getPrototypeOf(Secure)).call(this, props));

        (0, _aj.connect)(_this, _stores.SessionStore);
        return _this;
    }

    _createClass(Secure, [{
        key: "render",
        value: function render() {
            return this.state.isLoggedIn ? this.props.children : React.createElement(_login2.default, null);
        }
    }]);

    return Secure;
}(React.Component);

module.exports = Secure;
});
define('web/entities.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _grids = require("./components/grids");

var _validator = require("../libs/validator");

var _forms = require("./components/forms");

var _containers = require("./components/containers");

var _strings = require("../strings");

var _strings2 = _interopRequireDefault(_strings);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var entities = {
	user: {
		grid: {
			title: (0, _strings2.default)("usersList"),
			subtitle: (0, _strings2.default)("usersListDescription"),
			descriptor: {
				columns: [{ property: "name", header: (0, _strings2.default)("name"), cell: _grids.TextCell, sortable: true, searchable: true }, { property: "mail", header: (0, _strings2.default)("mail"), cell: _grids.TextCell, sortable: true, searchable: true }, { property: "active", header: (0, _strings2.default)("active"), cell: _grids.CheckCell, sortable: true, searchable: true }]
			}
		},
		form: {
			title: (0, _strings2.default)("editUser"),
			subtitle: (0, _strings2.default)("editUserDescription"),
			descriptor: {
				areas: [{
					title: (0, _strings2.default)("generalInformations"),
					subtitle: null,
					fields: [{
						property: "name",
						control: _forms.Text,
						label: (0, _strings2.default)("name"),
						placeholder: (0, _strings2.default)("name"),
						sanitizer: function sanitizer(value) {
							return (0, _validator.sanitize)(value).trim();
						},
						validator: function validator(value) {
							return (0, _validator.check)(value).notEmpty();
						}
					}, {
						property: "mail",
						control: _forms.Mail,
						label: (0, _strings2.default)("mail"),
						placeholder: (0, _strings2.default)("mailAddress"),
						sanitizer: function sanitizer(value) {
							return (0, _validator.sanitize)(value).trim();
						},
						validator: function validator(value) {
							return (0, _validator.check)(value).isEmail();
						}
					}, {
						property: "active",
						control: _forms.YesNo,
						label: (0, _strings2.default)("active"),
						sanitizer: function sanitizer(value) {
							return (0, _validator.sanitize)(value).toBoolean();
						}
					}, {
						property: "_image",
						control: _forms.Image,
						label: (0, _strings2.default)("image")
					}, {
						property: "_cover",
						control: _forms.Image,
						label: (0, _strings2.default)("cover")
					}, {
						property: "roles",
						label: (0, _strings2.default)("roles"),
						control: _containers.EntitiesLookupContainer,
						props: {
							id: "user_roles",
							mode: "multiple",
							entity: "role",
							selectionGrid: {
								columns: [{ property: "role", header: (0, _strings2.default)("name"), cell: _grids.TextCell }]
							},
							popupGrid: {
								columns: [{ property: "role", header: (0, _strings2.default)("name"), cell: _grids.TextCell }]
							}
						}
					}]
				}]
			}
		}
	},

	role: {
		grid: {
			title: (0, _strings2.default)("rolesList"),
			subtitle: (0, _strings2.default)("rolesListDescription"),
			descriptor: {
				columns: [{ property: "role", header: "Role", cell: _grids.TextCell, sortable: true, searchable: true }]
			}
		},
		form: {
			title: "Edit role",
			subtitle: null,
			descriptor: {
				fields: [{
					property: "role",
					control: _forms.Text,
					label: (0, _strings2.default)("role"),
					placeholder: (0, _strings2.default)("nameOfRole"),
					sanitizer: function sanitizer(value) {
						return (0, _validator.sanitize)(value).trim();
					},
					validator: function validator(value) {
						return (0, _validator.check)(value).notEmpty();
					}
				}, {
					property: "_permissions",
					label: (0, _strings2.default)("permissions"),
					placeholder: (0, _strings2.default)("selectPermissions"),
					control: _containers.ValuesLookupContainer,
					//sanitizer: value => _.map(value, v => v.value),
					validator: function validator(value) {
						return (0, _validator.check)(value).notEmpty();
					},
					props: {
						id: "role_permissions",
						collection: "permissions",
						mode: "multiple",
						selectionGrid: {
							columns: [{ property: "label", header: (0, _strings2.default)("name"), cell: _grids.TextCell }]
						},
						popupGrid: {
							columns: [{ property: "label", header: (0, _strings2.default)("name"), cell: _grids.TextCell }]
						}
					}

				}]
			}
		}
	}
};

exports.default = entities;
});
define('web/main.js', function(module, exports) {
"use strict";

var _layout = require("./components/layout");

var _login = require("./screens/login");

var _login2 = _interopRequireDefault(_login);

var _register = require("./screens/register");

var _register2 = _interopRequireDefault(_register);

var _recover = require("./screens/recover");

var _recover2 = _interopRequireDefault(_recover);

var _home = require("./screens/home");

var _home2 = _interopRequireDefault(_home);

var _registrationOk = require("./screens/registrationOk");

var _registrationOk2 = _interopRequireDefault(_registrationOk);

var _confirm = require("./screens/confirm");

var _confirm2 = _interopRequireDefault(_confirm);

var _ui = require("./utils/ui");

var ui = _interopRequireWildcard(_ui);

var _pluginsimpl = require("./pluginsimpl");

var plugins = _interopRequireWildcard(_pluginsimpl);

var _actions = require("../actions");

var _stores = require("../stores");

var _entities = require("./screens/entities");

var _menu = require("./menu");

var _menu2 = _interopRequireDefault(_menu);

var _loader = require("./components/loader");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Register plugins */
plugins.register();

/* Admin routes */
ui.addRoute("/entities/:entity", function (params) {
    return ui.changeScreen(React.createElement(_entities.EntitiesGrid, { key: params.entity, entity: params.entity }));
});
ui.addRoute("/entities/:entity/:entityId", function (params) {
    return ui.changeScreen(React.createElement(_entities.EntityForm, { key: params.entity, entity: params.entity, entityId: params.entityId }));
});
ui.addRoute("/entities/:entity/new", function (params) {
    return ui.changeScreen(React.createElement(_entities.EntityForm, { key: params.entity, entity: params.entity }));
});

/* Account routes */
ui.addRoute("/login", function (params) {
    return ui.changeScreen(React.createElement(_login2.default, null));
});
ui.addRoute("/register", function (params) {
    return ui.changeScreen(React.createElement(_register2.default, null));
});
ui.addRoute("/recover", function (params) {
    return ui.changeScreen(React.createElement(_recover2.default, null));
});
ui.addRoute("/registrationComplete", function (params) {
    return ui.changeScreen(React.createElement(_registrationOk2.default, null));
});
ui.addRoute("/confirm", function (params) {
    return ui.changeScreen(React.createElement(_confirm2.default, { activationCode: params.activationCode }));
});

/* home route */
ui.addRoute("/", function (params) {
    return ui.changeScreen(React.createElement(_home2.default, null));
});

/* render main index page into dom */
ReactDOM.render(React.createElement(_layout.Index, null), document.getElementById("entry-point"));

/* Setup menu voices */
(0, _actions.setupMenu)({ menu: _menu2.default });

/* Avoid going in screens that require login before trying session resume */
var owner = {};
_stores.SessionStore.subscribe(owner, function (state) {
    if (state.resumeComplete) {
        _stores.SessionStore.unsubscribe(owner);
        ui.startNavigation();
        (0, _loader.hidePageLoader)();
    }
});

/* automatic login, if possible */
(0, _actions.resumeSession)();
});
define('web/menu.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _strings = require("../strings");

var _strings2 = _interopRequireDefault(_strings);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = [{
    icon: "zmdi zmdi-shield-security",
    text: (0, _strings2.default)("security"),
    children: [{
        icon: "zmdi zmdi-accounts-alt",
        text: (0, _strings2.default)("users"),
        href: "/#/entities/user?grid=users"
    }, {
        icon: "zmdi zmdi-key",
        text: (0, _strings2.default)("roles"),
        href: "/#/entities/role?grid=roles"
    }]
}, {
    icon: "zmdi zmdi-wrench",
    text: (0, _strings2.default)("setup"),
    children: [{
        icon: "zmdi zmdi-labels",
        text: (0, _strings2.default)("categories"),
        href: "/#/entities/category?grid=categories"
    }]
}];
});
define('web/pluginsimpl.js', function(module, exports) {
"use strict";

exports.Alert = {
    alert: function alert(data, callback) {
        var title = data.title,
            message = data.message,
            type = data.type;

        var _callback = function _callback(v) {
            if (_.isFunction(callback)) {
                callback(v);
            }
        };
        swal({ title: title, text: message, type: type }).then(function () {
            return _callback(true);
        }).catch(function () {
            return _callback(false);
        });
    },
    confirm: function confirm(data, callback) {
        var title = data.title,
            message = data.message;

        var _callback = function _callback(v) {
            if (_.isFunction(callback)) {
                callback(v);
            }
        };
        swal({ title: title, text: message, showCancelButton: true }).then(function () {
            return _callback(true);
        }).catch(function () {
            return _callback(false);
        });
    }
};

var loaderCount = 0;

exports.Loader = {
    show: function show(data, callback) {
        loaderCount++;
        $(".global-loader").find(".message").text(data.message).end().show();
    },
    hide: function hide(data, callback) {
        loaderCount--;
        if (loaderCount <= 0) {
            $(".global-loader").hide();
            loaderCount = 0;
        }
    }
};

exports.Toast = {
    show: function show(data, callback) {
        $.growl({
            message: data.message,
            url: ''
        }, {
            element: 'body',
            type: "inverse",
            allow_dismiss: true,
            placement: {
                from: "bottom",
                align: "center"
            },
            offset: {
                x: 20,
                y: 85
            },
            spacing: 10,
            z_index: 1031,
            delay: 2500,
            timer: 1000,
            url_target: '_blank',
            mouse_over: false,
            icon_type: 'class',
            template: '<div data-growl="container" class="alert" role="alert">' + '<button type="button" class="close" data-growl="dismiss">' + '<span aria-hidden="true">&times;</span>' + '<span class="sr-only">Close</span>' + '</button>' + '<span data-growl="icon"></span>' + '<span data-growl="message"></span>' + '<a href="#" data-growl="url"></a>' + '</div>'
        });
    }
};

exports.register = function () {
    window.Alert = exports.Alert;
    window.Toast = exports.Toast;
    window.Loader = exports.Loader;
};
});
define('web/screens/confirm.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _stores = require("../../stores");

var _layout = require("../components/layout");

var _ui = require("../utils/ui");

var ui = _interopRequireWildcard(_ui);

var _forms = require("../utils/forms");

var forms = _interopRequireWildcard(_forms);

var _strings = require("../../strings");

var _strings2 = _interopRequireDefault(_strings);

var _actions = require("../../actions");

var _aj = require("../utils/aj");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Recover = function (_Screen) {
    _inherits(Recover, _Screen);

    function Recover(props) {
        _classCallCheck(this, Recover);

        var _this = _possibleConstructorReturn(this, (Recover.__proto__ || Object.getPrototypeOf(Recover)).call(this, props));

        (0, _aj.connect)(_this, _stores.AccountStore, { activationCode: "" });
        return _this;
    }

    _createClass(Recover, [{
        key: "confirm",
        value: function confirm() {
            var data = forms.serialize(this.refs.confirm_form);
            (0, _actions.confirmAccount)(data);
        }
    }, {
        key: "componentWillUpdate",
        value: function componentWillUpdate(props, state) {
            if (state.confirmed) {
                ui.navigate("/");
            }
        }
    }, {
        key: "componentDidMount",
        value: function componentDidMount() {
            (0, _actions.setActivationCode)({ activationCode: this.props.activationCode });
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                _layout.FullScreenLayout,
                null,
                React.createElement(
                    "div",
                    { className: "login-content" },
                    React.createElement(
                        "div",
                        { className: "lc-block toggled", id: "l-forget-password" },
                        React.createElement(
                            "form",
                            { action: "javascript:;", className: "lcb-form", onSubmit: this.confirm.bind(this), ref: "confirm_form" },
                            React.createElement(
                                "p",
                                { className: "text-left" },
                                (0, _strings2.default)("accountConfirmText")
                            ),
                            React.createElement(
                                "div",
                                { className: "input-group m-b-20" },
                                React.createElement(
                                    "span",
                                    { className: "input-group-addon" },
                                    React.createElement("i", { className: "zmdi zmdi-lock" })
                                ),
                                React.createElement(
                                    "div",
                                    { className: "fg-line" },
                                    React.createElement("input", { type: "text", name: "activationCode", className: "form-control", placeholder: (0, _strings2.default)("activationCode"), value: this.state.activationCode })
                                )
                            ),
                            React.createElement(
                                "button",
                                { type: "submit", className: "btn btn-login btn-success btn-float animated fadeInLeft" },
                                React.createElement("i", { className: "zmdi zmdi-lock-open" })
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "lcb-navigation" },
                            React.createElement(
                                "a",
                                { href: "#login", "data-ma-block": "#l-login" },
                                React.createElement("i", { className: "zmdi zmdi-long-arrow-right" }),
                                " ",
                                React.createElement(
                                    "span",
                                    null,
                                    (0, _strings2.default)("signIn")
                                )
                            ),
                            React.createElement(
                                "a",
                                { href: "#register", "data-ma-block": "#l-register" },
                                React.createElement("i", { className: "zmdi zmdi-plus" }),
                                " ",
                                React.createElement(
                                    "span",
                                    null,
                                    (0, _strings2.default)("register")
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return Recover;
}(_layout.Screen);

exports.default = Recover;
});
define('web/screens/entities/entitiesGrid.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _stores = require("../../../stores");

var _layout = require("../../components/layout");

var _strings = require("../../../strings");

var _strings2 = _interopRequireDefault(_strings);

var _actions = require("../../../actions");

var _aj = require("../../utils/aj");

var _common = require("../../components/common");

var _grids = require("../../components/grids");

var _query2 = require("../../../api/query");

var query = _interopRequireWildcard(_query2);

var _lang = require("../../../utils/lang");

var _keyboard = require("../../utils/keyboard");

var _entities = require("../../entities");

var _entities2 = _interopRequireDefault(_entities);

var _ui = require("../../utils/ui");

var ui = _interopRequireWildcard(_ui);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var EntitiesGrid = function (_Screen) {
    _inherits(EntitiesGrid, _Screen);

    function EntitiesGrid(props) {
        _classCallCheck(this, EntitiesGrid);

        var _this = _possibleConstructorReturn(this, (EntitiesGrid.__proto__ || Object.getPrototypeOf(EntitiesGrid)).call(this, props));

        if (_.isEmpty(_this.getEntity())) {
            throw new Error("Please specify entity for form");
        }

        var _query = query.create();
        _query.page = 1;
        _query.rowsPerPage = 50;

        _this.state = { grid: null, result: null, query: _query };

        _this.state.query.on("change", function () {
            _this.onQueryChanged();
        });

        _this.discriminator = "entity_grid_" + _this.getEntity();

        (0, _aj.connectDiscriminated)(_this.discriminator, _this, [_stores.EntitiesStore]);
        return _this;
    }

    _createClass(EntitiesGrid, [{
        key: "getEntity",
        value: function getEntity() {
            return this.props.entity;
        }
    }, {
        key: "componentDidMount",
        value: function componentDidMount() {
            (0, _actions.loadEntities)({ discriminator: this.discriminator, entity: this.getEntity(), query: this.state.query });
        }
    }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            (0, _actions.freeEntities)({ discriminator: this.discriminator });
        }
    }, {
        key: "onQueryChanged",
        value: function onQueryChanged() {
            (0, _actions.loadEntities)({ discriminator: this.discriminator, entity: this.getEntity(), query: this.state.query });
        }
    }, {
        key: "editEntity",
        value: function editEntity(data) {
            if (!this.canEdit()) {
                return;
            }

            ui.navigate(this.getEditUrl(data));
        }
    }, {
        key: "createEntity",
        value: function createEntity() {
            if (!this.canCreate()) {
                return;
            }

            ui.navigate(this.getCreateUrl());
        }
    }, {
        key: "getCreateUrl",
        value: function getCreateUrl() {
            var grid = _entities2.default[this.getEntity()].grid;
            return (0, _lang.optional)(grid.createUrl, "/entities/" + this.getEntity() + "/create");
        }
    }, {
        key: "getEditUrl",
        value: function getEditUrl(data) {
            var grid = _entities2.default[this.getEntity()].grid;
            if (!_.isEmpty(grid.editUrl)) {
                return (0, _lang.format)(grid.editUrl, data.id);
            } else {
                return "/entities/" + this.getEntity() + "/" + data.id;
            }
        }
    }, {
        key: "deleteEntities",
        value: function deleteEntities() {
            var _this2 = this;

            if (!this.canDelete()) {
                return;
            }

            var selection = this.refs.grid.getSelection();
            if (_.isEmpty(selection)) {
                return;
            }

            swal({ title: (0, _strings2.default)("confirm"), text: (0, _lang.format)((0, _strings2.default)("entityDeleteConfirm"), selection.length), showCancelButton: true }).then(function () {
                (0, _actions.deleteEntities)({ discriminator: _this2.discriminator, entity: _this2.getEntity(), ids: selection.map(function (s) {
                        return s.id;
                    }) });
            }).catch(function (e) {
                logger.i(e);
            });
        }
    }, {
        key: "onGridKeyDown",
        value: function onGridKeyDown(e) {
            if ((0, _keyboard.isCancel)(e.which)) {
                this.deleteEntities();
            }
        }
    }, {
        key: "onGridRowDoubleClick",
        value: function onGridRowDoubleClick(row) {
            this.editEntity(row);
        }
    }, {
        key: "getTitle",
        value: function getTitle() {
            var grid = _entities2.default[this.getEntity()].grid;
            return (0, _lang.optional)(grid.title, "List");
        }
    }, {
        key: "getSubtitle",
        value: function getSubtitle() {
            var grid = _entities2.default[this.getEntity()].grid;
            return grid.subtitle;
        }
    }, {
        key: "getActions",
        value: function getActions() {
            var _this3 = this;

            var defaultActions = [{
                id: "refresh",
                type: "button",
                icon: "zmdi zmdi-refresh-alt",
                tooltip: (0, _strings2.default)("refresh"),
                action: function action() {
                    (0, _actions.loadEntities)({ discriminator: _this3.discriminator, entity: _this3.getEntity(), query: _this3.state.query });
                }
            }, {
                id: "create",
                type: "button",
                icon: "zmdi zmdi-plus",
                tooltip: (0, _strings2.default)("create"),
                action: function action() {
                    _this3.createEntity();
                }
            }, {
                id: "delete",
                type: "button",
                icon: "zmdi zmdi-delete",
                tooltip: (0, _strings2.default)("delete"),
                action: function action() {
                    _this3.deleteEntities();
                }
            }, {
                id: "selectAll",
                type: "button",
                icon: "zmdi zmdi-select-all",
                tooltip: (0, _strings2.default)("selectAll"),
                action: function action() {
                    _this3.refs.grid.toggleSelectAll();
                }
            }];

            var grid = _entities2.default[this.getEntity()].grid;
            var matcher = new _common.ActionsMatcher(defaultActions);
            return matcher.match(grid.actions);
        }
    }, {
        key: "getDescriptor",
        value: function getDescriptor() {
            var grid = _entities2.default[this.getEntity()].grid;
            return grid.descriptor;
        }
    }, {
        key: "getData",
        value: function getData() {
            return (0, _grids.resultToGridData)(this.state.result);
        }
    }, {
        key: "isQuickSearchEnabled",
        value: function isQuickSearchEnabled() {
            var grid = _entities2.default[this.getEntity()].grid;
            return (0, _lang.optional)(grid.quickSearchEnabled, false);
        }
    }, {
        key: "canEdit",
        value: function canEdit() {
            var grid = _entities2.default[this.getEntity()].grid;
            return (0, _lang.optional)(grid.canEdit, true);
        }
    }, {
        key: "canCreate",
        value: function canCreate() {
            var grid = _entities2.default[this.getEntity()].grid;
            return (0, _lang.optional)(grid.canCreate, true);
        }
    }, {
        key: "canDelete",
        value: function canDelete() {
            var grid = _entities2.default[this.getEntity()].grid;
            return (0, _lang.optional)(grid.canDelete, true);
        }
    }, {
        key: "render",
        value: function render() {
            var title = this.getTitle();
            var subtitle = this.getSubtitle();
            var actions = this.getActions();
            var descriptor = this.getDescriptor();
            var data = this.getData();

            return React.createElement(
                _layout.Layout,
                null,
                React.createElement(_common.HeaderBlock, { title: title, subtitle: subtitle, actions: actions }),
                React.createElement(_grids.Grid, {
                    ref: "grid",
                    descriptor: descriptor,
                    data: data,
                    query: this.state.query,
                    onKeyDown: this.onGridKeyDown.bind(this),
                    onRowDoubleClick: this.onGridRowDoubleClick.bind(this),
                    quickSearchEnabled: this.isQuickSearchEnabled()
                }),
                this.canCreate() && React.createElement(_common.FloatingButton, { icon: "zmdi zmdi-plus", onClick: this.createEntity.bind(this) })
            );
        }
    }]);

    return EntitiesGrid;
}(_layout.Screen);

exports.default = EntitiesGrid;
});
define('web/screens/entities/entityForm.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _stores = require("../../../stores");

var _layout = require("../../components/layout");

var _strings = require("../../../strings");

var _strings2 = _interopRequireDefault(_strings);

var _aj = require("../../utils/aj");

var _common = require("../../components/common");

var _forms = require("../../components/forms");

var _actions = require("../../../actions");

var _entities = require("../../entities");

var _entities2 = _interopRequireDefault(_entities);

var _ui = require("../../utils/ui");

var ui = _interopRequireWildcard(_ui);

var _lang = require("../../../utils/lang");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var EntityForm = function (_Screen) {
    _inherits(EntityForm, _Screen);

    function EntityForm(props) {
        _classCallCheck(this, EntityForm);

        var _this = _possibleConstructorReturn(this, (EntityForm.__proto__ || Object.getPrototypeOf(EntityForm)).call(this, props));

        if (_.isEmpty(props.entity)) {
            throw new Error("Please specify entity for form");
        }

        _this.discriminator = "entity_form_" + props.entity;
        _this.initialEntity = null;

        (0, _aj.connectDiscriminated)(_this.discriminator, _this, _stores.EntitiesStore, { data: null });
        return _this;
    }

    _createClass(EntityForm, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var form = this.refs.form;
            var model = form.model;

            this.onBeforeUnload = function () {
                console.log(model.changes);
                if (model.hasChanges()) {
                    return (0, _strings2.default)("formChangeAlert");
                }
            };

            window.onbeforeunload = this.onBeforeUnload;
            ui.addOnBeforeChangeListener(this.onBeforeUnload);

            if (!_.isEmpty(this.props.entityId) && this.props.entityId != "create") {
                (0, _actions.getEntity)({ discriminator: this.discriminator, entity: this.props.entity, id: this.props.entityId });
            } else {
                (0, _actions.newEntity)({ discriminator: this.discriminator, entity: this.props.entity, id: this.props.entityId });
            }
        }
    }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            (0, _actions.freeEntities)({ discriminator: this.discriminator });

            window.onbeforeunload = null;
            ui.removeOnBeforeChangeListener(this.onBeforeUnload);
        }
    }, {
        key: "submit",
        value: function submit(goBack) {
            this.willGoBack = goBack;
            this.refs.form.submit();
        }
    }, {
        key: "onSubmit",
        value: function onSubmit(data) {
            if (_.isFunction(this.props.onSubmit)) {
                this.props.onSubmit(data);
            } else {
                (0, _actions.saveEntity)({ discriminator: this.discriminator, entity: this.props.entity, data: data, reload: !this.willGoBack });
            }
        }
    }, {
        key: "onCancel",
        value: function onCancel() {
            this.goBack();
        }
    }, {
        key: "goBack",
        value: function goBack() {
            ui.navigate(this.getGridUrl());
        }
    }, {
        key: "componentWillUpdate",
        value: function componentWillUpdate(props, state) {
            if (state.saved) {
                this.refs.form.model.resetChanges();
            }

            if (state.saved && this.willGoBack) {
                this.goBack();
                return false;
            }

            if (state.validationError) {
                if (state.validationResult) {
                    var form = this.refs.form;
                    if (form && form.model) {
                        _.each(state.validationResult.errors, function (e) {
                            form.model.setError(e.property, (0, _strings2.default)(e.message));
                        });
                    }
                }
            }
        }
    }, {
        key: "getEntity",
        value: function getEntity() {
            return this.props.entity;
        }
    }, {
        key: "getGridUrl",
        value: function getGridUrl() {
            var form = _entities2.default[this.getEntity()].form;
            return (0, _lang.optional)(form.gridUrl, "/entities/" + this.getEntity());
        }
    }, {
        key: "getActions",
        value: function getActions() {
            var _this2 = this;

            var defaultActions = [{
                id: "back",
                type: "button",
                icon: "zmdi zmdi-arrow-left",
                tooltip: (0, _strings2.default)("back"),
                action: function action() {
                    _this2.goBack();
                }
            }, {
                id: "save",
                type: "button",
                icon: "zmdi zmdi-save",
                tooltip: (0, _strings2.default)("save"),
                action: function action() {
                    _this2.submit(false);
                }
            }, {
                id: "save-go-back",
                type: "button",
                icon: "zmdi zmdi-rotate-ccw",
                tooltip: (0, _strings2.default)("saveAndGoBack"),
                action: function action() {
                    _this2.submit(true);
                }
            }];

            var form = _entities2.default[this.getEntity()].form;
            var matcher = new _common.ActionsMatcher(defaultActions);
            return matcher.match(form.actions);
        }
    }, {
        key: "getTitle",
        value: function getTitle() {
            var form = _entities2.default[this.getEntity()].form;
            return (0, _lang.optional)(form.title, "Edit");
        }
    }, {
        key: "getSubtitle",
        value: function getSubtitle() {
            var form = _entities2.default[this.getEntity()].form;
            return form.subtitle;
        }
    }, {
        key: "getDescriptor",
        value: function getDescriptor() {
            var form = _entities2.default[this.getEntity()].form;
            return form.descriptor;
        }
    }, {
        key: "getFormComponent",
        value: function getFormComponent() {
            var form = _entities2.default[this.getEntity()].form;
            return (0, _lang.optional)(function () {
                return form.component;
            }, function () {
                return _forms.Form;
            });
        }
    }, {
        key: "render",
        value: function render() {
            var title = this.getTitle();
            var subtitle = this.getSubtitle();
            var actions = this.getActions();
            var descriptor = this.getDescriptor();
            var component = this.getFormComponent();

            return React.createElement(
                _layout.Layout,
                null,
                React.createElement(_common.HeaderBlock, { title: title, subtitle: subtitle, actions: actions }),
                React.createElement(component, {
                    ref: "form",
                    descriptor: descriptor,
                    data: this.state.data,
                    onSubmit: this.onSubmit.bind(this),
                    onCancel: this.onCancel.bind(this)
                })
            );
        }
    }]);

    return EntityForm;
}(_layout.Screen);

exports.default = EntityForm;
});
define('web/screens/entities/index.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var EntitiesGrid = exports.EntitiesGrid = require("./entitiesGrid").default;
var EntityForm = exports.EntityForm = require("./entityForm").default;
});
define('web/screens/home.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _require = require("../components/layout"),
    Screen = _require.Screen,
    Layout = _require.Layout;

var Secure = require("../components/secure");

var Home = function (_Screen) {
    _inherits(Home, _Screen);

    function Home() {
        _classCallCheck(this, Home);

        return _possibleConstructorReturn(this, (Home.__proto__ || Object.getPrototypeOf(Home)).apply(this, arguments));
    }

    _createClass(Home, [{
        key: "render",
        value: function render() {
            return React.createElement(
                Secure,
                null,
                React.createElement(
                    Layout,
                    null,
                    React.createElement(
                        "div",
                        { className: "card" },
                        "Home Screen"
                    )
                )
            );
        }
    }]);

    return Home;
}(Screen);

exports.default = Home;
});
define('web/screens/login.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _layout = require("../components/layout");

var _actions = require("../../actions");

var _forms = require("../utils/forms");

var forms = _interopRequireWildcard(_forms);

var _strings = require("../../strings");

var _strings2 = _interopRequireDefault(_strings);

var _stores = require("../../stores");

var _aj = require("../utils/aj");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Login = function (_Screen) {
    _inherits(Login, _Screen);

    function Login(props) {
        _classCallCheck(this, Login);

        var _this = _possibleConstructorReturn(this, (Login.__proto__ || Object.getPrototypeOf(Login)).call(this, props));

        (0, _aj.connect)(_this, _stores.SessionStore);
        return _this;
    }

    _createClass(Login, [{
        key: "login",
        value: function login() {
            var data = forms.serialize(this.refs.login_form);
            (0, _actions.login)(data);
        }
    }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate() {
            if (this.state.isLoggedIn) {
                if (location.href.indexOf("login") != -1) {
                    location.href = "/#/";
                }
            }
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                _layout.FullScreenLayout,
                null,
                React.createElement(
                    "div",
                    { className: "login-content" },
                    React.createElement(
                        "div",
                        { className: "lc-block toggled", id: "l-login" },
                        React.createElement(
                            "div",
                            { className: "text-center m-b-10" },
                            React.createElement("img", { src: "resources/images/logo.png" })
                        ),
                        React.createElement(
                            "form",
                            { action: "javascript:", className: "lcb-form", onSubmit: this.login.bind(this), ref: "login_form" },
                            React.createElement(
                                "div",
                                { className: "input-group m-b-20" },
                                React.createElement(
                                    "span",
                                    { className: "input-group-addon" },
                                    React.createElement("i", { className: "zmdi zmdi-email" })
                                ),
                                React.createElement(
                                    "div",
                                    { className: "fg-line" },
                                    React.createElement("input", { type: "email", name: "mail", className: "form-control", placeholder: (0, _strings2.default)("mailAddress") })
                                )
                            ),
                            React.createElement(
                                "div",
                                { className: "input-group m-b-20" },
                                React.createElement(
                                    "span",
                                    { className: "input-group-addon" },
                                    React.createElement("i", { className: "zmdi zmdi-male" })
                                ),
                                React.createElement(
                                    "div",
                                    { className: "fg-line" },
                                    React.createElement("input", { type: "password", name: "password", className: "form-control", placeholder: (0, _strings2.default)("password") })
                                )
                            ),
                            React.createElement(
                                "div",
                                { className: "checkbox" },
                                React.createElement(
                                    "label",
                                    null,
                                    React.createElement("input", { type: "checkbox", name: "remember_me", value: "1" }),
                                    React.createElement("i", { className: "input-helper" }),
                                    "Keep me signed in"
                                )
                            ),
                            React.createElement(
                                "button",
                                { type: "submit", className: "btn btn-login btn-success btn-float animated fadeInLeft" },
                                React.createElement("i", { className: "zmdi zmdi-arrow-forward" })
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "lcb-navigation" },
                            React.createElement(
                                "a",
                                { href: "#register", "data-ma-block": "#l-register" },
                                React.createElement("i", { className: "zmdi zmdi-plus" }),
                                " ",
                                React.createElement(
                                    "span",
                                    null,
                                    (0, _strings2.default)("register")
                                )
                            ),
                            React.createElement(
                                "a",
                                { href: "#recover", "data-ma-block": "#l-forget-password" },
                                React.createElement(
                                    "i",
                                    null,
                                    "?"
                                ),
                                " ",
                                React.createElement(
                                    "span",
                                    null,
                                    (0, _strings2.default)("forgotPassword")
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return Login;
}(_layout.Screen);

exports.default = Login;
});
define('web/screens/recover.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _stores = require("../../stores");

var _strings = require("../../strings");

var _strings2 = _interopRequireDefault(_strings);

var _aj = require("../utils/aj");

var _layout = require("../components/layout");

var _ui = require("../utils/ui");

var ui = _interopRequireWildcard(_ui);

var _actions = require("../../actions");

var _forms = require("../utils/forms");

var forms = _interopRequireWildcard(_forms);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Recover = function (_Screen) {
    _inherits(Recover, _Screen);

    function Recover(props) {
        _classCallCheck(this, Recover);

        var _this = _possibleConstructorReturn(this, (Recover.__proto__ || Object.getPrototypeOf(Recover)).call(this, props));

        (0, _aj.connect)(_this, _stores.AccountStore);
        return _this;
    }

    _createClass(Recover, [{
        key: "recover",
        value: function recover() {
            var data = forms.serialize(this.refs.recover_form);
            (0, _actions.recoverAccount)(data);
        }
    }, {
        key: "componentWillUpdate",
        value: function componentWillUpdate(props, state) {
            if (state.recovered) {
                ui.navigate("/");
            }
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                _layout.FullScreenLayout,
                null,
                React.createElement(
                    "div",
                    { className: "login-content" },
                    React.createElement(
                        "div",
                        { className: "lc-block toggled", id: "l-forget-password" },
                        React.createElement(
                            "form",
                            { action: "javascript:;", className: "lcb-form", onSubmit: this.recover.bind(this), ref: "recover_form" },
                            React.createElement(
                                "p",
                                { className: "text-left" },
                                (0, _strings2.default)("accountRecoverText")
                            ),
                            React.createElement(
                                "div",
                                { className: "input-group m-b-20" },
                                React.createElement(
                                    "span",
                                    { className: "input-group-addon" },
                                    React.createElement("i", { className: "zmdi zmdi-email" })
                                ),
                                React.createElement(
                                    "div",
                                    { className: "fg-line" },
                                    React.createElement("input", { type: "email", name: "mail", className: "form-control", placeholder: (0, _strings2.default)("mailAddress") })
                                )
                            ),
                            React.createElement(
                                "button",
                                { type: "submit", className: "btn btn-login btn-success btn-float animated fadeInLeft" },
                                React.createElement("i", { className: "zmdi zmdi-check" })
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "lcb-navigation" },
                            React.createElement(
                                "a",
                                { href: "#login", "data-ma-block": "#l-login" },
                                React.createElement("i", { className: "zmdi zmdi-long-arrow-right" }),
                                " ",
                                React.createElement(
                                    "span",
                                    null,
                                    (0, _strings2.default)("signIn")
                                )
                            ),
                            React.createElement(
                                "a",
                                { href: "#register", "data-ma-block": "#l-register" },
                                React.createElement("i", { className: "zmdi zmdi-plus" }),
                                " ",
                                React.createElement(
                                    "span",
                                    null,
                                    (0, _strings2.default)("register")
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return Recover;
}(_layout.Screen);

exports.default = Recover;
});
define('web/screens/register.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _stores = require("../../stores");

var _strings = require("../../strings");

var _strings2 = _interopRequireDefault(_strings);

var _aj = require("../utils/aj");

var _layout = require("../components/layout");

var _ui = require("../utils/ui");

var ui = _interopRequireWildcard(_ui);

var _actions = require("../../actions");

var _forms = require("../utils/forms");

var forms = _interopRequireWildcard(_forms);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Register = function (_Screen) {
    _inherits(Register, _Screen);

    function Register(props) {
        _classCallCheck(this, Register);

        var _this = _possibleConstructorReturn(this, (Register.__proto__ || Object.getPrototypeOf(Register)).call(this, props));

        (0, _aj.connect)(_this, _stores.AccountStore);
        return _this;
    }

    _createClass(Register, [{
        key: "register",
        value: function register() {
            var data = forms.serialize(this.refs.register_form);
            (0, _actions.register)(data);
        }
    }, {
        key: "componentWillUpdate",
        value: function componentWillUpdate(props, state) {
            if (state.registered) {
                ui.navigate("/registrationComplete");
            }
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                _layout.FullScreenLayout,
                null,
                React.createElement(
                    "div",
                    { className: "login-content" },
                    React.createElement(
                        "div",
                        { className: "lc-block toggled", id: "l-register" },
                        React.createElement(
                            "form",
                            { action: "javascript:;", className: "lcb-form", onSubmit: this.register.bind(this), ref: "register_form" },
                            React.createElement(
                                "div",
                                { className: "input-group m-b-20" },
                                React.createElement(
                                    "span",
                                    { className: "input-group-addon" },
                                    React.createElement("i", { className: "zmdi zmdi-account" })
                                ),
                                React.createElement(
                                    "div",
                                    { className: "fg-line" },
                                    React.createElement("input", { type: "text", name: "name", className: "form-control", placeholder: (0, _strings2.default)("name") })
                                )
                            ),
                            React.createElement(
                                "div",
                                { className: "input-group m-b-20" },
                                React.createElement(
                                    "span",
                                    { className: "input-group-addon" },
                                    React.createElement("i", { className: "zmdi zmdi-email" })
                                ),
                                React.createElement(
                                    "div",
                                    { className: "fg-line" },
                                    React.createElement("input", { type: "email", name: "mail", className: "form-control", placeholder: (0, _strings2.default)("mailAddress") })
                                )
                            ),
                            React.createElement(
                                "div",
                                { className: "input-group m-b-20" },
                                React.createElement(
                                    "span",
                                    { className: "input-group-addon" },
                                    React.createElement("i", { className: "zmdi zmdi-male" })
                                ),
                                React.createElement(
                                    "div",
                                    { className: "fg-line" },
                                    React.createElement("input", { type: "password", name: "password", className: "form-control", placeholder: (0, _strings2.default)("password") })
                                )
                            ),
                            React.createElement(
                                "button",
                                { type: "submit", className: "btn btn-login btn-success btn-float animated fadeInLeft" },
                                React.createElement("i", { className: "zmdi zmdi-check" })
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "lcb-navigation" },
                            React.createElement(
                                "a",
                                { href: "#login", "data-ma-block": "#l-login" },
                                React.createElement("i", { className: "zmdi zmdi-long-arrow-right" }),
                                " ",
                                React.createElement(
                                    "span",
                                    null,
                                    (0, _strings2.default)("signIn")
                                )
                            ),
                            React.createElement(
                                "a",
                                { href: "#recover", "data-ma-block": "#l-forget-password" },
                                React.createElement(
                                    "i",
                                    null,
                                    "?"
                                ),
                                " ",
                                React.createElement(
                                    "span",
                                    null,
                                    (0, _strings2.default)("forgotPassword")
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return Register;
}(_layout.Screen);

exports.default = Register;
});
define('web/screens/registrationOk.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _stores = require("../../stores");

var _strings = require("../../strings");

var _strings2 = _interopRequireDefault(_strings);

var _aj = require("../utils/aj");

var _layout = require("../components/layout");

var _ui = require("../utils/ui");

var ui = _interopRequireWildcard(_ui);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RegistrationOk = function (_Screen) {
    _inherits(RegistrationOk, _Screen);

    function RegistrationOk(props) {
        _classCallCheck(this, RegistrationOk);

        var _this = _possibleConstructorReturn(this, (RegistrationOk.__proto__ || Object.getPrototypeOf(RegistrationOk)).call(this, props));

        (0, _aj.connect)(_this, _stores.AccountStore);
        return _this;
    }

    _createClass(RegistrationOk, [{
        key: "goHome",
        value: function goHome() {
            ui.navigate("/");
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                _layout.FullScreenLayout,
                null,
                React.createElement(
                    "div",
                    { className: "login-content" },
                    React.createElement(
                        "div",
                        { className: "lc-block toggled", id: "l-login" },
                        React.createElement(
                            "div",
                            { className: "text-center m-b-10" },
                            React.createElement("img", { src: "resources/images/logo.png" })
                        ),
                        React.createElement(
                            "div",
                            { className: "jumbotron p-20" },
                            React.createElement(
                                "h1",
                                null,
                                (0, _strings2.default)("congratulations"),
                                "!"
                            ),
                            React.createElement(
                                "p",
                                null,
                                this.state.message
                            ),
                            React.createElement(
                                "p",
                                null,
                                React.createElement(
                                    "a",
                                    { className: "btn btn-primary btn-lg waves-effect", href: "javascript:;", onClick: this.goHome.bind(this), role: "button" },
                                    (0, _strings2.default)("continue")
                                )
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "lcb-navigation" },
                            React.createElement(
                                "a",
                                { href: "#register", "data-ma-block": "#l-register" },
                                React.createElement("i", { className: "zmdi zmdi-plus" }),
                                " ",
                                React.createElement(
                                    "span",
                                    null,
                                    (0, _strings2.default)("register")
                                )
                            ),
                            React.createElement(
                                "a",
                                { href: "#recover", "data-ma-block": "#l-forget-password" },
                                React.createElement(
                                    "i",
                                    null,
                                    "?"
                                ),
                                " ",
                                React.createElement(
                                    "span",
                                    null,
                                    (0, _strings2.default)("forgotPassword")
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return RegistrationOk;
}(_layout.Screen);

exports.default = RegistrationOk;
});
define('web/utils/aj.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.connect = connect;
exports.connectDiscriminated = connectDiscriminated;

var _ajex = require("../../utils/ajex");

function connectInternal(setState, component, stores, localState) {
    var singleStore = !_.isArray(stores);

    if (!_.isArray(stores)) {
        stores = [stores];
    }

    var originals = {
        componentDidMount: component.componentDidMount,
        componentWillUnmount: component.componentWillUnmount
    };

    if (singleStore) {
        component.state = singleStore.state || localState;
    }

    component.componentDidMount = function () {
        _.each(stores, function (store) {
            store.subscribe(component, function (state) {
                return setState(component, state);
            });
            setState(component, store.state || {});
        });

        if (_.isFunction(originals.componentDidMount)) {
            originals.componentDidMount.call(component);
        }
    };

    component.componentWillUnmount = function () {
        _.each(stores, function (store) {
            store.unsubscribe(component);
        });

        if (_.isFunction(originals.componentWillUnmount)) {
            originals.componentWillUnmount.call(component);
        }
    };
}

function connect(component, stores) {
    var localState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    return connectInternal(function (component, state) {
        return component.setState(state);
    }, component, stores, localState);
}

function connectDiscriminated(discriminator, component, stores) {
    var localState = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

    return connectInternal(function (component, state) {
        return component.setState((0, _ajex.discriminated)(state, discriminator));
    }, component, stores, localState);
}
});
define('web/utils/events.js', function(module, exports) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var EventEmitter = {};
EventEmitter.addListener = function (obj, evt, handler) {
    var listeners = obj.__events_listeners;
    if (!listeners) {
        listeners = {};
        obj.__events_listeners = listeners;
    }

    if (!listeners[evt]) {
        listeners[evt] = [];
    }

    listeners[evt].push(handler);
};

EventEmitter.addListeners = function (obj, listeners) {
    for (var key in listeners) {
        events.addListener(obj, key, listeners[key]);
    }
};

EventEmitter.removeListener = function (obj, evt, listener) {
    if (obj.__events_listeners && obj.__events_listeners[evt]) {
        obj.__events_listeners[evt] = obj.__events_listeners[evt].filter(function (l) {
            return l != listener;
        });
    }
};

EventEmitter.on = function (obj, evt, handler) {
    if ($.isPlainObject(evt)) {
        EventEmitter.addListeners(obj, evt);
    } else {
        EventEmitter.addListener(obj, evt, handler);
    }
};

EventEmitter.live = function (obj, evt) {
    if (!obj.__events_offs) obj.__events_offs = {};
    if (evt) {
        obj.__events_offs[evt] = false;
    } else {
        obj.__events_off = false;
    }
};

EventEmitter.die = function (obj, evt) {
    if (!obj.__events_offs) obj.__events_offs = {};
    if (evt) {
        obj.__events_offs[evt] = true;
    } else {
        obj.__events_off = true;
    }
};

EventEmitter.invoke = function (obj, evt) {
    if (!obj.__events_offs) obj.__events_offs = {};
    if (obj.__events_off) return;
    if (obj.__events_offs[evt]) return;

    var listeners = obj.__events_listeners;
    if (!listeners) {
        listeners = {};
        obj.__events_listeners = listeners;
    }

    var handlers = listeners[evt];
    if (handlers) {
        var size = handlers.length;
        for (var i = 0; i < size; i++) {
            var h = handlers[i];
            h.apply(obj, Array.prototype.slice.call(arguments, 2));
        }
    }
};

var Observable = function () {
    function Observable() {
        _classCallCheck(this, Observable);
    }

    _createClass(Observable, [{
        key: "addListener",
        value: function addListener(evt, handler) {
            EventEmitter.addListener(this, evt, handler);
        }
    }, {
        key: "addListeners",
        value: function addListeners(listeners) {
            EventEmitter.addListeners(this, listeners);
        }
    }, {
        key: "removeListener",
        value: function removeListener(evt, handler) {
            EventEmitter.removeListener(evt, handler);
        }
    }, {
        key: "on",
        value: function on(evt, fn) {
            EventEmitter.on(this, evt, fn);
        }
    }, {
        key: "live",
        value: function live(evt) {
            EventEmitter.live(this, evt);
        }
    }, {
        key: "die",
        value: function die(evt) {
            EventEmitter.die(this, evt);
        }
    }, {
        key: "invoke",
        value: function invoke(evt) {
            Array.prototype.splice.call(arguments, 0, 0, this);
            EventEmitter.invoke.apply(this, arguments);
        }
    }]);

    return Observable;
}();

exports.EventEmitter = EventEmitter;
exports.Observable = Observable;
});
define('web/utils/forms.js', function(module, exports) {
"use strict";

function serialize(form) {
    var o = {};
    var a = $(form).serializeArray();
    $.each(a, function () {
        if (o[this.name] !== undefined) {
            if (!o[this.name].push) {
                o[this.name] = [o[this.name]];
            }
            o[this.name].push(this.value || '');
        } else {
            o[this.name] = this.value || '';
        }
    });
    return o;
}

exports.serialize = serialize;
});
define('web/utils/inputfile.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.cleanedData = cleanedData;
exports.dataUrl = dataUrl;
exports.readData = readData;
exports.readDataUrl = readDataUrl;
function cleanedData(data) {
    if (_.isEmpty(data)) {
        return null;
    }
    var search = ";base64,";
    var index = data.indexOf(search);
    if (index == -1) {
        return null;
    }

    var startIndex = index + search.length;
    return data.substring(startIndex);
}

function dataUrl(data, format) {
    return "data;base64," + data;
}

function _unchangedData(data) {
    return data;
}

function _readDataInternal(file, cleaner) {
    return new Promise(function (resolve, reject) {
        try {
            var reader = new FileReader();
            reader.onload = function (e) {
                resolve(cleaner(e.target.result));
            };
            reader.readAsDataURL(file);
        } catch (e) {
            reject(e);
        }
    });
}

function readData(file) {
    return _readDataInternal(file, cleanedData);
}

function readDataUrl(file) {
    return _readDataInternal(file, _unchangedData);
}
});
define('web/utils/keyboard.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isControl = isControl;
exports.isShift = isShift;
exports.isUp = isUp;
exports.isDown = isDown;
exports.isEnter = isEnter;
exports.isCancel = isCancel;
exports.isEsc = isEsc;
function isMac() {
    return navigator.platform.indexOf('Mac') > -1;
}

function isControl(which) {
    if (isMac()) {
        return which == 91 || which == 93;
    } else {
        return which == 17;
    }
}

function isShift(which) {
    return which == 16;
}

function isUp(which) {
    return which == 38;
}

function isDown(which) {
    return which == 40;
}

function isEnter(which) {
    return which == 13;
}

function isCancel(which) {
    return which == 46 || which == 8;
}

function isEsc(which) {
    return which == 27;
}
});
define('web/utils/mobile.js', function(module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isAndroid = isAndroid;
exports.isiOS = isiOS;
exports.isOpera = isOpera;
exports.isBlackBerry = isBlackBerry;
exports.isWindows = isWindows;
exports.isMobile = isMobile;
function isAndroid() {
    return navigator.userAgent.match(/Android/i);
}

function isiOS() {
    return navigator.userAgent.match(/iPhone|iPad|iPod/i);
}

function isOpera() {
    return navigator.userAgent.match(/Opera Mini/i);
}

function isBlackBerry() {
    return navigator.userAgent.match(/BlackBerry/i);
}

function isWindows() {
    return navigator.userAgent.match(/IEMobile/i) || navigator.userAgent.match(/WPDesktop/i);
}

function isMobile() {
    return isAndroid() || isBlackBerry() || isiOS() || isOpera() || isWindows();
}
});
define('web/utils/path.js', function(module, exports) {
"use strict";

function extension(filename) {
    var lastIndexOfDot = filename.lastIndexOf('.');
    if (lastIndexOfDot === -1) {
        return '';
    }
    return filename.substr(lastIndexOfDot + 1).toLowerCase();
}

function basename(filename) {
    var fileExtension = this.extension(filename);
    if (!Boolean(fileExtension)) {
        return filename;
    }
    return filename.substr(0, filename.lastIndexOf('.'));
}

function removeSuffix(filename) {
    return this.removeSuffixWithDelimiter('.', filename);
}

function removeSuffixWithDelimiter(delimiter, filename) {
    var fileExtension = this.extension(filename);
    var fileBasename = this.basename(filename);
    var lastIndexOfDelimiter = fileBasename.lastIndexOf(delimiter);
    if (lastIndexOfDelimiter === -1) {
        return filename;
    }
    return fileBasename.substr(0, lastIndexOfDelimiter) + '.' + fileExtension;
}

function appendSuffix(suffix, filename) {
    return this.appendSuffixWithDelimiter(suffix, '.', filename);
}

function appendSuffixWithDelimiter(suffix, delimiter, filename) {
    if (Object.prototype.toString.call(suffix) !== '[object Array]') {
        suffix = [suffix];
    }

    var fileExtension = this.extension(filename);
    var newFilename = [this.basename(filename), delimiter].concat(suffix.join(delimiter));

    if (fileExtension) {
        newFilename.push('.');
        newFilename.push(fileExtension);
    }

    return newFilename.join('');
}

function directoryName(filename) {
    if (!this.extension(filename)) {
        return filename;
    }
    return filename.substr(0, filename.lastIndexOf('/'));
}

exports.extension = extension;
exports.basename = basename;
exports.removeSuffix = removeSuffix;
exports.removeSuffixWithDelimiter = removeSuffixWithDelimiter;
exports.appendSuffix = appendSuffix;
exports.appendSuffixWithDelimiter = appendSuffixWithDelimiter;
exports.directoryName = directoryName;
});
define('web/utils/polyfill.js', function(module, exports) {
"use strict";

String.prototype.format = function () {
    var args = arguments;

    return this.replace(/\{(\d+)\}/g, function () {
        return args[arguments[1]];
    });
};

String.prototype.contains = function (search) {
    if (!search) {
        return false;
    }

    return this.indexOf(search) != -1;
};
});
define('web/utils/ui.js', function(module, exports) {
"use strict";

var M = require("../../strings").default;

var _require = require("./events"),
    Observable = _require.Observable;

var router = new RouteRecognizer();
var base = null;
var lastFragment = null;
var veryLastFragment = null;
var screens = new Observable();
var beforeChangeListeners = [];
var routerDisabledNextTime = false;

function _handleRoute(fragment) {
	var route = router.recognize(fragment);
	if (route) {
		var params = _.extend(route[0].params, route.queryParams || {});
		route[0].handler(params);
	}
}

function _clearSlashes(path) {
	return path.toString().replace(/\/$/, '').replace(/^\//, '');
}

exports.addRoute = function (path, handler) {
	router.add([{ path: path, handler: handler }]);
};

exports.startNavigation = function (_base) {
	base = _base || "#";

	var loop = function loop() {
		var fragment = "/";
		if (location.href.indexOf("#") !== -1) {
			fragment = _clearSlashes(location.href.split("#")[1]);
		}

		if (lastFragment !== fragment) {
			veryLastFragment = lastFragment;
			lastFragment = fragment;

			if (!routerDisabledNextTime) {
				_handleRoute(fragment);
			}

			routerDisabledNextTime = false;
		}

		window.setTimeout(loop, 100);
	};

	loop();
};

exports.navigate = function (path) {
	history.pushState(null, null, _clearSlashes(base + path));
};

exports.changeScreen = function (screen) {
	for (var i = 0; i < beforeChangeListeners.length; i++) {
		var listener = beforeChangeListeners[i];
		if (_.isFunction(listener)) {
			var out = listener();

			if (out) {
				swal({ title: M("confirm"), text: M("formChangeAlert"), showCancelButton: true }).then(function () {
					screens.invoke("screen.change", screen);
				}).catch(function () {
					if (!_.isEmpty(veryLastFragment)) {
						routerDisabledNextTime = true;
						window.location.href = "#" + veryLastFragment;
					}
				});

				return;
			}
		}
	}

	screens.invoke("screen.change", screen);
};

exports.addScreenChangeListener = function (listener) {
	screens.addListener("screen.change", listener);
};

exports.removeScreenChangeListener = function (listener) {
	screens.removeListener("screen.change", listener);
};

exports.addOnBeforeChangeListener = function (listener) {
	beforeChangeListeners.push(listener);
};

exports.removeOnBeforeChangeListener = function (listener) {
	beforeChangeListeners = _.filter(beforeChangeListeners, function (l) {
		return l !== listener;
	});
};
});

require('./aj').createRuntime();
require('./main').main();